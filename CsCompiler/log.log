2014-05-29 22:40:30 INFO  CsCompiler:50 - Parse of Test.cs completed successfully
2014-05-29 22:40:30 INFO  CsCompiler:65 - 0; cls_def; publicclassTest{privateintxxx=1,yyy;publicstaticvoidMain(){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-05-29 22:40:30 INFO  CsCompiler:66 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@57,224:224='}',<27>,12:0]}
2014-05-29 22:40:30 TRACE ClassDef:34 - AccessModifiers#: 1
2014-05-29 22:40:30 TRACE ClassDef:36 - OtherModifiers#: 1
2014-05-29 22:40:30 TRACE ClassDef:42 - Class name: Test
2014-05-29 22:40:30 TRACE ClassField:19 - Method added: xxx
2014-05-29 22:40:30 TRACE ClassField:32 - Field added: xxx
2014-05-29 22:40:30 TRACE ClassField:19 - Method added: yyy
2014-05-29 22:40:30 TRACE ClassField:32 - Field added: yyy
2014-05-29 22:40:30 TRACE ClassMethod:24 - Method added: Main
2014-05-29 22:40:30 INFO  CsCompiler:65 - 1; declaration; privateintxxx=1,yyy;
2014-05-29 22:40:30 INFO  CsCompiler:66 - 	 ParserRuleContext[cls_def, declaration]{start=[@4,25:31='private',<16>,3:3], stop=[@11,49:49=';',<32>,3:27]}
2014-05-29 22:40:51 TRACE CsCompiler:36 - RuleIndexMap: {expression=28, inclusive_or_expression=35, assignment_expression=30, parameter_type_list=15, constant_expression=29, multiplicative_expression=21, jump_statement=46, compound_statement=42, relational_expression=39, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, cast_expression=22, postfix_expression=25, equality_expression=38, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=23, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=27, declaration=3, init_declarator_list=5, selection_statement=44, expression_statement=43, init_declarator=6, cls_def=0, identifier_list=18, exclusive_or_expression=36, enumerator_list=13, statement=41, logical_and_expression=34, additive_expression=20, conditional_expression=32, lvalue=31, and_expression=37, primary_expression=26, shift_expression=40, iteration_statement=45, logical_or_expression=33, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=24}
2014-05-29 22:40:51 TRACE CsCompiler:37 - TokenTypeMap: {'/'=40, '||'=45, '&&'=44, ';'=32, 'return'=13, SHIFT_OPERATOR=23, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=37, EQUALITY_OPERATOR=21, '.'=35, '^'=43, '++'=24, STRING_LITERAL=50, 'else'=7, FLOATING_POINT_LITERAL=54, 'break'=12, IDENTIFIER=48, '{'=26, '...'=36, PRIMITIVE_TYPE=14, '?'=46, HEX_LITERAL=51, 'if'=6, '('=28, ':'=33, COMMENT=56, 'while'=9, '-'=38, ','=34, 'default'=5, ']'=31, 'enum'=3, '|'=42, 'class'=2, 'new'=1, LINE_COMMENT=57, ASSIGN_AND_MODIFY_OPERATOR=19, OCTAL_LITERAL=53, CHARACTER_LITERAL=49, '='=18, ')'=29, '%'=47, 'do'=10, 'case'=4, '}'=27, WS=55, COMPARSION_OPERATOR=22, OTHER_MODIFIER=17, LINE_COMMAND=58, ACCESS_MODIFIER=16, 'continue'=11, <INVALID>=0, '--'=25, '['=30, '*'=39, UNARY_OPERATOR=20, DECIMAL_LITERAL=52, '&'=41}
2014-05-29 22:40:51 DEBUG CsCompiler:39 - Printing parse tree:
2014-05-29 22:40:51 DEBUG CsCompiler:40 - (cls_def public class Test { (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (cast_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) , (init_declarator yyy)) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier int)) i))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (cast_expression (unary_expression (postfix_expression (primary_expression (constant 5))))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (cast_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (cast_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (cast_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (cast_expression (unary_expression (postfix_expression (primary_expression (constant 3)))))))))))))))))) ])))))))))))))))))) ;) (statement (expression_statement (expression (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (cast_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (cast_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!")))))))))))))))))) ))))))))))))))))))) ;)) (statement (expression_statement (expression (assignment_expression (lvalue (unary_expression (postfix_expression (primary_expression a)))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (cast_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))))) ;)) })) })
2014-05-29 22:40:51 INFO  CsCompiler:50 - Parse of Test.cs completed successfully
2014-05-29 22:40:51 INFO  CsCompiler:65 - 0; cls_def; publicclassTest{privateintxxx=1,yyy;publicstaticvoidMain(inti){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-05-29 22:40:51 INFO  CsCompiler:66 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@59,229:229='}',<27>,12:0]}
2014-05-29 22:40:51 TRACE ClassDef:34 - AccessModifiers#: 1
2014-05-29 22:40:51 TRACE ClassDef:36 - OtherModifiers#: 1
2014-05-29 22:40:51 TRACE ClassDef:42 - Class name: Test
2014-05-29 22:40:51 TRACE ClassField:19 - Method added: xxx
2014-05-29 22:40:51 TRACE ClassField:32 - Field added: xxx
2014-05-29 22:40:51 TRACE ClassField:19 - Method added: yyy
2014-05-29 22:40:51 TRACE ClassField:32 - Field added: yyy
2014-05-29 22:40:51 TRACE ClassMethod:24 - Method added: Main
2014-05-29 22:40:51 TRACE MethodArg:13 - MethodArg added: i
2014-05-29 22:40:51 INFO  CsCompiler:65 - 1; declaration; privateintxxx=1,yyy;
2014-05-29 22:40:51 INFO  CsCompiler:66 - 	 ParserRuleContext[cls_def, declaration]{start=[@4,25:31='private',<16>,3:3], stop=[@11,49:49=';',<32>,3:27]}
2014-05-31 16:21:32 TRACE CsCompiler:36 - RuleIndexMap: {expression=28, inclusive_or_expression=35, assignment_expression=30, parameter_type_list=15, constant_expression=29, multiplicative_expression=21, jump_statement=46, compound_statement=42, relational_expression=39, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, cast_expression=22, postfix_expression=25, equality_expression=38, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=23, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=27, declaration=3, init_declarator_list=5, selection_statement=44, expression_statement=43, init_declarator=6, cls_def=0, identifier_list=18, exclusive_or_expression=36, enumerator_list=13, statement=41, logical_and_expression=34, additive_expression=20, conditional_expression=32, lvalue=31, and_expression=37, primary_expression=26, shift_expression=40, iteration_statement=45, logical_or_expression=33, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=24}
2014-05-31 16:21:32 TRACE CsCompiler:37 - TokenTypeMap: {'/'=40, '||'=45, '&&'=44, ';'=32, 'return'=13, SHIFT_OPERATOR=23, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=37, EQUALITY_OPERATOR=21, '.'=35, '^'=43, '++'=24, STRING_LITERAL=50, 'else'=7, FLOATING_POINT_LITERAL=54, 'break'=12, IDENTIFIER=48, '{'=26, '...'=36, PRIMITIVE_TYPE=14, '?'=46, HEX_LITERAL=51, 'if'=6, '('=28, ':'=33, COMMENT=56, 'while'=9, '-'=38, ','=34, 'default'=5, ']'=31, 'enum'=3, '|'=42, 'class'=2, 'new'=1, LINE_COMMENT=57, ASSIGN_AND_MODIFY_OPERATOR=19, OCTAL_LITERAL=53, CHARACTER_LITERAL=49, '='=18, ')'=29, '%'=47, 'do'=10, 'case'=4, '}'=27, WS=55, COMPARSION_OPERATOR=22, OTHER_MODIFIER=17, LINE_COMMAND=58, ACCESS_MODIFIER=16, 'continue'=11, <INVALID>=0, '--'=25, '['=30, '*'=39, UNARY_OPERATOR=20, DECIMAL_LITERAL=52, '&'=41}
2014-05-31 16:21:32 DEBUG CsCompiler:39 - Printing parse tree:
2014-05-31 16:21:32 DEBUG CsCompiler:40 - (cls_def public class Test { (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (cast_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) , (init_declarator yyy)) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (lvalue (unary_expression (postfix_expression (primary_expression yyy)))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (cast_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier int)) i))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (cast_expression (unary_expression (postfix_expression (primary_expression (constant 5))))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (cast_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (cast_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (cast_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (cast_expression (unary_expression (postfix_expression (primary_expression (constant 3)))))))))))))))))) ])))))))))))))))))) ;) (statement (expression_statement (expression (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (cast_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (cast_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!")))))))))))))))))) ))))))))))))))))))) ;)) (statement (expression_statement (expression (assignment_expression (lvalue (unary_expression (postfix_expression (primary_expression a)))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (cast_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))))) ;)) })) })
2014-05-31 16:21:33 INFO  CsCompiler:50 - Parse of Test.cs completed successfully
2014-05-31 16:21:33 INFO  CsCompiler:65 - 0; cls_def; publicclassTest{privateintxxx=1,yyy;privateintzzz=yyy=123;publicstaticvoidMain(inti){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-05-31 16:21:33 INFO  CsCompiler:66 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@67,262:262='}',<27>,13:0]}
2014-05-31 16:21:33 TRACE ClassDef:34 - AccessModifiers#: 1
2014-05-31 16:21:33 TRACE ClassDef:36 - OtherModifiers#: 1
2014-05-31 16:21:33 TRACE ClassDef:42 - Class name: Test
2014-05-31 16:21:33 TRACE ClassField:21 - Method added: xxx
2014-05-31 16:21:33 TRACE ClassField:36 - Field added: xxx
2014-05-31 16:21:33 TRACE ClassField:21 - Method added: yyy
2014-05-31 16:21:33 TRACE ClassField:36 - Field added: yyy
2014-05-31 16:21:33 TRACE ClassField:21 - Method added: zzz
2014-05-31 16:21:33 TRACE ClassField:36 - Field added: zzz
2014-05-31 16:21:33 TRACE ClassMethod:24 - Method added: Main
2014-05-31 16:21:33 TRACE MethodArg:13 - MethodArg added: i
2014-05-31 16:21:33 INFO  CsCompiler:65 - 1; declaration; privateintxxx=1,yyy;
2014-05-31 16:21:33 INFO  CsCompiler:66 - 	 ParserRuleContext[cls_def, declaration]{start=[@4,25:31='private',<16>,3:3], stop=[@11,49:49=';',<32>,3:27]}
2014-05-31 16:22:07 TRACE CsCompiler:36 - RuleIndexMap: {expression=28, inclusive_or_expression=35, assignment_expression=30, parameter_type_list=15, constant_expression=29, multiplicative_expression=21, jump_statement=46, compound_statement=42, relational_expression=39, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, cast_expression=22, postfix_expression=25, equality_expression=38, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=23, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=27, declaration=3, init_declarator_list=5, selection_statement=44, expression_statement=43, init_declarator=6, cls_def=0, identifier_list=18, exclusive_or_expression=36, enumerator_list=13, statement=41, logical_and_expression=34, additive_expression=20, conditional_expression=32, lvalue=31, and_expression=37, primary_expression=26, shift_expression=40, iteration_statement=45, logical_or_expression=33, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=24}
2014-05-31 16:22:07 TRACE CsCompiler:37 - TokenTypeMap: {'/'=40, '||'=45, '&&'=44, ';'=32, 'return'=13, SHIFT_OPERATOR=23, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=37, EQUALITY_OPERATOR=21, '.'=35, '^'=43, '++'=24, STRING_LITERAL=50, 'else'=7, FLOATING_POINT_LITERAL=54, 'break'=12, IDENTIFIER=48, '{'=26, '...'=36, PRIMITIVE_TYPE=14, '?'=46, HEX_LITERAL=51, 'if'=6, '('=28, ':'=33, COMMENT=56, 'while'=9, '-'=38, ','=34, 'default'=5, ']'=31, 'enum'=3, '|'=42, 'class'=2, 'new'=1, LINE_COMMENT=57, ASSIGN_AND_MODIFY_OPERATOR=19, OCTAL_LITERAL=53, CHARACTER_LITERAL=49, '='=18, ')'=29, '%'=47, 'do'=10, 'case'=4, '}'=27, WS=55, COMPARSION_OPERATOR=22, OTHER_MODIFIER=17, LINE_COMMAND=58, ACCESS_MODIFIER=16, 'continue'=11, <INVALID>=0, '--'=25, '['=30, '*'=39, UNARY_OPERATOR=20, DECIMAL_LITERAL=52, '&'=41}
2014-05-31 16:22:07 DEBUG CsCompiler:39 - Printing parse tree:
2014-05-31 16:22:07 DEBUG CsCompiler:40 - (cls_def public class Test { (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (cast_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) , (init_declarator yyy)) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (lvalue (unary_expression (postfix_expression (primary_expression yyy)))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (cast_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier int)) i))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (cast_expression (unary_expression (postfix_expression (primary_expression (constant 5))))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (cast_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (cast_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (cast_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (cast_expression (unary_expression (postfix_expression (primary_expression (constant 3)))))))))))))))))) ])))))))))))))))))) ;) (statement (expression_statement (expression (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (cast_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (cast_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!")))))))))))))))))) ))))))))))))))))))) ;)) (statement (expression_statement (expression (assignment_expression (lvalue (unary_expression (postfix_expression (primary_expression a)))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (cast_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))))) ;)) })) })
2014-05-31 16:22:07 INFO  CsCompiler:50 - Parse of Test.cs completed successfully
2014-05-31 16:22:07 INFO  CsCompiler:65 - 0; cls_def; publicclassTest{privateintxxx=1,yyy;privateintzzz=yyy=123;publicstaticvoidMain(inti){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-05-31 16:22:07 INFO  CsCompiler:66 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@67,262:262='}',<27>,13:0]}
2014-05-31 16:22:07 TRACE ClassDef:34 - AccessModifiers#: 1
2014-05-31 16:22:07 TRACE ClassDef:36 - OtherModifiers#: 1
2014-05-31 16:22:07 TRACE ClassDef:42 - Class name: Test
2014-05-31 16:22:07 TRACE ClassField:21 - Method added: xxx
2014-05-31 16:22:07 TRACE ClassField:36 - Field added: xxx
2014-05-31 16:22:07 TRACE ClassField:21 - Method added: yyy
2014-05-31 16:22:07 TRACE ClassField:36 - Field added: yyy
2014-05-31 16:22:07 TRACE ClassField:21 - Method added: zzz
2014-05-31 16:22:07 TRACE ClassField:36 - Field added: zzz
2014-05-31 16:22:07 TRACE ClassMethod:24 - Method added: Main
2014-05-31 16:22:07 TRACE MethodArg:13 - MethodArg added: i
2014-05-31 16:22:07 INFO  CsCompiler:65 - 1; declaration; privateintxxx=1,yyy;
2014-05-31 16:22:07 INFO  CsCompiler:66 - 	 ParserRuleContext[cls_def, declaration]{start=[@4,25:31='private',<16>,3:3], stop=[@11,49:49=';',<32>,3:27]}
2014-06-10 20:20:45 TRACE CsCompiler:36 - RuleIndexMap: {expression=27, assign_and_modify_operator=44, assignment_expression=28, multiplicative_expression=21, compound_statement=39, jump_statement=43, declaration_specifier=4, equality_expression=35, enumerator=14, arg_suffix=9, arr_arg_suffix=8, cls_method=1, declaration=3, init_declarator_list=5, init_declarator=6, identifier_list=18, shift_operator=48, enumerator_list=13, exclusive_or_expression=33, comparsion_operator=47, statement=38, logical_and_expression=31, additive_expression=20, unary_operator=45, shift_expression=37, logical_or_expression=30, iteration_statement=42, constructor_call=23, argument_expression_list=19, parameter_list=16, inclusive_or_expression=32, parameter_type_list=15, equality_operator=46, relational_expression=36, enum_specifier=12, parameter_declaration=17, postfix_expression=24, assignment_operator=2, unary_expression=22, arr_suffix=7, constant=26, expression_statement=40, selection_statement=41, cls_def=0, conditional_expression=29, primary_expression=25, and_expression=34, type_specifier=11, declarator_suffix=10}
2014-06-10 20:20:45 TRACE CsCompiler:37 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-10 20:20:45 DEBUG CsCompiler:39 - Printing parse tree:
2014-06-10 20:20:45 DEBUG CsCompiler:40 - (cls_def public class Test { (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy)) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (unary_expression (postfix_expression (primary_expression yyy))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier int)) i))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (expression (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console)) . (postfix_expression (primary_expression WriteLine)) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) )))))))))))))))) ;)) (declaration (declaration_specifier (type_specifier a)) (init_declarator_list (init_declarator (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;) })) })
2014-06-10 20:20:45 ERROR CsCompiler:47 - Parse of Test.cs failed: 3 errors found
2014-06-10 20:22:49 TRACE CsCompiler:36 - RuleIndexMap: {expression=27, assign_and_modify_operator=44, assignment_expression=28, multiplicative_expression=21, compound_statement=39, jump_statement=43, declaration_specifier=4, equality_expression=35, enumerator=14, arg_suffix=9, arr_arg_suffix=8, cls_method=1, declaration=3, init_declarator_list=5, init_declarator=6, identifier_list=18, shift_operator=48, enumerator_list=13, exclusive_or_expression=33, comparsion_operator=47, statement=38, logical_and_expression=31, additive_expression=20, unary_operator=45, shift_expression=37, logical_or_expression=30, iteration_statement=42, constructor_call=23, argument_expression_list=19, parameter_list=16, inclusive_or_expression=32, parameter_type_list=15, equality_operator=46, relational_expression=36, enum_specifier=12, parameter_declaration=17, postfix_expression=24, assignment_operator=2, unary_expression=22, arr_suffix=7, constant=26, expression_statement=40, selection_statement=41, cls_def=0, conditional_expression=29, primary_expression=25, and_expression=34, type_specifier=11, declarator_suffix=10}
2014-06-10 20:22:49 TRACE CsCompiler:37 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-10 20:22:49 DEBUG CsCompiler:39 - Printing parse tree:
2014-06-10 20:22:49 DEBUG CsCompiler:40 - (cls_def public class Test { (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy)) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (unary_expression (postfix_expression (primary_expression yyy))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier int)) i))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier a)) (init_declarator_list (init_declarator (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;) })) })
2014-06-10 20:22:50 INFO  CsCompiler:50 - Parse of Test.cs completed successfully
2014-06-10 20:22:50 INFO  CsCompiler:65 - 0; cls_def; publicclassTest{privateintxxx=1,yyy;privateintzzz=yyy=123;publicstaticvoidMain(inti){inta=5;int[,][]testInt=newint[1,2][3];a=6;}}
2014-06-10 20:22:50 INFO  CsCompiler:66 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@58,264:264='}',<40>,13:0]}
2014-06-10 20:22:50 TRACE ClassDef:38 - AccessModifiers#: 1
2014-06-10 20:22:50 TRACE ClassDef:40 - OtherModifiers#: 1
2014-06-10 20:22:50 TRACE ClassDef:47 - Class name: Test
2014-06-10 20:22:50 TRACE Variable:29 - Method added: xxx
2014-06-10 20:26:30 TRACE CsCompiler:36 - RuleIndexMap: {expression=27, assign_and_modify_operator=44, assignment_expression=28, multiplicative_expression=21, compound_statement=39, jump_statement=43, declaration_specifier=4, equality_expression=35, enumerator=14, arg_suffix=9, arr_arg_suffix=8, cls_method=1, declaration=3, init_declarator_list=5, init_declarator=6, identifier_list=18, shift_operator=48, enumerator_list=13, exclusive_or_expression=33, comparsion_operator=47, statement=38, logical_and_expression=31, additive_expression=20, unary_operator=45, shift_expression=37, logical_or_expression=30, iteration_statement=42, constructor_call=23, argument_expression_list=19, parameter_list=16, inclusive_or_expression=32, parameter_type_list=15, equality_operator=46, relational_expression=36, enum_specifier=12, parameter_declaration=17, postfix_expression=24, assignment_operator=2, unary_expression=22, arr_suffix=7, constant=26, expression_statement=40, selection_statement=41, cls_def=0, conditional_expression=29, primary_expression=25, and_expression=34, type_specifier=11, declarator_suffix=10}
2014-06-10 20:26:30 TRACE CsCompiler:37 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-10 20:26:30 DEBUG CsCompiler:39 - Printing parse tree:
2014-06-10 20:26:30 DEBUG CsCompiler:40 - (cls_def public class Test { (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy)) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (unary_expression (postfix_expression (primary_expression yyy))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier int)) i))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier a)) (init_declarator_list (init_declarator (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;) })) })
2014-06-10 20:26:31 INFO  CsCompiler:50 - Parse of Test.cs completed successfully
2014-06-10 20:26:31 INFO  CsCompiler:65 - 0; cls_def; publicclassTest{privateintxxx=1,yyy;privateintzzz=yyy=123;publicstaticvoidMain(inti){inta=5;int[,][]testInt=newint[1,2][3];a=6;}}
2014-06-10 20:26:31 INFO  CsCompiler:66 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@58,264:264='}',<40>,13:0]}
2014-06-10 20:26:31 TRACE ClassDef:38 - AccessModifiers#: 1
2014-06-10 20:26:31 TRACE ClassDef:40 - OtherModifiers#: 1
2014-06-10 20:26:31 TRACE ClassDef:47 - Class name: Test
2014-06-10 20:26:31 TRACE Variable:29 - Field/variable added: xxx
2014-06-10 20:29:14 TRACE CsCompiler:36 - RuleIndexMap: {expression=27, assign_and_modify_operator=44, assignment_expression=28, multiplicative_expression=21, compound_statement=39, jump_statement=43, declaration_specifier=4, equality_expression=35, enumerator=14, arg_suffix=9, arr_arg_suffix=8, cls_method=1, declaration=3, init_declarator_list=5, init_declarator=6, identifier_list=18, shift_operator=48, enumerator_list=13, exclusive_or_expression=33, comparsion_operator=47, statement=38, logical_and_expression=31, additive_expression=20, unary_operator=45, shift_expression=37, logical_or_expression=30, iteration_statement=42, constructor_call=23, argument_expression_list=19, parameter_list=16, inclusive_or_expression=32, parameter_type_list=15, equality_operator=46, relational_expression=36, enum_specifier=12, parameter_declaration=17, postfix_expression=24, assignment_operator=2, unary_expression=22, arr_suffix=7, constant=26, expression_statement=40, selection_statement=41, cls_def=0, conditional_expression=29, primary_expression=25, and_expression=34, type_specifier=11, declarator_suffix=10}
2014-06-10 20:29:14 TRACE CsCompiler:37 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-10 20:29:14 DEBUG CsCompiler:39 - Printing parse tree:
2014-06-10 20:29:14 DEBUG CsCompiler:40 - (cls_def public class Test { (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy)) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (unary_expression (postfix_expression (primary_expression yyy))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier int)) i))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier a)) (init_declarator_list (init_declarator (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;) })) })
2014-06-10 20:29:15 INFO  CsCompiler:50 - Parse of Test.cs completed successfully
2014-06-10 20:29:15 INFO  CsCompiler:65 - 0; cls_def; publicclassTest{privateintxxx=1,yyy;privateintzzz=yyy=123;publicstaticvoidMain(inti){inta=5;int[,][]testInt=newint[1,2][3];a=6;}}
2014-06-10 20:29:15 INFO  CsCompiler:66 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@58,264:264='}',<40>,13:0]}
2014-06-10 20:29:15 TRACE ClassDef:38 - AccessModifiers#: 1
2014-06-10 20:29:15 TRACE ClassDef:40 - OtherModifiers#: 1
2014-06-10 20:29:15 TRACE ClassDef:47 - Class name: Test
2014-06-10 20:29:15 TRACE Variable:29 - Field/variable added: xxx
2014-06-10 20:31:03 TRACE CsCompiler:36 - RuleIndexMap: {expression=27, assign_and_modify_operator=44, assignment_expression=28, multiplicative_expression=21, compound_statement=39, jump_statement=43, declaration_specifier=4, equality_expression=35, enumerator=14, arg_suffix=9, arr_arg_suffix=8, cls_method=1, declaration=3, init_declarator_list=5, init_declarator=6, identifier_list=18, shift_operator=48, enumerator_list=13, exclusive_or_expression=33, comparsion_operator=47, statement=38, logical_and_expression=31, additive_expression=20, unary_operator=45, shift_expression=37, logical_or_expression=30, iteration_statement=42, constructor_call=23, argument_expression_list=19, parameter_list=16, inclusive_or_expression=32, parameter_type_list=15, equality_operator=46, relational_expression=36, enum_specifier=12, parameter_declaration=17, postfix_expression=24, assignment_operator=2, unary_expression=22, arr_suffix=7, constant=26, expression_statement=40, selection_statement=41, cls_def=0, conditional_expression=29, primary_expression=25, and_expression=34, type_specifier=11, declarator_suffix=10}
2014-06-10 20:31:03 TRACE CsCompiler:37 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-10 20:31:03 DEBUG CsCompiler:39 - Printing parse tree:
2014-06-10 20:31:03 DEBUG CsCompiler:40 - (cls_def public class Test { (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy)) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (unary_expression (postfix_expression (primary_expression yyy))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier int)) i))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier a)) (init_declarator_list (init_declarator (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;) })) })
2014-06-10 20:31:03 INFO  CsCompiler:50 - Parse of Test.cs completed successfully
2014-06-10 20:31:03 INFO  CsCompiler:65 - 0; cls_def; publicclassTest{privateintxxx=1,yyy;privateintzzz=yyy=123;publicstaticvoidMain(inti){inta=5;int[,][]testInt=newint[1,2][3];a=6;}}
2014-06-10 20:31:03 INFO  CsCompiler:66 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@58,264:264='}',<40>,13:0]}
2014-06-10 20:31:03 TRACE ClassDef:38 - AccessModifiers#: 1
2014-06-10 20:31:03 TRACE ClassDef:40 - OtherModifiers#: 1
2014-06-10 20:31:03 TRACE ClassDef:47 - Class name: Test
2014-06-10 20:31:03 TRACE Variable:29 - Field/variable added: xxx
2014-06-10 20:33:22 TRACE CsCompiler:36 - RuleIndexMap: {expression=27, assign_and_modify_operator=44, assignment_expression=28, multiplicative_expression=21, compound_statement=39, jump_statement=43, declaration_specifier=4, equality_expression=35, enumerator=14, arg_suffix=9, arr_arg_suffix=8, cls_method=1, declaration=3, init_declarator_list=5, init_declarator=6, identifier_list=18, shift_operator=48, enumerator_list=13, exclusive_or_expression=33, comparsion_operator=47, statement=38, logical_and_expression=31, additive_expression=20, unary_operator=45, shift_expression=37, logical_or_expression=30, iteration_statement=42, constructor_call=23, argument_expression_list=19, parameter_list=16, inclusive_or_expression=32, parameter_type_list=15, equality_operator=46, relational_expression=36, enum_specifier=12, parameter_declaration=17, postfix_expression=24, assignment_operator=2, unary_expression=22, arr_suffix=7, constant=26, expression_statement=40, selection_statement=41, cls_def=0, conditional_expression=29, primary_expression=25, and_expression=34, type_specifier=11, declarator_suffix=10}
2014-06-10 20:33:22 TRACE CsCompiler:37 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-10 20:33:22 DEBUG CsCompiler:39 - Printing parse tree:
2014-06-10 20:33:22 DEBUG CsCompiler:40 - (cls_def public class Test { (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy)) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (unary_expression (postfix_expression (primary_expression yyy))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier int)) i))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier a)) (init_declarator_list (init_declarator (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;) })) })
2014-06-10 20:33:23 INFO  CsCompiler:50 - Parse of Test.cs completed successfully
2014-06-10 20:33:23 INFO  CsCompiler:65 - 0; cls_def; publicclassTest{privateintxxx=1,yyy;privateintzzz=yyy=123;publicstaticvoidMain(inti){inta=5;int[,][]testInt=newint[1,2][3];a=6;}}
2014-06-10 20:33:23 INFO  CsCompiler:66 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@58,264:264='}',<40>,13:0]}
2014-06-10 20:33:23 TRACE ClassDef:38 - AccessModifiers#: 1
2014-06-10 20:33:23 TRACE ClassDef:40 - OtherModifiers#: 1
2014-06-10 20:33:23 TRACE ClassDef:47 - Class name: Test
2014-06-10 20:33:23 TRACE Variable:29 - Field/variable added: xxx
2014-06-10 20:34:47 TRACE CsCompiler:36 - RuleIndexMap: {expression=27, assign_and_modify_operator=44, assignment_expression=28, multiplicative_expression=21, compound_statement=39, jump_statement=43, declaration_specifier=4, equality_expression=35, enumerator=14, arg_suffix=9, arr_arg_suffix=8, cls_method=1, declaration=3, init_declarator_list=5, init_declarator=6, identifier_list=18, shift_operator=48, enumerator_list=13, exclusive_or_expression=33, comparsion_operator=47, statement=38, logical_and_expression=31, additive_expression=20, unary_operator=45, shift_expression=37, logical_or_expression=30, iteration_statement=42, constructor_call=23, argument_expression_list=19, parameter_list=16, inclusive_or_expression=32, parameter_type_list=15, equality_operator=46, relational_expression=36, enum_specifier=12, parameter_declaration=17, postfix_expression=24, assignment_operator=2, unary_expression=22, arr_suffix=7, constant=26, expression_statement=40, selection_statement=41, cls_def=0, conditional_expression=29, primary_expression=25, and_expression=34, type_specifier=11, declarator_suffix=10}
2014-06-10 20:34:47 TRACE CsCompiler:37 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-10 20:34:47 DEBUG CsCompiler:39 - Printing parse tree:
2014-06-10 20:34:47 DEBUG CsCompiler:40 - (cls_def public class Test { (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy)) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (unary_expression (postfix_expression (primary_expression yyy))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier int)) i))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier a)) (init_declarator_list (init_declarator (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;) })) })
2014-06-10 20:34:48 INFO  CsCompiler:50 - Parse of Test.cs completed successfully
2014-06-10 20:34:48 INFO  CsCompiler:65 - 0; cls_def; publicclassTest{privateintxxx=1,yyy;privateintzzz=yyy=123;publicstaticvoidMain(inti){inta=5;int[,][]testInt=newint[1,2][3];a=6;}}
2014-06-10 20:34:48 INFO  CsCompiler:66 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@58,264:264='}',<40>,13:0]}
2014-06-10 20:34:48 TRACE ClassDef:38 - AccessModifiers#: 1
2014-06-10 20:34:48 TRACE ClassDef:40 - OtherModifiers#: 1
2014-06-10 20:34:48 TRACE ClassDef:47 - Class name: Test
2014-06-10 20:34:48 TRACE Variable:29 - Field/variable added: xxx
2014-06-10 20:43:27 TRACE CsCompiler:36 - RuleIndexMap: {expression=27, assign_and_modify_operator=44, assignment_expression=28, multiplicative_expression=21, compound_statement=39, jump_statement=43, declaration_specifier=4, equality_expression=35, enumerator=14, arg_suffix=9, arr_arg_suffix=8, cls_method=1, declaration=3, init_declarator_list=5, init_declarator=6, identifier_list=18, shift_operator=48, enumerator_list=13, exclusive_or_expression=33, comparsion_operator=47, statement=38, logical_and_expression=31, additive_expression=20, unary_operator=45, shift_expression=37, logical_or_expression=30, iteration_statement=42, constructor_call=23, argument_expression_list=19, parameter_list=16, inclusive_or_expression=32, parameter_type_list=15, equality_operator=46, relational_expression=36, enum_specifier=12, parameter_declaration=17, postfix_expression=24, assignment_operator=2, unary_expression=22, arr_suffix=7, constant=26, expression_statement=40, selection_statement=41, cls_def=0, conditional_expression=29, primary_expression=25, and_expression=34, type_specifier=11, declarator_suffix=10}
2014-06-10 20:43:27 TRACE CsCompiler:37 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-10 20:43:27 DEBUG CsCompiler:39 - Printing parse tree:
2014-06-10 20:43:27 DEBUG CsCompiler:40 - (cls_def public class Test { (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy)) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (unary_expression (postfix_expression (primary_expression yyy))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier int)) i))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier a)) (init_declarator_list (init_declarator (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;) })) })
2014-06-10 20:43:27 INFO  CsCompiler:50 - Parse of Test.cs completed successfully
2014-06-10 20:43:27 INFO  CsCompiler:65 - 0; cls_def; publicclassTest{privateintxxx=1,yyy;privateintzzz=yyy=123;publicstaticvoidMain(inti){inta=5;int[,][]testInt=newint[1,2][3];a=6;}}
2014-06-10 20:43:27 INFO  CsCompiler:66 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@58,264:264='}',<40>,13:0]}
2014-06-10 20:43:27 TRACE ClassDef:38 - AccessModifiers#: 1
2014-06-10 20:43:27 TRACE ClassDef:40 - OtherModifiers#: 1
2014-06-10 20:43:27 TRACE ClassDef:47 - Class name: Test
2014-06-10 20:43:27 TRACE Variable:29 - Field/variable added: xxx
2014-06-10 20:43:27 TRACE Expression:37 - Expression added: DECIMAL_LITERAL
2014-06-10 20:43:27 TRACE Variable:29 - Field/variable added: yyy
2014-06-10 20:43:27 TRACE Variable:29 - Field/variable added: zzz
2014-06-10 20:43:27 TRACE Expression:37 - Expression added: MUL_ASS
2014-06-10 20:43:27 TRACE ClassMethod:33 - Method added: Main
2014-06-10 21:08:14 TRACE CsCompiler:36 - RuleIndexMap: {expression=27, assign_and_modify_operator=44, assignment_expression=28, multiplicative_expression=21, compound_statement=39, jump_statement=43, declaration_specifier=4, equality_expression=35, enumerator=14, arg_suffix=9, arr_arg_suffix=8, cls_method=1, declaration=3, init_declarator_list=5, init_declarator=6, identifier_list=18, shift_operator=48, enumerator_list=13, exclusive_or_expression=33, comparsion_operator=47, statement=38, logical_and_expression=31, additive_expression=20, unary_operator=45, shift_expression=37, logical_or_expression=30, iteration_statement=42, constructor_call=23, argument_expression_list=19, parameter_list=16, inclusive_or_expression=32, parameter_type_list=15, equality_operator=46, relational_expression=36, enum_specifier=12, parameter_declaration=17, postfix_expression=24, assignment_operator=2, unary_expression=22, arr_suffix=7, constant=26, expression_statement=40, selection_statement=41, cls_def=0, conditional_expression=29, primary_expression=25, and_expression=34, type_specifier=11, declarator_suffix=10}
2014-06-10 21:08:14 TRACE CsCompiler:37 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-10 21:08:14 DEBUG CsCompiler:39 - Printing parse tree:
2014-06-10 21:08:14 DEBUG CsCompiler:40 - (cls_def public class Test { (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier int)) i))) )) (compound_statement { (statement (expression_statement (expression (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console)) . (postfix_expression (primary_expression WriteLine)) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) )))))))))))))))) ;)) })) })
2014-06-10 21:08:15 ERROR CsCompiler:47 - Parse of Test.cs failed: 3 errors found
2014-06-10 21:10:10 TRACE CsCompiler:36 - RuleIndexMap: {expression=27, assign_and_modify_operator=44, assignment_expression=28, multiplicative_expression=21, compound_statement=39, jump_statement=43, declaration_specifier=4, equality_expression=35, enumerator=14, arg_suffix=9, arr_arg_suffix=8, cls_method=1, declaration=3, init_declarator_list=5, init_declarator=6, identifier_list=18, shift_operator=48, enumerator_list=13, exclusive_or_expression=33, comparsion_operator=47, statement=38, logical_and_expression=31, additive_expression=20, unary_operator=45, shift_expression=37, logical_or_expression=30, iteration_statement=42, constructor_call=23, argument_expression_list=19, parameter_list=16, inclusive_or_expression=32, parameter_type_list=15, equality_operator=46, relational_expression=36, enum_specifier=12, parameter_declaration=17, postfix_expression=24, assignment_operator=2, unary_expression=22, arr_suffix=7, constant=26, expression_statement=40, selection_statement=41, cls_def=0, conditional_expression=29, primary_expression=25, and_expression=34, type_specifier=11, declarator_suffix=10}
2014-06-10 21:10:10 TRACE CsCompiler:37 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-10 21:10:10 DEBUG CsCompiler:39 - Printing parse tree:
2014-06-10 21:10:10 DEBUG CsCompiler:40 - (cls_def public class Test { (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier int)) i))) )) (compound_statement { (statement (expression_statement (expression (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console)) . (postfix_expression (primary_expression WriteLine)) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) )))))))))))))))) <missing ';'>)) })) })
2014-06-10 21:10:11 ERROR CsCompiler:47 - Parse of Test.cs failed: 3 errors found
2014-06-10 21:12:26 TRACE CsCompiler:36 - RuleIndexMap: {expression=27, assign_and_modify_operator=44, assignment_expression=28, multiplicative_expression=21, compound_statement=39, jump_statement=43, declaration_specifier=4, equality_expression=35, enumerator=14, arg_suffix=9, arr_arg_suffix=8, cls_method=1, declaration=3, init_declarator_list=5, init_declarator=6, identifier_list=18, shift_operator=48, enumerator_list=13, exclusive_or_expression=33, comparsion_operator=47, statement=38, logical_and_expression=31, additive_expression=20, unary_operator=45, shift_expression=37, logical_or_expression=30, iteration_statement=42, constructor_call=23, argument_expression_list=19, parameter_list=16, inclusive_or_expression=32, parameter_type_list=15, equality_operator=46, relational_expression=36, enum_specifier=12, parameter_declaration=17, postfix_expression=24, assignment_operator=2, unary_expression=22, arr_suffix=7, constant=26, expression_statement=40, selection_statement=41, cls_def=0, conditional_expression=29, primary_expression=25, and_expression=34, type_specifier=11, declarator_suffix=10}
2014-06-10 21:12:26 TRACE CsCompiler:37 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-10 21:12:26 DEBUG CsCompiler:39 - Printing parse tree:
2014-06-10 21:12:26 DEBUG CsCompiler:40 - (cls_def public class Test { (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier int)) i))) )) (compound_statement { (statement (expression_statement (expression (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console)) . (postfix_expression (primary_expression WriteLine)) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) )))))))))))))))) ;)) })) })
2014-06-10 21:12:27 ERROR CsCompiler:47 - Parse of Test.cs failed: 3 errors found
2014-06-10 21:18:18 TRACE CsCompiler:36 - RuleIndexMap: {expression=27, assign_and_modify_operator=44, assignment_expression=28, multiplicative_expression=21, compound_statement=39, jump_statement=43, declaration_specifier=4, equality_expression=35, enumerator=14, arg_suffix=9, arr_arg_suffix=8, cls_method=1, declaration=3, init_declarator_list=5, init_declarator=6, identifier_list=18, shift_operator=48, enumerator_list=13, exclusive_or_expression=33, comparsion_operator=47, statement=38, logical_and_expression=31, additive_expression=20, unary_operator=45, shift_expression=37, logical_or_expression=30, iteration_statement=42, constructor_call=23, argument_expression_list=19, parameter_list=16, inclusive_or_expression=32, parameter_type_list=15, equality_operator=46, relational_expression=36, enum_specifier=12, parameter_declaration=17, postfix_expression=24, assignment_operator=2, unary_expression=22, arr_suffix=7, constant=26, expression_statement=40, selection_statement=41, cls_def=0, conditional_expression=29, primary_expression=25, and_expression=34, type_specifier=11, declarator_suffix=10}
2014-06-10 21:18:18 TRACE CsCompiler:37 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-10 21:18:18 DEBUG CsCompiler:39 - Printing parse tree:
2014-06-10 21:18:18 DEBUG CsCompiler:40 - (cls_def public class Test { (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier int)) i))) )) (compound_statement { (statement (expression_statement (expression (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console)) . (postfix_expression (primary_expression WriteLine)) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) )))))))))))))))))))) <missing '}'>)
2014-06-10 21:18:19 ERROR CsCompiler:47 - Parse of Test.cs failed: 3 errors found
2014-06-10 21:19:03 TRACE CsCompiler:36 - RuleIndexMap: {expression=27, assign_and_modify_operator=44, assignment_expression=28, multiplicative_expression=21, compound_statement=39, jump_statement=43, declaration_specifier=4, equality_expression=35, enumerator=14, arg_suffix=9, arr_arg_suffix=8, cls_method=1, declaration=3, init_declarator_list=5, init_declarator=6, identifier_list=18, shift_operator=48, enumerator_list=13, exclusive_or_expression=33, comparsion_operator=47, statement=38, logical_and_expression=31, additive_expression=20, unary_operator=45, shift_expression=37, logical_or_expression=30, iteration_statement=42, constructor_call=23, argument_expression_list=19, parameter_list=16, inclusive_or_expression=32, parameter_type_list=15, equality_operator=46, relational_expression=36, enum_specifier=12, parameter_declaration=17, postfix_expression=24, assignment_operator=2, unary_expression=22, arr_suffix=7, constant=26, expression_statement=40, selection_statement=41, cls_def=0, conditional_expression=29, primary_expression=25, and_expression=34, type_specifier=11, declarator_suffix=10}
2014-06-10 21:19:03 TRACE CsCompiler:37 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-10 21:19:03 DEBUG CsCompiler:39 - Printing parse tree:
2014-06-10 21:19:03 DEBUG CsCompiler:40 - (cls_def public class Test { (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier int)) i))) )) (compound_statement { (statement (expression_statement (expression (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console)) . (postfix_expression (primary_expression WriteLine)) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) )))))))))))))))) <missing ';'>)) })) <missing '}'>)
2014-06-10 21:19:04 ERROR CsCompiler:47 - Parse of Test.cs failed: 4 errors found
2014-06-10 21:19:26 TRACE CsCompiler:36 - RuleIndexMap: {expression=27, assign_and_modify_operator=44, assignment_expression=28, multiplicative_expression=21, compound_statement=39, jump_statement=43, declaration_specifier=4, equality_expression=35, enumerator=14, arg_suffix=9, arr_arg_suffix=8, cls_method=1, declaration=3, init_declarator_list=5, init_declarator=6, identifier_list=18, shift_operator=48, enumerator_list=13, exclusive_or_expression=33, comparsion_operator=47, statement=38, logical_and_expression=31, additive_expression=20, unary_operator=45, shift_expression=37, logical_or_expression=30, iteration_statement=42, constructor_call=23, argument_expression_list=19, parameter_list=16, inclusive_or_expression=32, parameter_type_list=15, equality_operator=46, relational_expression=36, enum_specifier=12, parameter_declaration=17, postfix_expression=24, assignment_operator=2, unary_expression=22, arr_suffix=7, constant=26, expression_statement=40, selection_statement=41, cls_def=0, conditional_expression=29, primary_expression=25, and_expression=34, type_specifier=11, declarator_suffix=10}
2014-06-10 21:19:26 TRACE CsCompiler:37 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-10 21:19:26 DEBUG CsCompiler:39 - Printing parse tree:
2014-06-10 21:19:26 DEBUG CsCompiler:40 - (cls_def public class Test { (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier int)) i))) )) (compound_statement { (statement (expression_statement (expression (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console)) . (postfix_expression (primary_expression WriteLine)) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) )))))))))))))))))))) <missing '}'>)
2014-06-10 21:19:27 ERROR CsCompiler:47 - Parse of Test.cs failed: 3 errors found
2014-06-10 21:21:37 TRACE CsCompiler:36 - RuleIndexMap: {expression=27, assign_and_modify_operator=44, assignment_expression=28, multiplicative_expression=21, compound_statement=39, jump_statement=43, declaration_specifier=4, equality_expression=35, enumerator=14, arg_suffix=9, arr_arg_suffix=8, cls_method=1, declaration=3, init_declarator_list=5, init_declarator=6, identifier_list=18, shift_operator=48, enumerator_list=13, exclusive_or_expression=33, comparsion_operator=47, statement=38, logical_and_expression=31, additive_expression=20, unary_operator=45, shift_expression=37, logical_or_expression=30, iteration_statement=42, constructor_call=23, argument_expression_list=19, parameter_list=16, inclusive_or_expression=32, parameter_type_list=15, equality_operator=46, relational_expression=36, enum_specifier=12, parameter_declaration=17, postfix_expression=24, assignment_operator=2, unary_expression=22, arr_suffix=7, constant=26, expression_statement=40, selection_statement=41, cls_def=0, conditional_expression=29, primary_expression=25, and_expression=34, type_specifier=11, declarator_suffix=10}
2014-06-10 21:21:37 TRACE CsCompiler:37 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-10 21:21:37 DEBUG CsCompiler:39 - Printing parse tree:
2014-06-10 21:21:37 DEBUG CsCompiler:40 - (cls_def public class Test { (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier int)) i))) )) (compound_statement { (statement (expression_statement (expression (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console)) . (postfix_expression (primary_expression WriteLine)) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) )))))))))))))))) ;)) })) })
2014-06-10 21:21:38 ERROR CsCompiler:47 - Parse of Test.cs failed: 3 errors found
2014-06-10 21:22:09 TRACE CsCompiler:36 - RuleIndexMap: {expression=27, assign_and_modify_operator=44, assignment_expression=28, multiplicative_expression=21, compound_statement=39, jump_statement=43, declaration_specifier=4, equality_expression=35, enumerator=14, arg_suffix=9, arr_arg_suffix=8, cls_method=1, declaration=3, init_declarator_list=5, init_declarator=6, identifier_list=18, shift_operator=48, enumerator_list=13, exclusive_or_expression=33, comparsion_operator=47, statement=38, logical_and_expression=31, additive_expression=20, unary_operator=45, shift_expression=37, logical_or_expression=30, iteration_statement=42, constructor_call=23, argument_expression_list=19, parameter_list=16, inclusive_or_expression=32, parameter_type_list=15, equality_operator=46, relational_expression=36, enum_specifier=12, parameter_declaration=17, postfix_expression=24, assignment_operator=2, unary_expression=22, arr_suffix=7, constant=26, expression_statement=40, selection_statement=41, cls_def=0, conditional_expression=29, primary_expression=25, and_expression=34, type_specifier=11, declarator_suffix=10}
2014-06-10 21:22:09 TRACE CsCompiler:37 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-10 21:22:09 DEBUG CsCompiler:39 - Printing parse tree:
2014-06-10 21:22:09 DEBUG CsCompiler:40 - (cls_def public class Test { (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier int)) i))) )) (compound_statement { (statement (expression_statement (expression (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))) (equality_operator ==) (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression unary_expression)))))))))))))) ;)) })) })
2014-06-10 21:22:09 ERROR CsCompiler:47 - Parse of Test.cs failed: 1 errors found
2014-06-10 21:22:16 TRACE CsCompiler:36 - RuleIndexMap: {expression=27, assign_and_modify_operator=44, assignment_expression=28, multiplicative_expression=21, compound_statement=39, jump_statement=43, declaration_specifier=4, equality_expression=35, enumerator=14, arg_suffix=9, arr_arg_suffix=8, cls_method=1, declaration=3, init_declarator_list=5, init_declarator=6, identifier_list=18, shift_operator=48, enumerator_list=13, exclusive_or_expression=33, comparsion_operator=47, statement=38, logical_and_expression=31, additive_expression=20, unary_operator=45, shift_expression=37, logical_or_expression=30, iteration_statement=42, constructor_call=23, argument_expression_list=19, parameter_list=16, inclusive_or_expression=32, parameter_type_list=15, equality_operator=46, relational_expression=36, enum_specifier=12, parameter_declaration=17, postfix_expression=24, assignment_operator=2, unary_expression=22, arr_suffix=7, constant=26, expression_statement=40, selection_statement=41, cls_def=0, conditional_expression=29, primary_expression=25, and_expression=34, type_specifier=11, declarator_suffix=10}
2014-06-10 21:22:16 TRACE CsCompiler:37 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-10 21:22:16 DEBUG CsCompiler:39 - Printing parse tree:
2014-06-10 21:22:16 DEBUG CsCompiler:40 - (cls_def public class Test { (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier int)) i))) )) (compound_statement { (statement (expression_statement (expression (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))) (equality_operator ==) (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;)) })) })
2014-06-10 21:22:17 ERROR CsCompiler:47 - Parse of Test.cs failed: 1 errors found
2014-06-10 21:23:08 TRACE CsCompiler:36 - RuleIndexMap: {expression=27, assign_and_modify_operator=44, assignment_expression=28, multiplicative_expression=21, compound_statement=39, jump_statement=43, declaration_specifier=4, equality_expression=35, enumerator=14, arg_suffix=9, arr_arg_suffix=8, cls_method=1, declaration=3, init_declarator_list=5, init_declarator=6, identifier_list=18, shift_operator=48, enumerator_list=13, exclusive_or_expression=33, comparsion_operator=47, statement=38, logical_and_expression=31, additive_expression=20, unary_operator=45, shift_expression=37, logical_or_expression=30, iteration_statement=42, constructor_call=23, argument_expression_list=19, parameter_list=16, inclusive_or_expression=32, parameter_type_list=15, equality_operator=46, relational_expression=36, enum_specifier=12, parameter_declaration=17, postfix_expression=24, assignment_operator=2, unary_expression=22, arr_suffix=7, constant=26, expression_statement=40, selection_statement=41, cls_def=0, conditional_expression=29, primary_expression=25, and_expression=34, type_specifier=11, declarator_suffix=10}
2014-06-10 21:23:08 TRACE CsCompiler:37 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-10 21:23:08 DEBUG CsCompiler:39 - Printing parse tree:
2014-06-10 21:23:08 DEBUG CsCompiler:40 - (cls_def public class Test { (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier int)) i))) )) (compound_statement { (statement (expression_statement (expression (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))) (equality_operator ==) (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) <missing ';'>)) })) })
2014-06-10 21:23:09 ERROR CsCompiler:47 - Parse of Test.cs failed: 1 errors found
2014-06-10 21:23:17 TRACE CsCompiler:36 - RuleIndexMap: {expression=27, assign_and_modify_operator=44, assignment_expression=28, multiplicative_expression=21, compound_statement=39, jump_statement=43, declaration_specifier=4, equality_expression=35, enumerator=14, arg_suffix=9, arr_arg_suffix=8, cls_method=1, declaration=3, init_declarator_list=5, init_declarator=6, identifier_list=18, shift_operator=48, enumerator_list=13, exclusive_or_expression=33, comparsion_operator=47, statement=38, logical_and_expression=31, additive_expression=20, unary_operator=45, shift_expression=37, logical_or_expression=30, iteration_statement=42, constructor_call=23, argument_expression_list=19, parameter_list=16, inclusive_or_expression=32, parameter_type_list=15, equality_operator=46, relational_expression=36, enum_specifier=12, parameter_declaration=17, postfix_expression=24, assignment_operator=2, unary_expression=22, arr_suffix=7, constant=26, expression_statement=40, selection_statement=41, cls_def=0, conditional_expression=29, primary_expression=25, and_expression=34, type_specifier=11, declarator_suffix=10}
2014-06-10 21:23:17 TRACE CsCompiler:37 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-10 21:23:17 DEBUG CsCompiler:39 - Printing parse tree:
2014-06-10 21:23:17 DEBUG CsCompiler:40 - (cls_def public class Test { (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier int)) i))) )) (compound_statement { (statement (expression_statement (expression (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))) (equality_operator ==) (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) <missing ';'>)) })) <missing '}'>)
2014-06-10 21:23:18 ERROR CsCompiler:47 - Parse of Test.cs failed: 2 errors found
2014-06-10 21:23:23 TRACE CsCompiler:36 - RuleIndexMap: {expression=27, assign_and_modify_operator=44, assignment_expression=28, multiplicative_expression=21, compound_statement=39, jump_statement=43, declaration_specifier=4, equality_expression=35, enumerator=14, arg_suffix=9, arr_arg_suffix=8, cls_method=1, declaration=3, init_declarator_list=5, init_declarator=6, identifier_list=18, shift_operator=48, enumerator_list=13, exclusive_or_expression=33, comparsion_operator=47, statement=38, logical_and_expression=31, additive_expression=20, unary_operator=45, shift_expression=37, logical_or_expression=30, iteration_statement=42, constructor_call=23, argument_expression_list=19, parameter_list=16, inclusive_or_expression=32, parameter_type_list=15, equality_operator=46, relational_expression=36, enum_specifier=12, parameter_declaration=17, postfix_expression=24, assignment_operator=2, unary_expression=22, arr_suffix=7, constant=26, expression_statement=40, selection_statement=41, cls_def=0, conditional_expression=29, primary_expression=25, and_expression=34, type_specifier=11, declarator_suffix=10}
2014-06-10 21:23:23 TRACE CsCompiler:37 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-10 21:23:23 DEBUG CsCompiler:39 - Printing parse tree:
2014-06-10 21:23:23 DEBUG CsCompiler:40 - (cls_def public class Test { (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier int)) i))) )) (compound_statement { (statement (expression_statement (expression (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))) (equality_operator ==) (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))))))) <missing '}'>)
2014-06-10 21:23:23 ERROR CsCompiler:47 - Parse of Test.cs failed: 1 errors found
2014-06-10 21:23:31 TRACE CsCompiler:36 - RuleIndexMap: {expression=27, assign_and_modify_operator=44, assignment_expression=28, multiplicative_expression=21, compound_statement=39, jump_statement=43, declaration_specifier=4, equality_expression=35, enumerator=14, arg_suffix=9, arr_arg_suffix=8, cls_method=1, declaration=3, init_declarator_list=5, init_declarator=6, identifier_list=18, shift_operator=48, enumerator_list=13, exclusive_or_expression=33, comparsion_operator=47, statement=38, logical_and_expression=31, additive_expression=20, unary_operator=45, shift_expression=37, logical_or_expression=30, iteration_statement=42, constructor_call=23, argument_expression_list=19, parameter_list=16, inclusive_or_expression=32, parameter_type_list=15, equality_operator=46, relational_expression=36, enum_specifier=12, parameter_declaration=17, postfix_expression=24, assignment_operator=2, unary_expression=22, arr_suffix=7, constant=26, expression_statement=40, selection_statement=41, cls_def=0, conditional_expression=29, primary_expression=25, and_expression=34, type_specifier=11, declarator_suffix=10}
2014-06-10 21:23:31 TRACE CsCompiler:37 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-10 21:23:31 DEBUG CsCompiler:39 - Printing parse tree:
2014-06-10 21:23:31 DEBUG CsCompiler:40 - (cls_def public class Test { (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier int)) i))) )) (compound_statement { (statement (expression_statement (expression (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))) (equality_operator ==) (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;)) })) })
2014-06-10 21:23:31 ERROR CsCompiler:47 - Parse of Test.cs failed: 1 errors found
2014-06-10 21:23:35 TRACE CsCompiler:36 - RuleIndexMap: {expression=27, assign_and_modify_operator=44, assignment_expression=28, multiplicative_expression=21, compound_statement=39, jump_statement=43, declaration_specifier=4, equality_expression=35, enumerator=14, arg_suffix=9, arr_arg_suffix=8, cls_method=1, declaration=3, init_declarator_list=5, init_declarator=6, identifier_list=18, shift_operator=48, enumerator_list=13, exclusive_or_expression=33, comparsion_operator=47, statement=38, logical_and_expression=31, additive_expression=20, unary_operator=45, shift_expression=37, logical_or_expression=30, iteration_statement=42, constructor_call=23, argument_expression_list=19, parameter_list=16, inclusive_or_expression=32, parameter_type_list=15, equality_operator=46, relational_expression=36, enum_specifier=12, parameter_declaration=17, postfix_expression=24, assignment_operator=2, unary_expression=22, arr_suffix=7, constant=26, expression_statement=40, selection_statement=41, cls_def=0, conditional_expression=29, primary_expression=25, and_expression=34, type_specifier=11, declarator_suffix=10}
2014-06-10 21:23:35 TRACE CsCompiler:37 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-10 21:23:35 DEBUG CsCompiler:39 - Printing parse tree:
2014-06-10 21:23:35 DEBUG CsCompiler:40 - (cls_def public class Test { (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier int)) i))) )) (compound_statement { (statement (expression_statement (expression (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))) (equality_operator ==) (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression unary_expression)))))))))))))) ;)) })) })
2014-06-10 21:23:35 ERROR CsCompiler:47 - Parse of Test.cs failed: 1 errors found
2014-06-10 21:23:41 TRACE CsCompiler:36 - RuleIndexMap: {expression=27, assign_and_modify_operator=44, assignment_expression=28, multiplicative_expression=21, compound_statement=39, jump_statement=43, declaration_specifier=4, equality_expression=35, enumerator=14, arg_suffix=9, arr_arg_suffix=8, cls_method=1, declaration=3, init_declarator_list=5, init_declarator=6, identifier_list=18, shift_operator=48, enumerator_list=13, exclusive_or_expression=33, comparsion_operator=47, statement=38, logical_and_expression=31, additive_expression=20, unary_operator=45, shift_expression=37, logical_or_expression=30, iteration_statement=42, constructor_call=23, argument_expression_list=19, parameter_list=16, inclusive_or_expression=32, parameter_type_list=15, equality_operator=46, relational_expression=36, enum_specifier=12, parameter_declaration=17, postfix_expression=24, assignment_operator=2, unary_expression=22, arr_suffix=7, constant=26, expression_statement=40, selection_statement=41, cls_def=0, conditional_expression=29, primary_expression=25, and_expression=34, type_specifier=11, declarator_suffix=10}
2014-06-10 21:23:41 TRACE CsCompiler:37 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-10 21:23:41 DEBUG CsCompiler:39 - Printing parse tree:
2014-06-10 21:23:41 DEBUG CsCompiler:40 - (cls_def public class Test { (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier int)) i))) )) (compound_statement { (statement (expression_statement (expression (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))) (equality_operator ==) (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))) (equality_operator ==) (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))))) ;)) })) })
2014-06-10 21:23:41 ERROR CsCompiler:47 - Parse of Test.cs failed: 1 errors found
2014-06-10 21:24:25 TRACE CsCompiler:36 - RuleIndexMap: {expression=27, assign_and_modify_operator=44, assignment_expression=28, multiplicative_expression=21, compound_statement=39, jump_statement=43, declaration_specifier=4, equality_expression=35, enumerator=14, arg_suffix=9, arr_arg_suffix=8, cls_method=1, declaration=3, init_declarator_list=5, init_declarator=6, identifier_list=18, shift_operator=48, enumerator_list=13, exclusive_or_expression=33, comparsion_operator=47, statement=38, logical_and_expression=31, additive_expression=20, unary_operator=45, shift_expression=37, logical_or_expression=30, iteration_statement=42, constructor_call=23, argument_expression_list=19, parameter_list=16, inclusive_or_expression=32, parameter_type_list=15, equality_operator=46, relational_expression=36, enum_specifier=12, parameter_declaration=17, postfix_expression=24, assignment_operator=2, unary_expression=22, arr_suffix=7, constant=26, expression_statement=40, selection_statement=41, cls_def=0, conditional_expression=29, primary_expression=25, and_expression=34, type_specifier=11, declarator_suffix=10}
2014-06-10 21:24:25 TRACE CsCompiler:37 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-10 21:24:25 DEBUG CsCompiler:39 - Printing parse tree:
2014-06-10 21:24:25 DEBUG CsCompiler:40 - (cls_def public class Test { (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier int)) i))) )) (compound_statement { (statement (expression_statement (expression (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console)) . (postfix_expression (primary_expression WriteLine)) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) )))))))))))))))) ;)) })) })
2014-06-10 21:24:25 ERROR CsCompiler:47 - Parse of Test.cs failed: 3 errors found
