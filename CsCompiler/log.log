2014-06-18 21:13:07 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 21:13:07 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 21:13:07 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 21:13:07 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator (assign_and_modify_operator +=)) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression xxx))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))) ;)) })) })
2014-06-18 21:13:07 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 21:13:07 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];a+=xxx+6;xxx=yyy;returna+xxx;}}
2014-06-18 21:13:07 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@85,375:375='}',<40>,19:0]}
2014-06-18 21:13:07 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-18 21:13:07 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-18 21:13:07 TRACE ClassDef:53 - Class name: Test
2014-06-18 21:13:07 TRACE Variable:30 - Field/variable added: tst
2014-06-18 21:13:07 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:13:07 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:13:07 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:13:07 TRACE Expression:41 - Expression text: 555
2014-06-18 21:13:07 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 21:13:07 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:13:07 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:13:07 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:13:07 TRACE Expression:41 - Expression text: 1
2014-06-18 21:13:07 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 21:13:07 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:13:07 TRACE Expression:39 - Token: '+'
2014-06-18 21:13:07 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:13:07 TRACE Expression:41 - Expression text: tst+1
2014-06-18 21:13:07 TRACE Variable:30 - Field/variable added: zzz
2014-06-18 21:13:07 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:13:07 TRACE Expression:39 - Token: '+'
2014-06-18 21:13:07 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:13:07 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-18 21:13:07 TRACE ClassMethod:39 - Method added: Main
2014-06-18 21:13:07 TRACE Variable:30 - Field/variable added: s
2014-06-18 21:13:07 TRACE CompoundStatement:35 - Decl in da block: inta=5;
2014-06-18 21:13:07 TRACE Variable:30 - Field/variable added: a
2014-06-18 21:13:07 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:13:07 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:13:07 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:13:07 TRACE Expression:41 - Expression text: 5
2014-06-18 21:13:07 TRACE CompoundStatement:35 - Decl in da block: intxxx=2;
2014-06-18 21:13:07 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 21:13:07 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:13:07 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:13:07 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:13:07 TRACE Expression:41 - Expression text: 2
2014-06-18 21:13:07 TRACE CompoundStatement:35 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 21:13:07 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 21:13:07 TRACE ConstructorExpression:19 - Constructor call added: newint[1,2][3]
2014-06-18 21:13:07 TRACE Expression:38 - Expression added: NEW
2014-06-18 21:13:07 TRACE Expression:39 - Token: 'new'
2014-06-18 21:13:07 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 21:13:07 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-18 21:13:07 TRACE CompoundStatement:51 - stmt in da block: a+=xxx+6;
2014-06-18 21:13:07 TRACE Expression:38 - Expression added: ADD_ASS
2014-06-18 21:13:07 TRACE Expression:39 - Token: '+='
2014-06-18 21:13:07 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$10
2014-06-18 21:13:07 TRACE Expression:41 - Expression text: a+=xxx+6
2014-06-18 21:13:07 TRACE CompoundStatement:51 - stmt in da block: xxx=yyy;
2014-06-18 21:13:07 TRACE Expression:38 - Expression added: ASSIGN
2014-06-18 21:13:07 TRACE Expression:39 - Token: '='
2014-06-18 21:13:07 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 21:13:07 TRACE Expression:41 - Expression text: xxx=yyy
2014-06-18 21:13:07 TRACE CompoundStatement:51 - stmt in da block: returna+xxx;
2014-06-18 21:13:07 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:13:07 TRACE Expression:39 - Token: '+'
2014-06-18 21:13:07 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:13:07 TRACE Expression:41 - Expression text: a+xxx
2014-06-18 21:13:07 TRACE Expression:228 - int_visitLdcInsn: 555
2014-06-18 21:13:07 TRACE Expression:228 - int_visitLdcInsn: 1
2014-06-18 21:13:07 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:13:07 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:13:07 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:13:07 TRACE Expression:41 - Expression text: tst
2014-06-18 21:13:07 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:13:07 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:13:07 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:13:07 TRACE Expression:41 - Expression text: 1
2014-06-18 21:13:07 TRACE IDExpressionType:63 - tst Test I
2014-06-18 21:13:07 TRACE Expression:228 - int_visitLdcInsn: 1
2014-06-18 21:13:07 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:13:07 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:13:07 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:13:07 TRACE Expression:41 - Expression text: yyy
2014-06-18 21:13:07 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:13:07 TRACE Expression:39 - Token: '+'
2014-06-18 21:13:07 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:13:07 TRACE Expression:41 - Expression text: xxx+123
2014-06-18 21:13:07 TRACE IDExpressionType:63 - yyy Test I
2014-06-18 21:13:07 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:13:07 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:13:07 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:13:07 TRACE Expression:41 - Expression text: xxx
2014-06-18 21:13:07 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:13:07 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:13:07 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:13:07 TRACE Expression:41 - Expression text: 123
2014-06-18 21:13:07 TRACE IDExpressionType:63 - xxx Test I
2014-06-18 21:13:07 TRACE Expression:228 - int_visitLdcInsn: 123
2014-06-18 21:13:07 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-18 21:13:07 TRACE Expression:228 - int_visitLdcInsn: 5
2014-06-18 21:13:07 TRACE CompoundStatement:79 - LocalVar to scope: a, index = 1
2014-06-18 21:13:07 TRACE Expression:228 - int_visitLdcInsn: 2
2014-06-18 21:13:07 TRACE CompoundStatement:79 - LocalVar to scope: xxx, index = 2
2014-06-18 21:18:15 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 21:18:15 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 21:18:15 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 21:18:15 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator (assign_and_modify_operator +=)) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression xxx))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))) ;)) })) })
2014-06-18 21:18:15 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 21:18:15 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];a+=xxx+6;xxx=yyy;returna+xxx;}}
2014-06-18 21:18:15 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@85,375:375='}',<40>,19:0]}
2014-06-18 21:18:15 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-18 21:18:15 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-18 21:18:15 TRACE ClassDef:53 - Class name: Test
2014-06-18 21:18:15 TRACE Variable:30 - Field/variable added: tst
2014-06-18 21:18:15 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:18:15 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:18:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:18:15 TRACE Expression:41 - Expression text: 555
2014-06-18 21:18:15 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 21:18:15 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:18:15 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:18:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:18:15 TRACE Expression:41 - Expression text: 1
2014-06-18 21:18:15 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 21:18:15 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:18:15 TRACE Expression:39 - Token: '+'
2014-06-18 21:18:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:18:15 TRACE Expression:41 - Expression text: tst+1
2014-06-18 21:18:15 TRACE Variable:30 - Field/variable added: zzz
2014-06-18 21:18:15 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:18:15 TRACE Expression:39 - Token: '+'
2014-06-18 21:18:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:18:15 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-18 21:18:15 TRACE ClassMethod:39 - Method added: Main
2014-06-18 21:18:15 TRACE Variable:30 - Field/variable added: s
2014-06-18 21:18:15 TRACE CompoundStatement:35 - Decl in da block: inta=5;
2014-06-18 21:18:15 TRACE Variable:30 - Field/variable added: a
2014-06-18 21:18:15 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:18:15 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:18:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:18:15 TRACE Expression:41 - Expression text: 5
2014-06-18 21:18:15 TRACE CompoundStatement:35 - Decl in da block: intxxx=2;
2014-06-18 21:18:15 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 21:18:15 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:18:15 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:18:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:18:15 TRACE Expression:41 - Expression text: 2
2014-06-18 21:18:15 TRACE CompoundStatement:35 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 21:18:15 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 21:18:15 TRACE ConstructorExpression:19 - Constructor call added: newint[1,2][3]
2014-06-18 21:18:15 TRACE Expression:38 - Expression added: NEW
2014-06-18 21:18:15 TRACE Expression:39 - Token: 'new'
2014-06-18 21:18:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 21:18:15 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-18 21:18:15 TRACE CompoundStatement:51 - stmt in da block: a+=xxx+6;
2014-06-18 21:18:15 TRACE Expression:38 - Expression added: ADD_ASS
2014-06-18 21:18:15 TRACE Expression:39 - Token: '+='
2014-06-18 21:18:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$10
2014-06-18 21:18:15 TRACE Expression:41 - Expression text: a+=xxx+6
2014-06-18 21:18:15 TRACE CompoundStatement:51 - stmt in da block: xxx=yyy;
2014-06-18 21:18:15 TRACE Expression:38 - Expression added: ASSIGN
2014-06-18 21:18:15 TRACE Expression:39 - Token: '='
2014-06-18 21:18:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 21:18:15 TRACE Expression:41 - Expression text: xxx=yyy
2014-06-18 21:18:15 TRACE CompoundStatement:51 - stmt in da block: returna+xxx;
2014-06-18 21:18:15 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:18:15 TRACE Expression:39 - Token: '+'
2014-06-18 21:18:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:18:15 TRACE Expression:41 - Expression text: a+xxx
2014-06-18 21:18:15 TRACE Expression:228 - int_visitLdcInsn: 555
2014-06-18 21:18:15 TRACE Expression:228 - int_visitLdcInsn: 1
2014-06-18 21:18:15 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:18:15 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:18:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:18:15 TRACE Expression:41 - Expression text: tst
2014-06-18 21:18:15 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:18:15 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:18:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:18:15 TRACE Expression:41 - Expression text: 1
2014-06-18 21:18:15 TRACE IDExpressionType:63 - tst Test I
2014-06-18 21:18:15 TRACE Expression:228 - int_visitLdcInsn: 1
2014-06-18 21:18:15 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:18:15 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:18:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:18:15 TRACE Expression:41 - Expression text: yyy
2014-06-18 21:18:15 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:18:15 TRACE Expression:39 - Token: '+'
2014-06-18 21:18:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:18:15 TRACE Expression:41 - Expression text: xxx+123
2014-06-18 21:18:15 TRACE IDExpressionType:63 - yyy Test I
2014-06-18 21:18:15 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:18:15 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:18:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:18:15 TRACE Expression:41 - Expression text: xxx
2014-06-18 21:18:15 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:18:15 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:18:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:18:15 TRACE Expression:41 - Expression text: 123
2014-06-18 21:18:15 TRACE IDExpressionType:63 - xxx Test I
2014-06-18 21:18:15 TRACE Expression:228 - int_visitLdcInsn: 123
2014-06-18 21:18:15 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-18 21:18:15 TRACE Expression:228 - int_visitLdcInsn: 5
2014-06-18 21:18:15 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = a, index = 1
2014-06-18 21:18:15 TRACE Expression:228 - int_visitLdcInsn: 2
2014-06-18 21:18:15 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-18 21:18:15 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-18 21:18:15 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:18:15 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:18:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:18:15 TRACE Expression:41 - Expression text: a
2014-06-18 21:18:15 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:18:15 TRACE Expression:39 - Token: '+'
2014-06-18 21:18:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:18:15 TRACE Expression:41 - Expression text: xxx+6
2014-06-18 21:18:15 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:18:15 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:18:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:18:15 TRACE Expression:41 - Expression text: xxx
2014-06-18 21:18:15 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:18:15 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:18:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:18:15 TRACE Expression:41 - Expression text: 6
2014-06-18 21:18:15 TRACE Expression:228 - int_visitLdcInsn: 6
2014-06-18 21:18:15 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:18:15 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:18:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:18:15 TRACE Expression:41 - Expression text: xxx
2014-06-18 21:18:15 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:18:15 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:18:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:18:15 TRACE Expression:41 - Expression text: yyy
2014-06-18 21:18:15 TRACE IDExpressionType:63 - yyy Test I
2014-06-18 21:18:15 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:18:15 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:18:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:18:15 TRACE Expression:41 - Expression text: a
2014-06-18 21:18:15 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:18:15 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:18:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:18:15 TRACE Expression:41 - Expression text: xxx
2014-06-18 21:19:11 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 21:19:11 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 21:19:11 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 21:19:11 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator (assign_and_modify_operator +=)) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression xxx))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))) ;)) })) })
2014-06-18 21:19:12 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 21:19:12 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticintMain(Strings){inta=5;intxxx=2;a+=xxx+6;xxx=yyy;returna+xxx;}}
2014-06-18 21:19:12 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@66,377:377='}',<40>,19:0]}
2014-06-18 21:19:12 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-18 21:19:12 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-18 21:19:12 TRACE ClassDef:53 - Class name: Test
2014-06-18 21:19:12 TRACE Variable:30 - Field/variable added: tst
2014-06-18 21:19:12 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:19:12 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:19:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:19:12 TRACE Expression:41 - Expression text: 555
2014-06-18 21:19:12 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 21:19:12 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:19:12 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:19:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:19:12 TRACE Expression:41 - Expression text: 1
2014-06-18 21:19:12 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 21:19:12 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:19:12 TRACE Expression:39 - Token: '+'
2014-06-18 21:19:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:19:12 TRACE Expression:41 - Expression text: tst+1
2014-06-18 21:19:12 TRACE Variable:30 - Field/variable added: zzz
2014-06-18 21:19:12 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:19:12 TRACE Expression:39 - Token: '+'
2014-06-18 21:19:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:19:12 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-18 21:19:12 TRACE ClassMethod:39 - Method added: Main
2014-06-18 21:19:12 TRACE Variable:30 - Field/variable added: s
2014-06-18 21:19:12 TRACE CompoundStatement:35 - Decl in da block: inta=5;
2014-06-18 21:19:12 TRACE Variable:30 - Field/variable added: a
2014-06-18 21:19:12 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:19:12 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:19:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:19:12 TRACE Expression:41 - Expression text: 5
2014-06-18 21:19:12 TRACE CompoundStatement:35 - Decl in da block: intxxx=2;
2014-06-18 21:19:12 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 21:19:12 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:19:12 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:19:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:19:12 TRACE Expression:41 - Expression text: 2
2014-06-18 21:19:12 TRACE CompoundStatement:51 - stmt in da block: a+=xxx+6;
2014-06-18 21:19:12 TRACE Expression:38 - Expression added: ADD_ASS
2014-06-18 21:19:12 TRACE Expression:39 - Token: '+='
2014-06-18 21:19:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$10
2014-06-18 21:19:12 TRACE Expression:41 - Expression text: a+=xxx+6
2014-06-18 21:19:12 TRACE CompoundStatement:51 - stmt in da block: xxx=yyy;
2014-06-18 21:19:12 TRACE Expression:38 - Expression added: ASSIGN
2014-06-18 21:19:12 TRACE Expression:39 - Token: '='
2014-06-18 21:19:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 21:19:12 TRACE Expression:41 - Expression text: xxx=yyy
2014-06-18 21:19:12 TRACE CompoundStatement:51 - stmt in da block: returna+xxx;
2014-06-18 21:19:12 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:19:12 TRACE Expression:39 - Token: '+'
2014-06-18 21:19:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:19:12 TRACE Expression:41 - Expression text: a+xxx
2014-06-18 21:19:12 TRACE Expression:228 - int_visitLdcInsn: 555
2014-06-18 21:19:12 TRACE Expression:228 - int_visitLdcInsn: 1
2014-06-18 21:19:12 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:19:12 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:19:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:19:12 TRACE Expression:41 - Expression text: tst
2014-06-18 21:19:12 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:19:12 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:19:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:19:12 TRACE Expression:41 - Expression text: 1
2014-06-18 21:19:12 TRACE IDExpressionType:63 - tst Test I
2014-06-18 21:19:12 TRACE Expression:228 - int_visitLdcInsn: 1
2014-06-18 21:19:12 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:19:12 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:19:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:19:12 TRACE Expression:41 - Expression text: yyy
2014-06-18 21:19:12 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:19:12 TRACE Expression:39 - Token: '+'
2014-06-18 21:19:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:19:12 TRACE Expression:41 - Expression text: xxx+123
2014-06-18 21:19:12 TRACE IDExpressionType:63 - yyy Test I
2014-06-18 21:19:12 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:19:12 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:19:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:19:12 TRACE Expression:41 - Expression text: xxx
2014-06-18 21:19:12 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:19:12 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:19:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:19:12 TRACE Expression:41 - Expression text: 123
2014-06-18 21:19:12 TRACE IDExpressionType:63 - xxx Test I
2014-06-18 21:19:12 TRACE Expression:228 - int_visitLdcInsn: 123
2014-06-18 21:19:12 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-18 21:19:12 TRACE Expression:228 - int_visitLdcInsn: 5
2014-06-18 21:19:12 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = a, index = 1
2014-06-18 21:19:12 TRACE Expression:228 - int_visitLdcInsn: 2
2014-06-18 21:19:12 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-18 21:19:12 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:19:12 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:19:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:19:12 TRACE Expression:41 - Expression text: a
2014-06-18 21:19:12 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:19:12 TRACE Expression:39 - Token: '+'
2014-06-18 21:19:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:19:12 TRACE Expression:41 - Expression text: xxx+6
2014-06-18 21:19:12 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:19:12 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:19:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:19:12 TRACE Expression:41 - Expression text: xxx
2014-06-18 21:19:12 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:19:12 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:19:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:19:12 TRACE Expression:41 - Expression text: 6
2014-06-18 21:19:12 TRACE Expression:228 - int_visitLdcInsn: 6
2014-06-18 21:19:12 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:19:12 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:19:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:19:12 TRACE Expression:41 - Expression text: xxx
2014-06-18 21:19:12 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:19:12 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:19:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:19:12 TRACE Expression:41 - Expression text: yyy
2014-06-18 21:19:12 TRACE IDExpressionType:63 - yyy Test I
2014-06-18 21:19:12 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:19:12 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:19:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:19:12 TRACE Expression:41 - Expression text: a
2014-06-18 21:19:12 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:19:12 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:19:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:19:12 TRACE Expression:41 - Expression text: xxx
2014-06-18 21:19:12 INFO  CsCompiler:86 - tst = 555
2014-06-18 21:19:12 INFO  CsCompiler:86 - xxx = 1
2014-06-18 21:19:12 INFO  CsCompiler:86 - yyy = 556
2014-06-18 21:19:12 INFO  CsCompiler:86 - zzz = 680
2014-06-18 21:19:12 INFO  CsCompiler:89 - Main: 569
2014-06-18 21:19:21 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 21:19:21 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 21:19:21 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 21:19:21 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))) ;)) })) })
2014-06-18 21:19:21 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 21:19:21 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];returna+xxx;}}
2014-06-18 21:19:21 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@75,379:379='}',<40>,19:0]}
2014-06-18 21:19:21 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-18 21:19:21 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-18 21:19:21 TRACE ClassDef:53 - Class name: Test
2014-06-18 21:19:21 TRACE Variable:30 - Field/variable added: tst
2014-06-18 21:19:21 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:19:21 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:19:21 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:19:21 TRACE Expression:41 - Expression text: 555
2014-06-18 21:19:21 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 21:19:21 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:19:21 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:19:21 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:19:21 TRACE Expression:41 - Expression text: 1
2014-06-18 21:19:21 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 21:19:21 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:19:21 TRACE Expression:39 - Token: '+'
2014-06-18 21:19:21 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:19:21 TRACE Expression:41 - Expression text: tst+1
2014-06-18 21:19:21 TRACE Variable:30 - Field/variable added: zzz
2014-06-18 21:19:21 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:19:21 TRACE Expression:39 - Token: '+'
2014-06-18 21:19:21 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:19:21 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-18 21:19:21 TRACE ClassMethod:39 - Method added: Main
2014-06-18 21:19:21 TRACE Variable:30 - Field/variable added: s
2014-06-18 21:19:21 TRACE CompoundStatement:35 - Decl in da block: inta=5;
2014-06-18 21:19:21 TRACE Variable:30 - Field/variable added: a
2014-06-18 21:19:21 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:19:21 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:19:21 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:19:21 TRACE Expression:41 - Expression text: 5
2014-06-18 21:19:21 TRACE CompoundStatement:35 - Decl in da block: intxxx=2;
2014-06-18 21:19:21 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 21:19:21 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:19:21 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:19:21 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:19:21 TRACE Expression:41 - Expression text: 2
2014-06-18 21:19:21 TRACE CompoundStatement:35 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 21:19:21 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 21:19:21 TRACE ConstructorExpression:19 - Constructor call added: newint[1,2][3]
2014-06-18 21:19:21 TRACE Expression:38 - Expression added: NEW
2014-06-18 21:19:21 TRACE Expression:39 - Token: 'new'
2014-06-18 21:19:21 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 21:19:21 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-18 21:19:21 TRACE CompoundStatement:51 - stmt in da block: returna+xxx;
2014-06-18 21:19:21 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:19:21 TRACE Expression:39 - Token: '+'
2014-06-18 21:19:21 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:19:21 TRACE Expression:41 - Expression text: a+xxx
2014-06-18 21:19:21 TRACE Expression:228 - int_visitLdcInsn: 555
2014-06-18 21:19:21 TRACE Expression:228 - int_visitLdcInsn: 1
2014-06-18 21:19:21 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:19:21 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:19:21 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:19:21 TRACE Expression:41 - Expression text: tst
2014-06-18 21:19:21 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:19:21 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:19:21 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:19:21 TRACE Expression:41 - Expression text: 1
2014-06-18 21:19:21 TRACE IDExpressionType:63 - tst Test I
2014-06-18 21:19:21 TRACE Expression:228 - int_visitLdcInsn: 1
2014-06-18 21:19:21 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:19:21 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:19:21 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:19:21 TRACE Expression:41 - Expression text: yyy
2014-06-18 21:19:21 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:19:21 TRACE Expression:39 - Token: '+'
2014-06-18 21:19:21 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:19:21 TRACE Expression:41 - Expression text: xxx+123
2014-06-18 21:19:21 TRACE IDExpressionType:63 - yyy Test I
2014-06-18 21:19:21 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:19:21 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:19:21 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:19:21 TRACE Expression:41 - Expression text: xxx
2014-06-18 21:19:21 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:19:21 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:19:21 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:19:21 TRACE Expression:41 - Expression text: 123
2014-06-18 21:19:21 TRACE IDExpressionType:63 - xxx Test I
2014-06-18 21:19:21 TRACE Expression:228 - int_visitLdcInsn: 123
2014-06-18 21:19:21 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-18 21:19:21 TRACE Expression:228 - int_visitLdcInsn: 5
2014-06-18 21:19:21 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = a, index = 1
2014-06-18 21:19:21 TRACE Expression:228 - int_visitLdcInsn: 2
2014-06-18 21:19:21 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-18 21:19:21 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-18 21:19:21 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:19:21 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:19:21 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:19:21 TRACE Expression:41 - Expression text: a
2014-06-18 21:19:21 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:19:21 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:19:21 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:19:21 TRACE Expression:41 - Expression text: xxx
2014-06-18 21:39:26 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 21:39:26 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 21:39:26 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 21:39:26 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))) ;)) })) })
2014-06-18 21:39:26 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 21:39:26 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];returna+xxx;}}
2014-06-18 21:39:26 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@75,379:379='}',<40>,19:0]}
2014-06-18 21:39:26 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-18 21:39:26 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-18 21:39:26 TRACE ClassDef:53 - Class name: Test
2014-06-18 21:39:26 TRACE Variable:30 - Field/variable added: tst
2014-06-18 21:39:26 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:39:26 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:39:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:39:26 TRACE Expression:41 - Expression text: 555
2014-06-18 21:39:26 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 21:39:26 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:39:26 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:39:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:39:26 TRACE Expression:41 - Expression text: 1
2014-06-18 21:39:26 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 21:39:26 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:39:26 TRACE Expression:39 - Token: '+'
2014-06-18 21:39:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:39:26 TRACE Expression:41 - Expression text: tst+1
2014-06-18 21:39:26 TRACE Variable:30 - Field/variable added: zzz
2014-06-18 21:39:26 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:39:26 TRACE Expression:39 - Token: '+'
2014-06-18 21:39:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:39:26 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-18 21:39:26 TRACE ClassMethod:39 - Method added: Main
2014-06-18 21:39:26 TRACE Variable:30 - Field/variable added: s
2014-06-18 21:39:26 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 21:39:26 TRACE Variable:30 - Field/variable added: a
2014-06-18 21:39:26 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:39:26 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:39:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:39:26 TRACE Expression:41 - Expression text: 5
2014-06-18 21:39:26 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-18 21:39:26 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 21:39:26 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:39:26 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:39:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:39:26 TRACE Expression:41 - Expression text: 2
2014-06-18 21:39:26 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 21:39:26 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 21:39:26 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-18 21:39:26 TRACE Expression:38 - Expression added: NEW
2014-06-18 21:39:26 TRACE Expression:39 - Token: 'new'
2014-06-18 21:39:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 21:39:26 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-18 21:39:26 TRACE CompoundStatement:49 - stmt in da block: returna+xxx;
2014-06-18 21:39:26 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:39:26 TRACE Expression:39 - Token: '+'
2014-06-18 21:39:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:39:26 TRACE Expression:41 - Expression text: a+xxx
2014-06-18 21:39:26 TRACE Expression:228 - int_visitLdcInsn: 555
2014-06-18 21:39:26 TRACE Expression:228 - int_visitLdcInsn: 1
2014-06-18 21:39:26 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:39:26 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:39:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:39:26 TRACE Expression:41 - Expression text: tst
2014-06-18 21:39:26 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:39:26 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:39:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:39:26 TRACE Expression:41 - Expression text: 1
2014-06-18 21:39:26 TRACE IDExpressionType:63 - tst Test I
2014-06-18 21:39:26 TRACE Expression:228 - int_visitLdcInsn: 1
2014-06-18 21:39:26 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:39:26 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:39:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:39:26 TRACE Expression:41 - Expression text: yyy
2014-06-18 21:39:26 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:39:26 TRACE Expression:39 - Token: '+'
2014-06-18 21:39:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:39:26 TRACE Expression:41 - Expression text: xxx+123
2014-06-18 21:39:26 TRACE IDExpressionType:63 - yyy Test I
2014-06-18 21:39:26 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:39:26 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:39:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:39:26 TRACE Expression:41 - Expression text: xxx
2014-06-18 21:39:26 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:39:26 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:39:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:39:26 TRACE Expression:41 - Expression text: 123
2014-06-18 21:39:26 TRACE IDExpressionType:63 - xxx Test I
2014-06-18 21:39:26 TRACE Expression:228 - int_visitLdcInsn: 123
2014-06-18 21:39:26 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-18 21:39:26 TRACE Expression:228 - int_visitLdcInsn: 5
2014-06-18 21:39:26 TRACE CompoundStatement:77 - Add LocalVar to scope. Name = a, index = 1
2014-06-18 21:39:26 TRACE Expression:228 - int_visitLdcInsn: 2
2014-06-18 21:39:26 TRACE CompoundStatement:77 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-18 21:43:01 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 21:43:01 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 21:43:01 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 21:43:01 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))) ;)) })) })
2014-06-18 21:43:02 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 21:43:02 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];returna+xxx;}}
2014-06-18 21:43:02 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@75,379:379='}',<40>,19:0]}
2014-06-18 21:43:02 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-18 21:43:02 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-18 21:43:02 TRACE ClassDef:53 - Class name: Test
2014-06-18 21:43:02 TRACE Variable:30 - Field/variable added: tst
2014-06-18 21:43:02 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:43:02 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:43:02 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:43:02 TRACE Expression:41 - Expression text: 555
2014-06-18 21:43:02 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 21:43:02 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:43:02 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:43:02 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:43:02 TRACE Expression:41 - Expression text: 1
2014-06-18 21:43:02 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 21:43:02 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:43:02 TRACE Expression:39 - Token: '+'
2014-06-18 21:43:02 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:43:02 TRACE Expression:41 - Expression text: tst+1
2014-06-18 21:43:02 TRACE Variable:30 - Field/variable added: zzz
2014-06-18 21:43:02 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:43:02 TRACE Expression:39 - Token: '+'
2014-06-18 21:43:02 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:43:02 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-18 21:43:02 TRACE ClassMethod:39 - Method added: Main
2014-06-18 21:43:02 TRACE Variable:30 - Field/variable added: s
2014-06-18 21:43:02 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 21:43:02 TRACE Variable:30 - Field/variable added: a
2014-06-18 21:43:02 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:43:02 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:43:02 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:43:02 TRACE Expression:41 - Expression text: 5
2014-06-18 21:43:02 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-18 21:43:02 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 21:43:02 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:43:02 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:43:02 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:43:02 TRACE Expression:41 - Expression text: 2
2014-06-18 21:43:02 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 21:43:02 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 21:43:02 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-18 21:43:02 TRACE Expression:38 - Expression added: NEW
2014-06-18 21:43:02 TRACE Expression:39 - Token: 'new'
2014-06-18 21:43:02 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 21:43:02 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-18 21:43:02 TRACE CompoundStatement:49 - stmt in da block: returna+xxx;
2014-06-18 21:43:02 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:43:02 TRACE Expression:39 - Token: '+'
2014-06-18 21:43:02 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:43:02 TRACE Expression:41 - Expression text: a+xxx
2014-06-18 21:43:02 TRACE Expression:228 - int_visitLdcInsn: 555
2014-06-18 21:43:02 TRACE Expression:228 - int_visitLdcInsn: 1
2014-06-18 21:43:02 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:43:02 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:43:02 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:43:02 TRACE Expression:41 - Expression text: tst
2014-06-18 21:43:02 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:43:02 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:43:02 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:43:02 TRACE Expression:41 - Expression text: 1
2014-06-18 21:43:02 TRACE IDExpressionType:63 - tst Test I
2014-06-18 21:43:02 TRACE Expression:228 - int_visitLdcInsn: 1
2014-06-18 21:43:02 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:43:02 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:43:02 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:43:02 TRACE Expression:41 - Expression text: yyy
2014-06-18 21:43:02 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:43:02 TRACE Expression:39 - Token: '+'
2014-06-18 21:43:02 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:43:02 TRACE Expression:41 - Expression text: xxx+123
2014-06-18 21:43:02 TRACE IDExpressionType:63 - yyy Test I
2014-06-18 21:43:02 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:43:02 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:43:02 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:43:02 TRACE Expression:41 - Expression text: xxx
2014-06-18 21:43:02 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:43:02 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:43:02 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:43:02 TRACE Expression:41 - Expression text: 123
2014-06-18 21:43:02 TRACE IDExpressionType:63 - xxx Test I
2014-06-18 21:43:02 TRACE Expression:228 - int_visitLdcInsn: 123
2014-06-18 21:43:02 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-18 21:43:02 TRACE Expression:228 - int_visitLdcInsn: 5
2014-06-18 21:43:02 TRACE CompoundStatement:77 - Add LocalVar to scope. Name = a, index = 1
2014-06-18 21:43:02 TRACE Expression:228 - int_visitLdcInsn: 2
2014-06-18 21:43:02 TRACE CompoundStatement:77 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-18 21:43:02 TRACE ConstructorExpression:84 - t= I
2014-06-18 21:43:02 TRACE ConstructorExpression:85 - #args= 0
2014-06-18 21:43:31 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 21:43:31 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 21:43:31 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 21:43:31 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))) ;)) })) })
2014-06-18 21:43:31 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 21:43:31 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];returna+xxx;}}
2014-06-18 21:43:31 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@75,379:379='}',<40>,19:0]}
2014-06-18 21:43:31 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-18 21:43:31 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-18 21:43:31 TRACE ClassDef:53 - Class name: Test
2014-06-18 21:43:31 TRACE Variable:30 - Field/variable added: tst
2014-06-18 21:43:31 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:43:31 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:43:31 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:43:31 TRACE Expression:41 - Expression text: 555
2014-06-18 21:43:31 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 21:43:31 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:43:31 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:43:31 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:43:31 TRACE Expression:41 - Expression text: 1
2014-06-18 21:43:31 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 21:43:31 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:43:31 TRACE Expression:39 - Token: '+'
2014-06-18 21:43:31 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:43:31 TRACE Expression:41 - Expression text: tst+1
2014-06-18 21:43:31 TRACE Variable:30 - Field/variable added: zzz
2014-06-18 21:43:31 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:43:31 TRACE Expression:39 - Token: '+'
2014-06-18 21:43:31 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:43:31 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-18 21:43:31 TRACE ClassMethod:39 - Method added: Main
2014-06-18 21:43:31 TRACE Variable:30 - Field/variable added: s
2014-06-18 21:43:31 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 21:43:31 TRACE Variable:30 - Field/variable added: a
2014-06-18 21:43:31 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:43:31 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:43:31 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:43:31 TRACE Expression:41 - Expression text: 5
2014-06-18 21:43:31 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-18 21:43:31 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 21:43:31 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:43:31 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:43:31 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:43:31 TRACE Expression:41 - Expression text: 2
2014-06-18 21:43:31 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 21:43:31 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 21:43:31 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-18 21:43:31 TRACE Expression:38 - Expression added: NEW
2014-06-18 21:43:31 TRACE Expression:39 - Token: 'new'
2014-06-18 21:43:31 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 21:43:31 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-18 21:43:31 TRACE CompoundStatement:49 - stmt in da block: returna+xxx;
2014-06-18 21:43:31 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:43:31 TRACE Expression:39 - Token: '+'
2014-06-18 21:43:31 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:43:31 TRACE Expression:41 - Expression text: a+xxx
2014-06-18 21:43:31 TRACE Expression:228 - int_visitLdcInsn: 555
2014-06-18 21:43:31 TRACE Expression:228 - int_visitLdcInsn: 1
2014-06-18 21:43:31 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:43:31 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:43:31 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:43:31 TRACE Expression:41 - Expression text: tst
2014-06-18 21:43:31 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:43:31 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:43:31 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:43:31 TRACE Expression:41 - Expression text: 1
2014-06-18 21:43:31 TRACE IDExpressionType:63 - tst Test I
2014-06-18 21:43:31 TRACE Expression:228 - int_visitLdcInsn: 1
2014-06-18 21:43:31 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:43:31 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:43:31 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:43:31 TRACE Expression:41 - Expression text: yyy
2014-06-18 21:43:31 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:43:31 TRACE Expression:39 - Token: '+'
2014-06-18 21:43:31 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:43:31 TRACE Expression:41 - Expression text: xxx+123
2014-06-18 21:43:31 TRACE IDExpressionType:63 - yyy Test I
2014-06-18 21:43:31 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:43:31 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:43:31 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:43:31 TRACE Expression:41 - Expression text: xxx
2014-06-18 21:43:31 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:43:31 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:43:31 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:43:31 TRACE Expression:41 - Expression text: 123
2014-06-18 21:43:31 TRACE IDExpressionType:63 - xxx Test I
2014-06-18 21:43:31 TRACE Expression:228 - int_visitLdcInsn: 123
2014-06-18 21:43:31 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-18 21:43:31 TRACE Expression:228 - int_visitLdcInsn: 5
2014-06-18 21:43:31 TRACE CompoundStatement:77 - Add LocalVar to scope. Name = a, index = 1
2014-06-18 21:43:31 TRACE Expression:228 - int_visitLdcInsn: 2
2014-06-18 21:43:31 TRACE CompoundStatement:77 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-18 21:43:31 TRACE ConstructorExpression:85 - t= I
2014-06-18 21:43:31 TRACE ConstructorExpression:86 - #args= 0
2014-06-18 21:44:46 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 21:44:46 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 21:44:46 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 21:44:46 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))) ;)) })) })
2014-06-18 21:44:47 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 21:44:47 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];returna+xxx;}}
2014-06-18 21:44:47 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@75,379:379='}',<40>,19:0]}
2014-06-18 21:44:47 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-18 21:44:47 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-18 21:44:47 TRACE ClassDef:53 - Class name: Test
2014-06-18 21:44:47 TRACE Variable:30 - Field/variable added: tst
2014-06-18 21:44:47 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:44:47 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:44:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:44:47 TRACE Expression:41 - Expression text: 555
2014-06-18 21:44:47 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 21:44:47 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:44:47 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:44:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:44:47 TRACE Expression:41 - Expression text: 1
2014-06-18 21:44:47 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 21:44:47 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:44:47 TRACE Expression:39 - Token: '+'
2014-06-18 21:44:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:44:47 TRACE Expression:41 - Expression text: tst+1
2014-06-18 21:44:47 TRACE Variable:30 - Field/variable added: zzz
2014-06-18 21:44:47 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:44:47 TRACE Expression:39 - Token: '+'
2014-06-18 21:44:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:44:47 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-18 21:44:47 TRACE ClassMethod:39 - Method added: Main
2014-06-18 21:44:47 TRACE Variable:30 - Field/variable added: s
2014-06-18 21:44:47 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 21:44:47 TRACE Variable:30 - Field/variable added: a
2014-06-18 21:44:47 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:44:47 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:44:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:44:47 TRACE Expression:41 - Expression text: 5
2014-06-18 21:44:47 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-18 21:44:47 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 21:44:47 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:44:47 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:44:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:44:47 TRACE Expression:41 - Expression text: 2
2014-06-18 21:44:47 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 21:44:47 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 21:44:47 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-18 21:44:47 TRACE ConstructorExpression:36 - Constr rule: type_specifier
2014-06-18 21:44:47 TRACE Expression:38 - Expression added: NEW
2014-06-18 21:44:47 TRACE Expression:39 - Token: 'new'
2014-06-18 21:44:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 21:44:47 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-18 21:44:47 TRACE CompoundStatement:49 - stmt in da block: returna+xxx;
2014-06-18 21:44:47 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:44:47 TRACE Expression:39 - Token: '+'
2014-06-18 21:44:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:44:47 TRACE Expression:41 - Expression text: a+xxx
2014-06-18 21:44:47 TRACE Expression:228 - int_visitLdcInsn: 555
2014-06-18 21:44:47 TRACE Expression:228 - int_visitLdcInsn: 1
2014-06-18 21:44:47 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:44:47 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:44:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:44:47 TRACE Expression:41 - Expression text: tst
2014-06-18 21:44:47 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:44:47 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:44:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:44:47 TRACE Expression:41 - Expression text: 1
2014-06-18 21:44:47 TRACE IDExpressionType:63 - tst Test I
2014-06-18 21:44:47 TRACE Expression:228 - int_visitLdcInsn: 1
2014-06-18 21:44:47 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:44:47 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:44:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:44:47 TRACE Expression:41 - Expression text: yyy
2014-06-18 21:44:47 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:44:47 TRACE Expression:39 - Token: '+'
2014-06-18 21:44:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:44:47 TRACE Expression:41 - Expression text: xxx+123
2014-06-18 21:44:47 TRACE IDExpressionType:63 - yyy Test I
2014-06-18 21:44:47 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:44:47 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:44:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:44:47 TRACE Expression:41 - Expression text: xxx
2014-06-18 21:44:47 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:44:47 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:44:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:44:47 TRACE Expression:41 - Expression text: 123
2014-06-18 21:44:47 TRACE IDExpressionType:63 - xxx Test I
2014-06-18 21:44:47 TRACE Expression:228 - int_visitLdcInsn: 123
2014-06-18 21:44:47 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-18 21:44:47 TRACE Expression:228 - int_visitLdcInsn: 5
2014-06-18 21:44:47 TRACE CompoundStatement:77 - Add LocalVar to scope. Name = a, index = 1
2014-06-18 21:44:47 TRACE Expression:228 - int_visitLdcInsn: 2
2014-06-18 21:44:47 TRACE CompoundStatement:77 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-18 21:44:47 TRACE ConstructorExpression:86 - t= I
2014-06-18 21:44:47 TRACE ConstructorExpression:87 - #args= 0
2014-06-18 21:45:39 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 21:45:39 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 21:45:39 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 21:45:39 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))) ;)) })) })
2014-06-18 21:45:40 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 21:45:40 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];returna+xxx;}}
2014-06-18 21:45:40 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@75,379:379='}',<40>,19:0]}
2014-06-18 21:45:40 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-18 21:45:40 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-18 21:45:40 TRACE ClassDef:53 - Class name: Test
2014-06-18 21:45:40 TRACE Variable:30 - Field/variable added: tst
2014-06-18 21:45:40 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:45:40 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:45:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:45:40 TRACE Expression:41 - Expression text: 555
2014-06-18 21:45:40 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 21:45:40 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:45:40 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:45:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:45:40 TRACE Expression:41 - Expression text: 1
2014-06-18 21:45:40 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 21:45:40 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:45:40 TRACE Expression:39 - Token: '+'
2014-06-18 21:45:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:45:40 TRACE Expression:41 - Expression text: tst+1
2014-06-18 21:45:40 TRACE Variable:30 - Field/variable added: zzz
2014-06-18 21:45:40 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:45:40 TRACE Expression:39 - Token: '+'
2014-06-18 21:45:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:45:40 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-18 21:45:40 TRACE ClassMethod:39 - Method added: Main
2014-06-18 21:45:40 TRACE Variable:30 - Field/variable added: s
2014-06-18 21:45:40 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 21:45:40 TRACE Variable:30 - Field/variable added: a
2014-06-18 21:45:40 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:45:40 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:45:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:45:40 TRACE Expression:41 - Expression text: 5
2014-06-18 21:45:40 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-18 21:45:40 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 21:45:40 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:45:40 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:45:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:45:40 TRACE Expression:41 - Expression text: 2
2014-06-18 21:45:40 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 21:45:40 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 21:45:40 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-18 21:45:40 TRACE ConstructorExpression:35 - 4
2014-06-18 21:45:40 TRACE ConstructorExpression:37 - Constr rule: type_specifier
2014-06-18 21:45:40 TRACE Expression:38 - Expression added: NEW
2014-06-18 21:45:40 TRACE Expression:39 - Token: 'new'
2014-06-18 21:45:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 21:45:40 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-18 21:45:40 TRACE CompoundStatement:49 - stmt in da block: returna+xxx;
2014-06-18 21:45:40 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:45:40 TRACE Expression:39 - Token: '+'
2014-06-18 21:45:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:45:40 TRACE Expression:41 - Expression text: a+xxx
2014-06-18 21:45:40 TRACE Expression:228 - int_visitLdcInsn: 555
2014-06-18 21:45:40 TRACE Expression:228 - int_visitLdcInsn: 1
2014-06-18 21:45:40 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:45:40 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:45:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:45:40 TRACE Expression:41 - Expression text: tst
2014-06-18 21:45:40 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:45:40 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:45:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:45:40 TRACE Expression:41 - Expression text: 1
2014-06-18 21:45:40 TRACE IDExpressionType:63 - tst Test I
2014-06-18 21:45:40 TRACE Expression:228 - int_visitLdcInsn: 1
2014-06-18 21:45:40 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:45:40 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:45:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:45:40 TRACE Expression:41 - Expression text: yyy
2014-06-18 21:45:40 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:45:40 TRACE Expression:39 - Token: '+'
2014-06-18 21:45:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:45:40 TRACE Expression:41 - Expression text: xxx+123
2014-06-18 21:45:40 TRACE IDExpressionType:63 - yyy Test I
2014-06-18 21:45:40 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:45:40 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:45:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:45:40 TRACE Expression:41 - Expression text: xxx
2014-06-18 21:45:40 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:45:40 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:45:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:45:40 TRACE Expression:41 - Expression text: 123
2014-06-18 21:45:40 TRACE IDExpressionType:63 - xxx Test I
2014-06-18 21:45:40 TRACE Expression:228 - int_visitLdcInsn: 123
2014-06-18 21:45:40 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-18 21:45:40 TRACE Expression:228 - int_visitLdcInsn: 5
2014-06-18 21:45:40 TRACE CompoundStatement:77 - Add LocalVar to scope. Name = a, index = 1
2014-06-18 21:45:40 TRACE Expression:228 - int_visitLdcInsn: 2
2014-06-18 21:45:40 TRACE CompoundStatement:77 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-18 21:45:40 TRACE ConstructorExpression:87 - t= I
2014-06-18 21:45:40 TRACE ConstructorExpression:88 - #args= 0
2014-06-18 21:46:16 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 21:46:16 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 21:46:16 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 21:46:16 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))) ;)) })) })
2014-06-18 21:46:17 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 21:46:17 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];returna+xxx;}}
2014-06-18 21:46:17 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@75,379:379='}',<40>,19:0]}
2014-06-18 21:46:17 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-18 21:46:17 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-18 21:46:17 TRACE ClassDef:53 - Class name: Test
2014-06-18 21:46:17 TRACE Variable:30 - Field/variable added: tst
2014-06-18 21:46:17 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:46:17 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:46:17 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:46:17 TRACE Expression:41 - Expression text: 555
2014-06-18 21:46:17 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 21:46:17 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:46:17 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:46:17 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:46:17 TRACE Expression:41 - Expression text: 1
2014-06-18 21:46:17 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 21:46:17 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:46:17 TRACE Expression:39 - Token: '+'
2014-06-18 21:46:17 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:46:17 TRACE Expression:41 - Expression text: tst+1
2014-06-18 21:46:17 TRACE Variable:30 - Field/variable added: zzz
2014-06-18 21:46:17 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:46:17 TRACE Expression:39 - Token: '+'
2014-06-18 21:46:17 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:46:17 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-18 21:46:17 TRACE ClassMethod:39 - Method added: Main
2014-06-18 21:46:17 TRACE Variable:30 - Field/variable added: s
2014-06-18 21:46:17 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 21:46:17 TRACE Variable:30 - Field/variable added: a
2014-06-18 21:46:17 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:46:17 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:46:17 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:46:17 TRACE Expression:41 - Expression text: 5
2014-06-18 21:46:17 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-18 21:46:17 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 21:46:17 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:46:17 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:46:17 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:46:17 TRACE Expression:41 - Expression text: 2
2014-06-18 21:46:17 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 21:46:17 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 21:46:17 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-18 21:46:17 TRACE ConstructorExpression:35 - 4
2014-06-18 21:46:17 TRACE ConstructorExpression:36 - 3
2014-06-18 21:46:17 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-18 21:46:17 TRACE Expression:38 - Expression added: NEW
2014-06-18 21:46:17 TRACE Expression:39 - Token: 'new'
2014-06-18 21:46:17 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 21:46:17 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-18 21:46:17 TRACE CompoundStatement:49 - stmt in da block: returna+xxx;
2014-06-18 21:46:17 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:46:17 TRACE Expression:39 - Token: '+'
2014-06-18 21:46:17 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:46:17 TRACE Expression:41 - Expression text: a+xxx
2014-06-18 21:46:17 TRACE Expression:228 - int_visitLdcInsn: 555
2014-06-18 21:46:17 TRACE Expression:228 - int_visitLdcInsn: 1
2014-06-18 21:46:17 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:46:17 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:46:17 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:46:17 TRACE Expression:41 - Expression text: tst
2014-06-18 21:46:17 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:46:17 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:46:17 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:46:17 TRACE Expression:41 - Expression text: 1
2014-06-18 21:46:17 TRACE IDExpressionType:63 - tst Test I
2014-06-18 21:46:17 TRACE Expression:228 - int_visitLdcInsn: 1
2014-06-18 21:46:17 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:46:17 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:46:17 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:46:17 TRACE Expression:41 - Expression text: yyy
2014-06-18 21:46:17 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:46:17 TRACE Expression:39 - Token: '+'
2014-06-18 21:46:17 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:46:17 TRACE Expression:41 - Expression text: xxx+123
2014-06-18 21:46:17 TRACE IDExpressionType:63 - yyy Test I
2014-06-18 21:46:17 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:46:17 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:46:17 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:46:17 TRACE Expression:41 - Expression text: xxx
2014-06-18 21:46:17 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:46:17 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:46:17 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:46:17 TRACE Expression:41 - Expression text: 123
2014-06-18 21:46:17 TRACE IDExpressionType:63 - xxx Test I
2014-06-18 21:46:17 TRACE Expression:228 - int_visitLdcInsn: 123
2014-06-18 21:46:17 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-18 21:46:17 TRACE Expression:228 - int_visitLdcInsn: 5
2014-06-18 21:46:17 TRACE CompoundStatement:77 - Add LocalVar to scope. Name = a, index = 1
2014-06-18 21:46:17 TRACE Expression:228 - int_visitLdcInsn: 2
2014-06-18 21:46:17 TRACE CompoundStatement:77 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-18 21:46:17 TRACE ConstructorExpression:88 - t= I
2014-06-18 21:46:17 TRACE ConstructorExpression:89 - #args= 0
2014-06-18 21:47:13 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 21:47:13 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 21:47:13 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 21:47:13 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))) ;)) })) })
2014-06-18 21:47:14 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 21:47:14 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];returna+xxx;}}
2014-06-18 21:47:14 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@75,379:379='}',<40>,19:0]}
2014-06-18 21:47:14 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-18 21:47:14 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-18 21:47:14 TRACE ClassDef:53 - Class name: Test
2014-06-18 21:47:14 TRACE Variable:30 - Field/variable added: tst
2014-06-18 21:47:14 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:47:14 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:47:14 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:47:14 TRACE Expression:41 - Expression text: 555
2014-06-18 21:47:14 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 21:47:14 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:47:14 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:47:14 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:47:14 TRACE Expression:41 - Expression text: 1
2014-06-18 21:47:14 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 21:47:14 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:47:14 TRACE Expression:39 - Token: '+'
2014-06-18 21:47:14 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:47:14 TRACE Expression:41 - Expression text: tst+1
2014-06-18 21:47:14 TRACE Variable:30 - Field/variable added: zzz
2014-06-18 21:47:14 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:47:14 TRACE Expression:39 - Token: '+'
2014-06-18 21:47:14 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:47:14 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-18 21:47:14 TRACE ClassMethod:39 - Method added: Main
2014-06-18 21:47:14 TRACE Variable:30 - Field/variable added: s
2014-06-18 21:47:14 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 21:47:14 TRACE Variable:30 - Field/variable added: a
2014-06-18 21:47:14 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:47:14 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:47:14 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:47:14 TRACE Expression:41 - Expression text: 5
2014-06-18 21:47:14 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-18 21:47:14 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 21:47:14 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:47:14 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:47:14 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:47:14 TRACE Expression:41 - Expression text: 2
2014-06-18 21:47:14 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 21:47:14 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 21:47:14 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-18 21:47:14 TRACE ConstructorExpression:35 - 4
2014-06-18 21:47:14 TRACE ConstructorExpression:36 - 3
2014-06-18 21:47:14 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-18 21:47:14 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 21:47:29 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 21:47:29 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 21:47:29 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 21:47:29 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))) ;)) })) })
2014-06-18 21:47:29 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 21:47:29 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];returna+xxx;}}
2014-06-18 21:47:29 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@75,379:379='}',<40>,19:0]}
2014-06-18 21:47:29 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-18 21:47:29 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-18 21:47:29 TRACE ClassDef:53 - Class name: Test
2014-06-18 21:47:29 TRACE Variable:30 - Field/variable added: tst
2014-06-18 21:47:29 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:47:29 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:47:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:47:29 TRACE Expression:41 - Expression text: 555
2014-06-18 21:47:29 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 21:47:29 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:47:29 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:47:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:47:29 TRACE Expression:41 - Expression text: 1
2014-06-18 21:47:29 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 21:47:29 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:47:29 TRACE Expression:39 - Token: '+'
2014-06-18 21:47:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:47:29 TRACE Expression:41 - Expression text: tst+1
2014-06-18 21:47:29 TRACE Variable:30 - Field/variable added: zzz
2014-06-18 21:47:29 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:47:29 TRACE Expression:39 - Token: '+'
2014-06-18 21:47:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:47:29 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-18 21:47:29 TRACE ClassMethod:39 - Method added: Main
2014-06-18 21:47:29 TRACE Variable:30 - Field/variable added: s
2014-06-18 21:47:29 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 21:47:29 TRACE Variable:30 - Field/variable added: a
2014-06-18 21:47:29 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:47:29 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:47:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:47:29 TRACE Expression:41 - Expression text: 5
2014-06-18 21:47:29 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-18 21:47:29 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 21:47:29 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:47:29 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:47:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:47:29 TRACE Expression:41 - Expression text: 2
2014-06-18 21:47:29 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 21:47:29 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 21:47:29 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-18 21:47:29 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-18 21:47:29 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 21:47:29 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:47:29 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:47:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:47:29 TRACE Expression:41 - Expression text: 1
2014-06-18 21:47:29 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:47:29 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:47:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:47:29 TRACE Expression:41 - Expression text: 2
2014-06-18 21:47:29 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 21:47:29 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:47:29 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:47:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:47:29 TRACE Expression:41 - Expression text: 3
2014-06-18 21:47:29 TRACE Expression:38 - Expression added: NEW
2014-06-18 21:47:29 TRACE Expression:39 - Token: 'new'
2014-06-18 21:47:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 21:47:29 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-18 21:47:29 TRACE CompoundStatement:49 - stmt in da block: returna+xxx;
2014-06-18 21:47:29 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:47:29 TRACE Expression:39 - Token: '+'
2014-06-18 21:47:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:47:29 TRACE Expression:41 - Expression text: a+xxx
2014-06-18 21:47:29 TRACE Expression:228 - int_visitLdcInsn: 555
2014-06-18 21:47:29 TRACE Expression:228 - int_visitLdcInsn: 1
2014-06-18 21:47:29 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:47:29 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:47:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:47:29 TRACE Expression:41 - Expression text: tst
2014-06-18 21:47:29 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:47:29 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:47:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:47:29 TRACE Expression:41 - Expression text: 1
2014-06-18 21:47:29 TRACE IDExpressionType:63 - tst Test I
2014-06-18 21:47:29 TRACE Expression:228 - int_visitLdcInsn: 1
2014-06-18 21:47:29 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:47:29 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:47:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:47:29 TRACE Expression:41 - Expression text: yyy
2014-06-18 21:47:29 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:47:29 TRACE Expression:39 - Token: '+'
2014-06-18 21:47:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:47:29 TRACE Expression:41 - Expression text: xxx+123
2014-06-18 21:47:29 TRACE IDExpressionType:63 - yyy Test I
2014-06-18 21:47:29 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:47:29 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:47:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:47:29 TRACE Expression:41 - Expression text: xxx
2014-06-18 21:47:29 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:47:29 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:47:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:47:29 TRACE Expression:41 - Expression text: 123
2014-06-18 21:47:29 TRACE IDExpressionType:63 - xxx Test I
2014-06-18 21:47:29 TRACE Expression:228 - int_visitLdcInsn: 123
2014-06-18 21:47:29 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-18 21:47:29 TRACE Expression:228 - int_visitLdcInsn: 5
2014-06-18 21:47:29 TRACE CompoundStatement:77 - Add LocalVar to scope. Name = a, index = 1
2014-06-18 21:47:29 TRACE Expression:228 - int_visitLdcInsn: 2
2014-06-18 21:47:29 TRACE CompoundStatement:77 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-18 21:47:29 TRACE ConstructorExpression:85 - t= I
2014-06-18 21:47:29 TRACE ConstructorExpression:86 - #args= 3
2014-06-18 21:47:29 TRACE Expression:228 - int_visitLdcInsn: 1
2014-06-18 21:47:29 TRACE Expression:228 - int_visitLdcInsn: 2
2014-06-18 21:47:29 TRACE Expression:228 - int_visitLdcInsn: 3
2014-06-18 21:47:29 TRACE CompoundStatement:77 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-18 21:47:29 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:47:29 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:47:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:47:29 TRACE Expression:41 - Expression text: a
2014-06-18 21:47:29 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:47:29 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:47:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:47:29 TRACE Expression:41 - Expression text: xxx
2014-06-18 21:51:49 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 21:51:49 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 21:51:49 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 21:51:49 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))) ;)) })) })
2014-06-18 21:51:49 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 21:51:49 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];returna+xxx;}}
2014-06-18 21:51:49 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@75,379:379='}',<40>,19:0]}
2014-06-18 21:51:49 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-18 21:51:49 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-18 21:51:49 TRACE ClassDef:53 - Class name: Test
2014-06-18 21:51:49 TRACE Variable:30 - Field/variable added: tst
2014-06-18 21:51:49 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:51:49 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:51:49 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:51:49 TRACE Expression:41 - Expression text: 555
2014-06-18 21:51:49 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 21:51:49 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:51:49 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:51:49 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:51:49 TRACE Expression:41 - Expression text: 1
2014-06-18 21:51:49 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 21:51:49 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:51:49 TRACE Expression:39 - Token: '+'
2014-06-18 21:51:49 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:51:49 TRACE Expression:41 - Expression text: tst+1
2014-06-18 21:51:49 TRACE Variable:30 - Field/variable added: zzz
2014-06-18 21:51:49 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:51:49 TRACE Expression:39 - Token: '+'
2014-06-18 21:51:49 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:51:49 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-18 21:51:49 TRACE ClassMethod:39 - Method added: Main
2014-06-18 21:51:49 TRACE Variable:30 - Field/variable added: s
2014-06-18 21:51:49 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 21:51:49 TRACE Variable:30 - Field/variable added: a
2014-06-18 21:51:49 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:51:49 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:51:49 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:51:49 TRACE Expression:41 - Expression text: 5
2014-06-18 21:51:49 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-18 21:51:49 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 21:51:49 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:51:49 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:51:49 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:51:49 TRACE Expression:41 - Expression text: 2
2014-06-18 21:51:49 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 21:51:49 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 21:51:49 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-18 21:51:49 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-18 21:51:49 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 21:51:49 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:51:49 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:51:49 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:51:49 TRACE Expression:41 - Expression text: 1
2014-06-18 21:51:49 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:51:49 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:51:49 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:51:49 TRACE Expression:41 - Expression text: 2
2014-06-18 21:51:49 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 21:51:49 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:51:49 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:51:49 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:51:49 TRACE Expression:41 - Expression text: 3
2014-06-18 21:51:49 TRACE Expression:38 - Expression added: NEW
2014-06-18 21:51:49 TRACE Expression:39 - Token: 'new'
2014-06-18 21:51:49 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 21:51:49 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-18 21:51:49 TRACE CompoundStatement:49 - stmt in da block: returna+xxx;
2014-06-18 21:51:49 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:51:49 TRACE Expression:39 - Token: '+'
2014-06-18 21:51:49 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:51:49 TRACE Expression:41 - Expression text: a+xxx
2014-06-18 21:51:49 TRACE Expression:228 - int_visitLdcInsn: 555
2014-06-18 21:51:49 TRACE Expression:228 - int_visitLdcInsn: 1
2014-06-18 21:51:49 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:51:49 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:51:49 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:51:49 TRACE Expression:41 - Expression text: tst
2014-06-18 21:51:49 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:51:49 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:51:49 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:51:49 TRACE Expression:41 - Expression text: 1
2014-06-18 21:51:49 TRACE IDExpressionType:63 - tst Test I
2014-06-18 21:51:49 TRACE Expression:228 - int_visitLdcInsn: 1
2014-06-18 21:51:49 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:51:49 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:51:49 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:51:49 TRACE Expression:41 - Expression text: yyy
2014-06-18 21:51:49 TRACE Expression:38 - Expression added: PLUS
2014-06-18 21:51:49 TRACE Expression:39 - Token: '+'
2014-06-18 21:51:49 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 21:51:49 TRACE Expression:41 - Expression text: xxx+123
2014-06-18 21:51:49 TRACE IDExpressionType:63 - yyy Test I
2014-06-18 21:51:49 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:51:49 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:51:49 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:51:49 TRACE Expression:41 - Expression text: xxx
2014-06-18 21:51:49 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 21:51:49 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 21:51:49 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 21:51:49 TRACE Expression:41 - Expression text: 123
2014-06-18 21:51:49 TRACE IDExpressionType:63 - xxx Test I
2014-06-18 21:51:49 TRACE Expression:228 - int_visitLdcInsn: 123
2014-06-18 21:51:49 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-18 21:51:49 TRACE Expression:228 - int_visitLdcInsn: 5
2014-06-18 21:51:49 TRACE CompoundStatement:77 - Add LocalVar to scope. Name = a, index = 1
2014-06-18 21:51:49 TRACE Expression:228 - int_visitLdcInsn: 2
2014-06-18 21:51:49 TRACE CompoundStatement:77 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-18 21:51:49 TRACE ConstructorExpression:85 - t= I
2014-06-18 21:51:49 TRACE ConstructorExpression:86 - #args= 3
2014-06-18 21:51:49 TRACE Expression:228 - int_visitLdcInsn: 1
2014-06-18 21:51:49 TRACE Expression:228 - int_visitLdcInsn: 2
2014-06-18 21:51:49 TRACE Expression:228 - int_visitLdcInsn: 3
2014-06-18 21:51:49 TRACE CompoundStatement:77 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-18 21:51:49 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:51:49 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:51:49 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:51:49 TRACE Expression:41 - Expression text: a
2014-06-18 21:51:49 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 21:51:49 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 21:51:49 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 21:51:49 TRACE Expression:41 - Expression text: xxx
2014-06-18 22:02:32 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 22:02:32 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 22:02:32 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 22:02:32 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))) ;)) })) })
2014-06-18 22:02:33 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 22:02:33 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];returna+xxx;}}
2014-06-18 22:02:33 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@75,379:379='}',<40>,19:0]}
2014-06-18 22:02:33 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-18 22:02:33 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-18 22:02:33 TRACE ClassDef:53 - Class name: Test
2014-06-18 22:02:33 TRACE Variable:30 - Field/variable added: tst
2014-06-18 22:02:33 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:02:33 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:02:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:02:33 TRACE Expression:41 - Expression text: 555
2014-06-18 22:02:33 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 22:02:33 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:02:33 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:02:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:02:33 TRACE Expression:41 - Expression text: 1
2014-06-18 22:02:33 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 22:02:33 TRACE Expression:38 - Expression added: PLUS
2014-06-18 22:02:33 TRACE Expression:39 - Token: '+'
2014-06-18 22:02:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 22:02:33 TRACE Expression:41 - Expression text: tst+1
2014-06-18 22:02:33 TRACE Variable:30 - Field/variable added: zzz
2014-06-18 22:02:33 TRACE Expression:38 - Expression added: PLUS
2014-06-18 22:02:33 TRACE Expression:39 - Token: '+'
2014-06-18 22:02:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 22:02:33 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-18 22:02:33 TRACE ClassMethod:39 - Method added: Main
2014-06-18 22:02:33 TRACE Variable:30 - Field/variable added: s
2014-06-18 22:02:33 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 22:02:33 TRACE Variable:30 - Field/variable added: a
2014-06-18 22:02:33 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:02:33 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:02:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:02:33 TRACE Expression:41 - Expression text: 5
2014-06-18 22:02:33 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-18 22:02:33 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 22:02:33 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:02:33 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:02:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:02:33 TRACE Expression:41 - Expression text: 2
2014-06-18 22:02:33 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 22:02:33 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 22:02:33 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-18 22:02:33 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-18 22:02:33 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 22:02:33 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:02:33 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:02:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:02:33 TRACE Expression:41 - Expression text: 1
2014-06-18 22:02:33 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:02:33 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:02:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:02:33 TRACE Expression:41 - Expression text: 2
2014-06-18 22:02:33 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 22:02:33 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:02:33 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:02:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:02:33 TRACE Expression:41 - Expression text: 3
2014-06-18 22:02:33 TRACE Expression:38 - Expression added: NEW
2014-06-18 22:02:33 TRACE Expression:39 - Token: 'new'
2014-06-18 22:02:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 22:02:33 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-18 22:02:33 TRACE CompoundStatement:49 - stmt in da block: returna+xxx;
2014-06-18 22:02:33 TRACE Expression:38 - Expression added: PLUS
2014-06-18 22:02:33 TRACE Expression:39 - Token: '+'
2014-06-18 22:02:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 22:02:33 TRACE Expression:41 - Expression text: a+xxx
2014-06-18 22:02:33 TRACE Expression:228 - int_visitLdcInsn: 555
2014-06-18 22:02:33 TRACE Expression:228 - int_visitLdcInsn: 1
2014-06-18 22:02:33 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 22:02:33 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 22:02:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 22:02:33 TRACE Expression:41 - Expression text: tst
2014-06-18 22:02:33 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:02:33 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:02:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:02:33 TRACE Expression:41 - Expression text: 1
2014-06-18 22:02:33 TRACE IDExpressionType:63 - tst Test I
2014-06-18 22:02:33 TRACE Expression:228 - int_visitLdcInsn: 1
2014-06-18 22:02:33 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 22:02:33 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 22:02:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 22:02:33 TRACE Expression:41 - Expression text: yyy
2014-06-18 22:02:33 TRACE Expression:38 - Expression added: PLUS
2014-06-18 22:02:33 TRACE Expression:39 - Token: '+'
2014-06-18 22:02:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 22:02:33 TRACE Expression:41 - Expression text: xxx+123
2014-06-18 22:02:33 TRACE IDExpressionType:63 - yyy Test I
2014-06-18 22:02:33 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 22:02:33 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 22:02:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 22:02:33 TRACE Expression:41 - Expression text: xxx
2014-06-18 22:02:33 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:02:33 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:02:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:02:33 TRACE Expression:41 - Expression text: 123
2014-06-18 22:02:33 TRACE IDExpressionType:63 - xxx Test I
2014-06-18 22:02:33 TRACE Expression:228 - int_visitLdcInsn: 123
2014-06-18 22:02:33 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-18 22:02:33 TRACE Expression:228 - int_visitLdcInsn: 5
2014-06-18 22:02:33 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = a, index = 1
2014-06-18 22:02:33 TRACE Expression:228 - int_visitLdcInsn: 2
2014-06-18 22:02:33 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-18 22:02:33 TRACE ConstructorExpression:85 - t= I
2014-06-18 22:02:33 TRACE ConstructorExpression:86 - #args= 3
2014-06-18 22:02:33 TRACE Expression:228 - int_visitLdcInsn: 1
2014-06-18 22:02:33 TRACE Expression:228 - int_visitLdcInsn: 2
2014-06-18 22:02:33 TRACE Expression:228 - int_visitLdcInsn: 3
2014-06-18 22:02:33 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-18 22:02:33 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 22:02:33 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 22:02:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 22:02:33 TRACE Expression:41 - Expression text: a
2014-06-18 22:02:33 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 22:02:33 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 22:02:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 22:02:33 TRACE Expression:41 - Expression text: xxx
2014-06-18 22:02:50 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 22:02:50 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 22:02:50 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 22:02:50 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))) ;)) })) })
2014-06-18 22:02:51 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 22:02:51 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];returna+xxx;}}
2014-06-18 22:02:51 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@75,379:379='}',<40>,19:0]}
2014-06-18 22:02:51 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-18 22:02:51 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-18 22:02:51 TRACE ClassDef:53 - Class name: Test
2014-06-18 22:02:51 TRACE Variable:30 - Field/variable added: tst
2014-06-18 22:02:51 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:02:51 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:02:51 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:02:51 TRACE Expression:41 - Expression text: 555
2014-06-18 22:02:51 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 22:02:51 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:02:51 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:02:51 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:02:51 TRACE Expression:41 - Expression text: 1
2014-06-18 22:02:51 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 22:02:51 TRACE Expression:38 - Expression added: PLUS
2014-06-18 22:02:51 TRACE Expression:39 - Token: '+'
2014-06-18 22:02:51 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 22:02:51 TRACE Expression:41 - Expression text: tst+1
2014-06-18 22:02:51 TRACE Variable:30 - Field/variable added: zzz
2014-06-18 22:02:51 TRACE Expression:38 - Expression added: PLUS
2014-06-18 22:02:51 TRACE Expression:39 - Token: '+'
2014-06-18 22:02:51 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 22:02:51 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-18 22:02:51 TRACE ClassMethod:39 - Method added: Main
2014-06-18 22:02:51 TRACE Variable:30 - Field/variable added: s
2014-06-18 22:02:51 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 22:02:51 TRACE Variable:30 - Field/variable added: a
2014-06-18 22:02:51 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:02:51 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:02:51 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:02:51 TRACE Expression:41 - Expression text: 5
2014-06-18 22:02:51 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-18 22:02:51 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 22:02:51 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:02:51 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:02:51 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:02:51 TRACE Expression:41 - Expression text: 2
2014-06-18 22:02:51 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 22:02:51 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 22:02:51 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-18 22:02:51 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-18 22:02:51 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 22:02:51 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:02:51 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:02:51 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:02:51 TRACE Expression:41 - Expression text: 1
2014-06-18 22:02:51 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:02:51 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:02:51 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:02:51 TRACE Expression:41 - Expression text: 2
2014-06-18 22:02:51 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 22:02:51 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:02:51 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:02:51 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:02:51 TRACE Expression:41 - Expression text: 3
2014-06-18 22:02:51 TRACE Expression:38 - Expression added: NEW
2014-06-18 22:02:51 TRACE Expression:39 - Token: 'new'
2014-06-18 22:02:51 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 22:02:51 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-18 22:02:51 TRACE CompoundStatement:49 - stmt in da block: returna+xxx;
2014-06-18 22:02:51 TRACE Expression:38 - Expression added: PLUS
2014-06-18 22:02:51 TRACE Expression:39 - Token: '+'
2014-06-18 22:02:51 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 22:02:51 TRACE Expression:41 - Expression text: a+xxx
2014-06-18 22:02:51 TRACE Expression:228 - int_visitLdcInsn: 555
2014-06-18 22:02:51 TRACE Expression:228 - int_visitLdcInsn: 1
2014-06-18 22:02:51 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 22:02:51 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 22:02:51 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 22:02:51 TRACE Expression:41 - Expression text: tst
2014-06-18 22:02:51 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:02:51 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:02:51 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:02:51 TRACE Expression:41 - Expression text: 1
2014-06-18 22:02:51 TRACE IDExpressionType:63 - tst Test I
2014-06-18 22:02:51 TRACE Expression:228 - int_visitLdcInsn: 1
2014-06-18 22:02:51 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 22:02:51 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 22:02:51 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 22:02:51 TRACE Expression:41 - Expression text: yyy
2014-06-18 22:02:51 TRACE Expression:38 - Expression added: PLUS
2014-06-18 22:02:51 TRACE Expression:39 - Token: '+'
2014-06-18 22:02:51 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 22:02:51 TRACE Expression:41 - Expression text: xxx+123
2014-06-18 22:02:51 TRACE IDExpressionType:63 - yyy Test I
2014-06-18 22:02:51 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 22:02:51 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 22:02:51 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 22:02:51 TRACE Expression:41 - Expression text: xxx
2014-06-18 22:02:51 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:02:51 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:02:51 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:02:51 TRACE Expression:41 - Expression text: 123
2014-06-18 22:02:51 TRACE IDExpressionType:63 - xxx Test I
2014-06-18 22:02:51 TRACE Expression:228 - int_visitLdcInsn: 123
2014-06-18 22:02:51 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-18 22:02:51 TRACE Expression:228 - int_visitLdcInsn: 5
2014-06-18 22:02:51 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = a, index = 1
2014-06-18 22:02:51 TRACE Expression:228 - int_visitLdcInsn: 2
2014-06-18 22:02:51 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-18 22:02:51 TRACE ConstructorExpression:85 - t= I
2014-06-18 22:02:51 TRACE ConstructorExpression:86 - #args= 3
2014-06-18 22:02:51 TRACE Expression:228 - int_visitLdcInsn: 1
2014-06-18 22:02:51 TRACE Expression:228 - int_visitLdcInsn: 2
2014-06-18 22:02:51 TRACE Expression:228 - int_visitLdcInsn: 3
2014-06-18 22:02:51 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-18 22:02:51 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 22:02:51 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 22:02:51 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 22:02:51 TRACE Expression:41 - Expression text: a
2014-06-18 22:02:51 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 22:02:51 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 22:02:51 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 22:02:51 TRACE Expression:41 - Expression text: xxx
2014-06-18 22:03:24 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 22:03:24 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 22:03:24 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 22:03:24 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))) ;)) })) })
2014-06-18 22:03:25 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 22:03:25 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];returna+xxx;}}
2014-06-18 22:03:25 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@75,379:379='}',<40>,19:0]}
2014-06-18 22:03:25 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-18 22:03:25 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-18 22:03:25 TRACE ClassDef:53 - Class name: Test
2014-06-18 22:03:25 TRACE Variable:30 - Field/variable added: tst
2014-06-18 22:03:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:03:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:03:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:03:25 TRACE Expression:41 - Expression text: 555
2014-06-18 22:03:25 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 22:03:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:03:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:03:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:03:25 TRACE Expression:41 - Expression text: 1
2014-06-18 22:03:25 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 22:03:25 TRACE Expression:38 - Expression added: PLUS
2014-06-18 22:03:25 TRACE Expression:39 - Token: '+'
2014-06-18 22:03:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 22:03:25 TRACE Expression:41 - Expression text: tst+1
2014-06-18 22:03:25 TRACE Variable:30 - Field/variable added: zzz
2014-06-18 22:03:25 TRACE Expression:38 - Expression added: PLUS
2014-06-18 22:03:25 TRACE Expression:39 - Token: '+'
2014-06-18 22:03:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 22:03:25 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-18 22:03:25 TRACE ClassMethod:39 - Method added: Main
2014-06-18 22:03:25 TRACE Variable:30 - Field/variable added: s
2014-06-18 22:03:25 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 22:03:25 TRACE Variable:30 - Field/variable added: a
2014-06-18 22:03:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:03:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:03:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:03:25 TRACE Expression:41 - Expression text: 5
2014-06-18 22:03:25 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-18 22:03:25 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 22:03:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:03:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:03:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:03:25 TRACE Expression:41 - Expression text: 2
2014-06-18 22:03:25 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 22:03:25 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 22:03:25 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-18 22:03:25 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-18 22:03:25 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 22:03:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:03:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:03:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:03:25 TRACE Expression:41 - Expression text: 1
2014-06-18 22:03:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:03:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:03:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:03:25 TRACE Expression:41 - Expression text: 2
2014-06-18 22:03:25 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 22:03:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:03:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:03:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:03:25 TRACE Expression:41 - Expression text: 3
2014-06-18 22:03:25 TRACE Expression:38 - Expression added: NEW
2014-06-18 22:03:25 TRACE Expression:39 - Token: 'new'
2014-06-18 22:03:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 22:03:25 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-18 22:03:25 TRACE CompoundStatement:49 - stmt in da block: returna+xxx;
2014-06-18 22:03:25 TRACE Expression:38 - Expression added: PLUS
2014-06-18 22:03:25 TRACE Expression:39 - Token: '+'
2014-06-18 22:03:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 22:03:25 TRACE Expression:41 - Expression text: a+xxx
2014-06-18 22:03:25 TRACE Expression:228 - int_visitLdcInsn: 555
2014-06-18 22:03:25 TRACE Expression:228 - int_visitLdcInsn: 1
2014-06-18 22:03:25 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 22:03:25 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 22:03:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 22:03:25 TRACE Expression:41 - Expression text: tst
2014-06-18 22:03:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:03:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:03:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:03:25 TRACE Expression:41 - Expression text: 1
2014-06-18 22:03:25 TRACE IDExpressionType:63 - tst Test I
2014-06-18 22:03:25 TRACE Expression:228 - int_visitLdcInsn: 1
2014-06-18 22:03:25 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 22:03:25 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 22:03:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 22:03:25 TRACE Expression:41 - Expression text: yyy
2014-06-18 22:03:25 TRACE Expression:38 - Expression added: PLUS
2014-06-18 22:03:25 TRACE Expression:39 - Token: '+'
2014-06-18 22:03:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 22:03:25 TRACE Expression:41 - Expression text: xxx+123
2014-06-18 22:03:25 TRACE IDExpressionType:63 - yyy Test I
2014-06-18 22:03:25 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 22:03:25 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 22:03:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 22:03:25 TRACE Expression:41 - Expression text: xxx
2014-06-18 22:03:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:03:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:03:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:03:25 TRACE Expression:41 - Expression text: 123
2014-06-18 22:03:25 TRACE IDExpressionType:63 - xxx Test I
2014-06-18 22:03:25 TRACE Expression:228 - int_visitLdcInsn: 123
2014-06-18 22:03:25 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-18 22:03:25 TRACE Expression:228 - int_visitLdcInsn: 5
2014-06-18 22:03:25 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = a, index = 1
2014-06-18 22:03:25 TRACE Expression:228 - int_visitLdcInsn: 2
2014-06-18 22:03:25 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-18 22:03:25 TRACE ConstructorExpression:85 - t= I
2014-06-18 22:03:25 TRACE ConstructorExpression:86 - #args= 3
2014-06-18 22:03:25 TRACE Expression:228 - int_visitLdcInsn: 1
2014-06-18 22:03:25 TRACE Expression:228 - int_visitLdcInsn: 2
2014-06-18 22:03:25 TRACE Expression:228 - int_visitLdcInsn: 3
2014-06-18 22:03:25 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-18 22:03:25 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 22:03:25 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 22:03:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 22:03:25 TRACE Expression:41 - Expression text: a
2014-06-18 22:03:25 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 22:03:25 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 22:03:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 22:03:25 TRACE Expression:41 - Expression text: xxx
2014-06-18 22:03:25 INFO  CsCompiler:86 - tst = 555
2014-06-18 22:03:25 INFO  CsCompiler:86 - xxx = 1
2014-06-18 22:03:25 INFO  CsCompiler:86 - yyy = 556
2014-06-18 22:03:25 INFO  CsCompiler:86 - zzz = 680
2014-06-18 22:03:25 INFO  CsCompiler:89 - Main: 7
2014-06-18 22:03:59 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 22:03:59 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 22:03:59 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 22:03:59 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier testInt) (arr_suffix [ 1 , 1 ]) (arr_suffix [ 1 ]) =) (init_declarator_list init_declarator) 781 ;) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))) ;)) })) })
2014-06-18 22:04:00 ERROR CsCompiler:51 - Parse of Test.cs failed: 4 errors found
2014-06-18 22:04:17 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 22:04:17 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 22:04:17 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 22:04:17 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier testInt) (arr_suffix [ 1 , 1 ]) =) (init_declarator_list init_declarator) 781 ;) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))) ;)) })) })
2014-06-18 22:04:17 ERROR CsCompiler:51 - Parse of Test.cs failed: 3 errors found
2014-06-18 22:06:30 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 22:06:30 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 22:06:30 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 22:06:30 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier testInt) (arr_suffix [ 1 , 1 ]) =) (init_declarator_list init_declarator) 781 ;) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))) ;)) })) })
2014-06-18 22:06:30 ERROR CsCompiler:51 - Parse of Test.cs failed: 3 errors found
2014-06-18 22:08:51 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 22:08:51 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 22:08:51 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 22:08:51 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))) ;)) })) })
2014-06-18 22:08:52 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 22:08:52 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[1,1]=781;returna+xxx;}}
2014-06-18 22:08:52 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@84,406:406='}',<40>,20:0]}
2014-06-18 22:08:52 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-18 22:08:52 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-18 22:08:52 TRACE ClassDef:53 - Class name: Test
2014-06-18 22:08:52 TRACE Variable:30 - Field/variable added: tst
2014-06-18 22:08:52 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:08:52 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:08:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:08:52 TRACE Expression:41 - Expression text: 555
2014-06-18 22:08:52 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 22:08:52 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:08:52 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:08:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:08:52 TRACE Expression:41 - Expression text: 1
2014-06-18 22:08:52 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 22:08:52 TRACE Expression:38 - Expression added: PLUS
2014-06-18 22:08:52 TRACE Expression:39 - Token: '+'
2014-06-18 22:08:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 22:08:52 TRACE Expression:41 - Expression text: tst+1
2014-06-18 22:08:52 TRACE Variable:30 - Field/variable added: zzz
2014-06-18 22:08:52 TRACE Expression:38 - Expression added: PLUS
2014-06-18 22:08:52 TRACE Expression:39 - Token: '+'
2014-06-18 22:08:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 22:08:52 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-18 22:08:52 TRACE ClassMethod:39 - Method added: Main
2014-06-18 22:08:52 TRACE Variable:30 - Field/variable added: s
2014-06-18 22:08:52 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 22:08:52 TRACE Variable:30 - Field/variable added: a
2014-06-18 22:08:52 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:08:52 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:08:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:08:52 TRACE Expression:41 - Expression text: 5
2014-06-18 22:08:52 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-18 22:08:52 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 22:08:52 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:08:52 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:08:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:08:52 TRACE Expression:41 - Expression text: 2
2014-06-18 22:08:52 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 22:08:52 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 22:08:52 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-18 22:08:52 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-18 22:08:52 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 22:08:52 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:08:52 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:08:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:08:52 TRACE Expression:41 - Expression text: 1
2014-06-18 22:08:52 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:08:52 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:08:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:08:52 TRACE Expression:41 - Expression text: 2
2014-06-18 22:08:52 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 22:08:52 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:08:52 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:08:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:08:52 TRACE Expression:41 - Expression text: 3
2014-06-18 22:08:52 TRACE Expression:38 - Expression added: NEW
2014-06-18 22:08:52 TRACE Expression:39 - Token: 'new'
2014-06-18 22:08:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 22:08:52 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-18 22:08:52 TRACE CompoundStatement:49 - stmt in da block: testInt[1,1]=781;
2014-06-18 22:08:52 TRACE Expression:38 - Expression added: ASSIGN
2014-06-18 22:08:52 TRACE Expression:39 - Token: '='
2014-06-18 22:08:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 22:08:52 TRACE Expression:41 - Expression text: testInt[1,1]=781
2014-06-18 22:08:52 TRACE CompoundStatement:49 - stmt in da block: returna+xxx;
2014-06-18 22:08:52 TRACE Expression:38 - Expression added: PLUS
2014-06-18 22:08:52 TRACE Expression:39 - Token: '+'
2014-06-18 22:08:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 22:08:52 TRACE Expression:41 - Expression text: a+xxx
2014-06-18 22:08:52 TRACE Expression:228 - int_visitLdcInsn: 555
2014-06-18 22:08:52 TRACE Expression:228 - int_visitLdcInsn: 1
2014-06-18 22:08:52 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 22:08:52 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 22:08:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 22:08:52 TRACE Expression:41 - Expression text: tst
2014-06-18 22:08:52 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:08:52 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:08:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:08:52 TRACE Expression:41 - Expression text: 1
2014-06-18 22:08:52 TRACE IDExpressionType:63 - tst Test I
2014-06-18 22:08:52 TRACE Expression:228 - int_visitLdcInsn: 1
2014-06-18 22:08:52 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 22:08:52 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 22:08:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 22:08:52 TRACE Expression:41 - Expression text: yyy
2014-06-18 22:08:52 TRACE Expression:38 - Expression added: PLUS
2014-06-18 22:08:52 TRACE Expression:39 - Token: '+'
2014-06-18 22:08:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 22:08:52 TRACE Expression:41 - Expression text: xxx+123
2014-06-18 22:08:52 TRACE IDExpressionType:63 - yyy Test I
2014-06-18 22:08:52 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 22:08:52 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 22:08:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 22:08:52 TRACE Expression:41 - Expression text: xxx
2014-06-18 22:08:52 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:08:52 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:08:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:08:52 TRACE Expression:41 - Expression text: 123
2014-06-18 22:08:52 TRACE IDExpressionType:63 - xxx Test I
2014-06-18 22:08:52 TRACE Expression:228 - int_visitLdcInsn: 123
2014-06-18 22:08:52 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-18 22:08:52 TRACE Expression:228 - int_visitLdcInsn: 5
2014-06-18 22:08:52 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = a, index = 1
2014-06-18 22:08:52 TRACE Expression:228 - int_visitLdcInsn: 2
2014-06-18 22:08:52 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-18 22:08:52 TRACE ConstructorExpression:85 - t= I
2014-06-18 22:08:52 TRACE ConstructorExpression:86 - #args= 3
2014-06-18 22:08:52 TRACE Expression:228 - int_visitLdcInsn: 1
2014-06-18 22:08:52 TRACE Expression:228 - int_visitLdcInsn: 2
2014-06-18 22:08:52 TRACE Expression:228 - int_visitLdcInsn: 3
2014-06-18 22:08:52 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-18 22:09:42 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 22:09:42 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 22:09:42 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 22:09:42 DEBUG CsCompiler:44 - (cls_def public class Test { (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))) ;)) })) })
2014-06-18 22:09:42 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 22:09:42 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[1,1]=781;returna+xxx;}}
2014-06-18 22:09:42 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@57,414:414='}',<40>,20:0]}
2014-06-18 22:09:42 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-18 22:09:42 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-18 22:09:42 TRACE ClassDef:53 - Class name: Test
2014-06-18 22:09:42 TRACE ClassMethod:39 - Method added: Main
2014-06-18 22:09:42 TRACE Variable:30 - Field/variable added: s
2014-06-18 22:09:42 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 22:09:42 TRACE Variable:30 - Field/variable added: a
2014-06-18 22:09:42 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:09:42 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:09:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:09:42 TRACE Expression:41 - Expression text: 5
2014-06-18 22:09:42 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-18 22:09:42 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 22:09:42 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:09:42 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:09:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:09:42 TRACE Expression:41 - Expression text: 2
2014-06-18 22:09:42 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 22:09:42 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 22:09:42 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-18 22:09:42 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-18 22:09:42 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 22:09:42 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:09:42 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:09:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:09:42 TRACE Expression:41 - Expression text: 1
2014-06-18 22:09:42 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:09:42 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:09:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:09:42 TRACE Expression:41 - Expression text: 2
2014-06-18 22:09:42 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 22:09:42 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:09:42 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:09:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:09:42 TRACE Expression:41 - Expression text: 3
2014-06-18 22:09:42 TRACE Expression:38 - Expression added: NEW
2014-06-18 22:09:42 TRACE Expression:39 - Token: 'new'
2014-06-18 22:09:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 22:09:42 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-18 22:09:42 TRACE CompoundStatement:49 - stmt in da block: testInt[1,1]=781;
2014-06-18 22:09:42 TRACE Expression:38 - Expression added: ASSIGN
2014-06-18 22:09:42 TRACE Expression:39 - Token: '='
2014-06-18 22:09:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 22:09:42 TRACE Expression:41 - Expression text: testInt[1,1]=781
2014-06-18 22:09:42 TRACE CompoundStatement:49 - stmt in da block: returna+xxx;
2014-06-18 22:09:42 TRACE Expression:38 - Expression added: PLUS
2014-06-18 22:09:42 TRACE Expression:39 - Token: '+'
2014-06-18 22:09:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 22:09:42 TRACE Expression:41 - Expression text: a+xxx
2014-06-18 22:09:42 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-18 22:09:42 TRACE Expression:228 - int_visitLdcInsn: 5
2014-06-18 22:09:42 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = a, index = 1
2014-06-18 22:09:42 TRACE Expression:228 - int_visitLdcInsn: 2
2014-06-18 22:09:42 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-18 22:09:42 TRACE ConstructorExpression:85 - t= I
2014-06-18 22:09:42 TRACE ConstructorExpression:86 - #args= 3
2014-06-18 22:09:42 TRACE Expression:228 - int_visitLdcInsn: 1
2014-06-18 22:09:42 TRACE Expression:228 - int_visitLdcInsn: 2
2014-06-18 22:09:42 TRACE Expression:228 - int_visitLdcInsn: 3
2014-06-18 22:09:42 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-18 22:13:11 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 22:13:11 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 22:13:11 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 22:13:11 DEBUG CsCompiler:44 - (cls_def public class Test { (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))) ;)) })) })
2014-06-18 22:13:12 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 22:13:12 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[1,1][1]=781;returna+xxx;}}
2014-06-18 22:13:12 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@60,417:417='}',<40>,20:0]}
2014-06-18 22:13:12 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-18 22:13:12 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-18 22:13:12 TRACE ClassDef:53 - Class name: Test
2014-06-18 22:13:12 TRACE ClassMethod:39 - Method added: Main
2014-06-18 22:13:12 TRACE Variable:30 - Field/variable added: s
2014-06-18 22:13:12 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 22:13:12 TRACE Variable:30 - Field/variable added: a
2014-06-18 22:13:12 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:13:12 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:13:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:13:12 TRACE Expression:41 - Expression text: 5
2014-06-18 22:13:12 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-18 22:13:12 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 22:13:12 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:13:12 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:13:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:13:12 TRACE Expression:41 - Expression text: 2
2014-06-18 22:13:12 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 22:13:12 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 22:13:12 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-18 22:13:12 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-18 22:13:12 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 22:13:12 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:13:12 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:13:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:13:12 TRACE Expression:41 - Expression text: 1
2014-06-18 22:13:12 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:13:12 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:13:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:13:12 TRACE Expression:41 - Expression text: 2
2014-06-18 22:13:12 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 22:13:12 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 22:13:12 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 22:13:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 22:13:12 TRACE Expression:41 - Expression text: 3
2014-06-18 22:13:12 TRACE Expression:38 - Expression added: NEW
2014-06-18 22:13:12 TRACE Expression:39 - Token: 'new'
2014-06-18 22:13:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 22:13:12 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-18 22:13:12 TRACE CompoundStatement:49 - stmt in da block: testInt[1,1][1]=781;
2014-06-18 22:13:12 TRACE Expression:38 - Expression added: ASSIGN
2014-06-18 22:13:12 TRACE Expression:39 - Token: '='
2014-06-18 22:13:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 22:13:12 TRACE Expression:41 - Expression text: testInt[1,1][1]=781
2014-06-18 22:13:12 TRACE CompoundStatement:49 - stmt in da block: returna+xxx;
2014-06-18 22:13:12 TRACE Expression:38 - Expression added: PLUS
2014-06-18 22:13:12 TRACE Expression:39 - Token: '+'
2014-06-18 22:13:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 22:13:12 TRACE Expression:41 - Expression text: a+xxx
2014-06-18 22:13:12 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-18 22:13:12 TRACE Expression:228 - int_visitLdcInsn: 5
2014-06-18 22:13:12 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = a, index = 1
2014-06-18 22:13:12 TRACE Expression:228 - int_visitLdcInsn: 2
2014-06-18 22:13:12 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-18 22:13:12 TRACE ConstructorExpression:85 - t= I
2014-06-18 22:13:12 TRACE ConstructorExpression:86 - #args= 3
2014-06-18 22:13:12 TRACE Expression:228 - int_visitLdcInsn: 1
2014-06-18 22:13:12 TRACE Expression:228 - int_visitLdcInsn: 2
2014-06-18 22:13:12 TRACE Expression:228 - int_visitLdcInsn: 3
2014-06-18 22:13:12 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-18 23:00:51 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 23:00:51 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 23:00:51 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 23:00:51 DEBUG CsCompiler:44 - (cls_def public class Test { (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))) ;)) })) })
2014-06-18 23:00:51 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 23:00:51 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[1,1][1]=781;returna+xxx;}}
2014-06-18 23:00:51 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@60,417:417='}',<40>,20:0]}
2014-06-18 23:00:51 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-18 23:00:51 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-18 23:00:51 TRACE ClassDef:53 - Class name: Test
2014-06-18 23:00:51 TRACE ClassMethod:39 - Method added: Main
2014-06-18 23:00:51 TRACE Variable:30 - Field/variable added: s
2014-06-18 23:00:51 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 23:00:51 TRACE Variable:30 - Field/variable added: a
2014-06-18 23:00:51 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:00:51 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:00:51 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:00:51 TRACE Expression:41 - Expression text: 5
2014-06-18 23:00:51 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-18 23:00:51 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 23:00:51 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:00:51 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:00:51 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:00:51 TRACE Expression:41 - Expression text: 2
2014-06-18 23:00:51 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 23:00:51 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 23:00:51 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-18 23:00:51 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-18 23:00:51 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:00:51 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:00:51 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:00:51 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:00:51 TRACE Expression:41 - Expression text: 1
2014-06-18 23:00:51 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:00:51 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:00:51 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:00:51 TRACE Expression:41 - Expression text: 2
2014-06-18 23:00:51 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:00:51 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:00:51 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:00:51 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:00:51 TRACE Expression:41 - Expression text: 3
2014-06-18 23:00:51 TRACE Expression:38 - Expression added: NEW
2014-06-18 23:00:51 TRACE Expression:39 - Token: 'new'
2014-06-18 23:00:51 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 23:00:51 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-18 23:00:51 TRACE CompoundStatement:49 - stmt in da block: testInt[1,1][1]=781;
2014-06-18 23:00:51 TRACE Expression:38 - Expression added: ASSIGN
2014-06-18 23:00:51 TRACE Expression:39 - Token: '='
2014-06-18 23:00:51 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 23:00:51 TRACE Expression:41 - Expression text: testInt[1,1][1]=781
2014-06-18 23:00:51 TRACE CompoundStatement:49 - stmt in da block: returna+xxx;
2014-06-18 23:00:51 TRACE Expression:38 - Expression added: PLUS
2014-06-18 23:00:51 TRACE Expression:39 - Token: '+'
2014-06-18 23:00:51 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 23:00:51 TRACE Expression:41 - Expression text: a+xxx
2014-06-18 23:00:51 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-18 23:00:51 TRACE Expression:233 - int_visitLdcInsn: 5
2014-06-18 23:00:51 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = a, index = 1
2014-06-18 23:00:51 TRACE Expression:233 - int_visitLdcInsn: 2
2014-06-18 23:00:51 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-18 23:00:51 TRACE ConstructorExpression:85 - t= I
2014-06-18 23:00:51 TRACE ConstructorExpression:86 - #args= 3
2014-06-18 23:00:51 TRACE Expression:233 - int_visitLdcInsn: 1
2014-06-18 23:00:51 TRACE Expression:233 - int_visitLdcInsn: 2
2014-06-18 23:00:51 TRACE Expression:233 - int_visitLdcInsn: 3
2014-06-18 23:00:51 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-18 23:00:51 TRACE ArrIDExpressionType:21 - Constr rule: arr_arg_suffix
2014-06-18 23:00:51 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:00:51 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:00:51 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:00:51 TRACE Expression:41 - Expression text: 1
2014-06-18 23:00:51 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:00:51 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:00:51 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:00:51 TRACE Expression:41 - Expression text: 1
2014-06-18 23:00:51 TRACE ArrIDExpressionType:21 - Constr rule: arr_arg_suffix
2014-06-18 23:00:51 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:00:51 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:00:51 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:00:51 TRACE Expression:41 - Expression text: 1
2014-06-18 23:00:51 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:00:51 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:00:51 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-18 23:00:51 TRACE Expression:41 - Expression text: testInt[1,1][1]
2014-06-18 23:00:51 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:00:51 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:00:51 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:00:51 TRACE Expression:41 - Expression text: 781
2014-06-18 23:00:51 TRACE Expression:233 - int_visitLdcInsn: 781
2014-06-18 23:02:57 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 23:02:57 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 23:02:57 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 23:02:57 DEBUG CsCompiler:44 - (cls_def public class Test { (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))) ;)) })) })
2014-06-18 23:02:57 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 23:02:57 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[1,1][1]=781;returna+xxx;}}
2014-06-18 23:02:57 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@60,417:417='}',<40>,20:0]}
2014-06-18 23:02:57 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-18 23:02:57 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-18 23:02:57 TRACE ClassDef:53 - Class name: Test
2014-06-18 23:02:57 TRACE ClassMethod:39 - Method added: Main
2014-06-18 23:02:57 TRACE Variable:30 - Field/variable added: s
2014-06-18 23:02:57 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 23:02:57 TRACE Variable:30 - Field/variable added: a
2014-06-18 23:02:57 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:02:57 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:02:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:02:57 TRACE Expression:41 - Expression text: 5
2014-06-18 23:02:57 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-18 23:02:57 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 23:02:57 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:02:57 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:02:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:02:57 TRACE Expression:41 - Expression text: 2
2014-06-18 23:02:57 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 23:02:57 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 23:02:57 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-18 23:02:57 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-18 23:02:57 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:02:57 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:02:57 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:02:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:02:57 TRACE Expression:41 - Expression text: 1
2014-06-18 23:02:57 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:02:57 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:02:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:02:57 TRACE Expression:41 - Expression text: 2
2014-06-18 23:02:57 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:02:57 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:02:57 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:02:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:02:57 TRACE Expression:41 - Expression text: 3
2014-06-18 23:02:57 TRACE Expression:38 - Expression added: NEW
2014-06-18 23:02:57 TRACE Expression:39 - Token: 'new'
2014-06-18 23:02:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 23:02:57 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-18 23:02:57 TRACE CompoundStatement:49 - stmt in da block: testInt[1,1][1]=781;
2014-06-18 23:02:57 TRACE Expression:38 - Expression added: ASSIGN
2014-06-18 23:02:57 TRACE Expression:39 - Token: '='
2014-06-18 23:02:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 23:02:57 TRACE Expression:41 - Expression text: testInt[1,1][1]=781
2014-06-18 23:02:57 TRACE CompoundStatement:49 - stmt in da block: returna+xxx;
2014-06-18 23:02:57 TRACE Expression:38 - Expression added: PLUS
2014-06-18 23:02:57 TRACE Expression:39 - Token: '+'
2014-06-18 23:02:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 23:02:57 TRACE Expression:41 - Expression text: a+xxx
2014-06-18 23:02:57 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-18 23:02:57 TRACE Expression:233 - int_visitLdcInsn: 5
2014-06-18 23:02:57 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = a, index = 1
2014-06-18 23:02:57 TRACE Expression:233 - int_visitLdcInsn: 2
2014-06-18 23:02:57 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-18 23:02:57 TRACE ConstructorExpression:85 - t= I
2014-06-18 23:02:57 TRACE ConstructorExpression:86 - #args= 3
2014-06-18 23:02:57 TRACE Expression:233 - int_visitLdcInsn: 1
2014-06-18 23:02:57 TRACE Expression:233 - int_visitLdcInsn: 2
2014-06-18 23:02:57 TRACE Expression:233 - int_visitLdcInsn: 3
2014-06-18 23:02:57 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-18 23:02:57 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:02:57 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:02:57 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:02:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:02:57 TRACE Expression:41 - Expression text: 1
2014-06-18 23:02:57 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:02:57 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:02:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:02:57 TRACE Expression:41 - Expression text: 1
2014-06-18 23:02:57 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:02:57 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:02:57 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:02:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:02:57 TRACE Expression:41 - Expression text: 1
2014-06-18 23:02:57 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:02:57 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:02:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-18 23:02:57 TRACE Expression:41 - Expression text: testInt[1,1][1]
2014-06-18 23:02:57 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:02:57 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:02:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:02:57 TRACE Expression:41 - Expression text: 781
2014-06-18 23:02:57 TRACE Expression:233 - int_visitLdcInsn: 781
2014-06-18 23:02:57 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:02:57 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:02:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 23:02:57 TRACE Expression:41 - Expression text: a
2014-06-18 23:02:57 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:02:57 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:02:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 23:02:57 TRACE Expression:41 - Expression text: xxx
2014-06-18 23:03:13 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 23:03:13 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 23:03:13 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 23:03:13 DEBUG CsCompiler:44 - (cls_def public class Test { (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))) ;)) })) })
2014-06-18 23:03:13 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 23:03:13 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[1,1][1]=781;returna+xxx;}}
2014-06-18 23:03:13 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@60,417:417='}',<40>,20:0]}
2014-06-18 23:03:13 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-18 23:03:13 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-18 23:03:13 TRACE ClassDef:53 - Class name: Test
2014-06-18 23:03:13 TRACE ClassMethod:39 - Method added: Main
2014-06-18 23:03:13 TRACE Variable:30 - Field/variable added: s
2014-06-18 23:03:13 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 23:03:13 TRACE Variable:30 - Field/variable added: a
2014-06-18 23:03:13 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:03:13 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:03:13 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:03:13 TRACE Expression:41 - Expression text: 5
2014-06-18 23:03:13 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-18 23:03:13 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 23:03:13 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:03:13 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:03:13 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:03:13 TRACE Expression:41 - Expression text: 2
2014-06-18 23:03:13 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 23:03:13 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 23:03:13 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-18 23:03:13 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-18 23:03:13 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:03:13 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:03:13 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:03:13 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:03:13 TRACE Expression:41 - Expression text: 1
2014-06-18 23:03:13 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:03:13 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:03:13 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:03:13 TRACE Expression:41 - Expression text: 2
2014-06-18 23:03:13 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:03:13 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:03:13 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:03:13 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:03:13 TRACE Expression:41 - Expression text: 3
2014-06-18 23:03:13 TRACE Expression:38 - Expression added: NEW
2014-06-18 23:03:13 TRACE Expression:39 - Token: 'new'
2014-06-18 23:03:13 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 23:03:13 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-18 23:03:13 TRACE CompoundStatement:49 - stmt in da block: testInt[1,1][1]=781;
2014-06-18 23:03:13 TRACE Expression:38 - Expression added: ASSIGN
2014-06-18 23:03:13 TRACE Expression:39 - Token: '='
2014-06-18 23:03:13 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 23:03:13 TRACE Expression:41 - Expression text: testInt[1,1][1]=781
2014-06-18 23:03:13 TRACE CompoundStatement:49 - stmt in da block: returna+xxx;
2014-06-18 23:03:13 TRACE Expression:38 - Expression added: PLUS
2014-06-18 23:03:13 TRACE Expression:39 - Token: '+'
2014-06-18 23:03:13 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 23:03:13 TRACE Expression:41 - Expression text: a+xxx
2014-06-18 23:03:13 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-18 23:03:13 TRACE Expression:233 - int_visitLdcInsn: 5
2014-06-18 23:03:13 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = a, index = 1
2014-06-18 23:03:13 TRACE Expression:233 - int_visitLdcInsn: 2
2014-06-18 23:03:13 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-18 23:03:13 TRACE ConstructorExpression:85 - t= I
2014-06-18 23:03:13 TRACE ConstructorExpression:86 - #args= 3
2014-06-18 23:03:13 TRACE Expression:233 - int_visitLdcInsn: 1
2014-06-18 23:03:13 TRACE Expression:233 - int_visitLdcInsn: 2
2014-06-18 23:03:13 TRACE Expression:233 - int_visitLdcInsn: 3
2014-06-18 23:03:13 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-18 23:03:13 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:03:13 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:03:13 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:03:13 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:03:13 TRACE Expression:41 - Expression text: 1
2014-06-18 23:03:13 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:03:13 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:03:13 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:03:13 TRACE Expression:41 - Expression text: 1
2014-06-18 23:03:13 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:03:13 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:03:13 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:03:13 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:03:13 TRACE Expression:41 - Expression text: 1
2014-06-18 23:03:13 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:03:13 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:03:13 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-18 23:03:13 TRACE Expression:41 - Expression text: testInt[1,1][1]
2014-06-18 23:03:13 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:03:13 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:03:13 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:03:13 TRACE Expression:41 - Expression text: 781
2014-06-18 23:03:13 TRACE Expression:233 - int_visitLdcInsn: 781
2014-06-18 23:03:13 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:03:13 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:03:13 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 23:03:13 TRACE Expression:41 - Expression text: a
2014-06-18 23:03:13 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:03:13 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:03:13 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 23:03:13 TRACE Expression:41 - Expression text: xxx
2014-06-18 23:03:13 INFO  CsCompiler:89 - Main: 7
2014-06-18 23:04:16 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 23:04:16 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 23:04:16 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 23:04:16 DEBUG CsCompiler:44 - (cls_def public class Test { (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) ])))))))))))))))) ;)) })) })
2014-06-18 23:04:16 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 23:04:16 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[1,1][1]=781;returntestInt[1,1][1];}}
2014-06-18 23:04:16 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@66,450:450='}',<40>,21:0]}
2014-06-18 23:04:16 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-18 23:04:16 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-18 23:04:16 TRACE ClassDef:53 - Class name: Test
2014-06-18 23:04:16 TRACE ClassMethod:39 - Method added: Main
2014-06-18 23:04:16 TRACE Variable:30 - Field/variable added: s
2014-06-18 23:04:16 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 23:04:16 TRACE Variable:30 - Field/variable added: a
2014-06-18 23:04:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:04:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:04:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:04:16 TRACE Expression:41 - Expression text: 5
2014-06-18 23:04:16 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-18 23:04:16 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 23:04:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:04:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:04:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:04:16 TRACE Expression:41 - Expression text: 2
2014-06-18 23:04:16 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 23:04:16 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 23:04:16 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-18 23:04:16 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-18 23:04:16 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:04:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:04:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:04:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:04:16 TRACE Expression:41 - Expression text: 1
2014-06-18 23:04:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:04:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:04:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:04:16 TRACE Expression:41 - Expression text: 2
2014-06-18 23:04:16 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:04:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:04:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:04:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:04:16 TRACE Expression:41 - Expression text: 3
2014-06-18 23:04:16 TRACE Expression:38 - Expression added: NEW
2014-06-18 23:04:16 TRACE Expression:39 - Token: 'new'
2014-06-18 23:04:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 23:04:16 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-18 23:04:16 TRACE CompoundStatement:49 - stmt in da block: testInt[1,1][1]=781;
2014-06-18 23:04:16 TRACE Expression:38 - Expression added: ASSIGN
2014-06-18 23:04:16 TRACE Expression:39 - Token: '='
2014-06-18 23:04:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 23:04:16 TRACE Expression:41 - Expression text: testInt[1,1][1]=781
2014-06-18 23:04:16 TRACE CompoundStatement:49 - stmt in da block: returntestInt[1,1][1];
2014-06-18 23:04:16 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:04:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:04:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:04:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:04:16 TRACE Expression:41 - Expression text: 1
2014-06-18 23:04:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:04:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:04:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:04:16 TRACE Expression:41 - Expression text: 1
2014-06-18 23:04:16 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:04:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:04:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:04:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:04:16 TRACE Expression:41 - Expression text: 1
2014-06-18 23:04:16 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:04:16 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:04:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-18 23:04:16 TRACE Expression:41 - Expression text: testInt[1,1][1]
2014-06-18 23:04:16 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-18 23:04:16 TRACE Expression:233 - int_visitLdcInsn: 5
2014-06-18 23:04:16 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = a, index = 1
2014-06-18 23:04:16 TRACE Expression:233 - int_visitLdcInsn: 2
2014-06-18 23:04:16 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-18 23:04:16 TRACE ConstructorExpression:85 - t= I
2014-06-18 23:04:16 TRACE ConstructorExpression:86 - #args= 3
2014-06-18 23:04:16 TRACE Expression:233 - int_visitLdcInsn: 1
2014-06-18 23:04:16 TRACE Expression:233 - int_visitLdcInsn: 2
2014-06-18 23:04:16 TRACE Expression:233 - int_visitLdcInsn: 3
2014-06-18 23:04:16 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-18 23:04:16 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:04:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:04:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:04:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:04:16 TRACE Expression:41 - Expression text: 1
2014-06-18 23:04:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:04:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:04:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:04:16 TRACE Expression:41 - Expression text: 1
2014-06-18 23:04:16 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:04:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:04:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:04:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:04:16 TRACE Expression:41 - Expression text: 1
2014-06-18 23:04:16 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:04:16 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:04:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-18 23:04:16 TRACE Expression:41 - Expression text: testInt[1,1][1]
2014-06-18 23:04:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:04:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:04:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:04:16 TRACE Expression:41 - Expression text: 781
2014-06-18 23:04:16 TRACE Expression:233 - int_visitLdcInsn: 781
2014-06-18 23:06:10 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 23:06:10 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 23:06:10 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 23:06:10 DEBUG CsCompiler:44 - (cls_def public class Test { (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))) ;)) })) })
2014-06-18 23:06:11 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 23:06:11 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{publicstaticintMain(Strings){inta=5;intxxx=2;returna+xxx;}}
2014-06-18 23:06:11 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@29,454:454='}',<40>,21:0]}
2014-06-18 23:06:11 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-18 23:06:11 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-18 23:06:11 TRACE ClassDef:53 - Class name: Test
2014-06-18 23:06:11 TRACE ClassMethod:39 - Method added: Main
2014-06-18 23:06:11 TRACE Variable:30 - Field/variable added: s
2014-06-18 23:06:11 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 23:06:11 TRACE Variable:30 - Field/variable added: a
2014-06-18 23:06:11 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:06:11 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:06:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:06:11 TRACE Expression:41 - Expression text: 5
2014-06-18 23:06:11 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-18 23:06:11 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 23:06:11 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:06:11 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:06:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:06:11 TRACE Expression:41 - Expression text: 2
2014-06-18 23:06:11 TRACE CompoundStatement:49 - stmt in da block: returna+xxx;
2014-06-18 23:06:11 TRACE Expression:38 - Expression added: PLUS
2014-06-18 23:06:11 TRACE Expression:39 - Token: '+'
2014-06-18 23:06:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 23:06:11 TRACE Expression:41 - Expression text: a+xxx
2014-06-18 23:06:11 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-18 23:06:11 TRACE Expression:233 - int_visitLdcInsn: 5
2014-06-18 23:06:11 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = a, index = 1
2014-06-18 23:06:11 TRACE Expression:233 - int_visitLdcInsn: 2
2014-06-18 23:06:11 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-18 23:06:11 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:06:11 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:06:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 23:06:11 TRACE Expression:41 - Expression text: a
2014-06-18 23:06:11 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:06:11 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:06:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 23:06:11 TRACE Expression:41 - Expression text: xxx
2014-06-18 23:06:11 INFO  CsCompiler:89 - Main: 7
2014-06-18 23:06:34 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 23:06:34 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 23:06:34 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 23:06:34 DEBUG CsCompiler:44 - (cls_def public class Test { (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))) ;)) })) })
2014-06-18 23:06:35 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 23:06:35 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];returna+xxx;}}
2014-06-18 23:06:35 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@48,452:452='}',<40>,21:0]}
2014-06-18 23:06:35 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-18 23:06:35 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-18 23:06:35 TRACE ClassDef:53 - Class name: Test
2014-06-18 23:06:35 TRACE ClassMethod:39 - Method added: Main
2014-06-18 23:06:35 TRACE Variable:30 - Field/variable added: s
2014-06-18 23:06:35 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 23:06:35 TRACE Variable:30 - Field/variable added: a
2014-06-18 23:06:35 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:06:35 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:06:35 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:06:35 TRACE Expression:41 - Expression text: 5
2014-06-18 23:06:35 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-18 23:06:35 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 23:06:35 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:06:35 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:06:35 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:06:35 TRACE Expression:41 - Expression text: 2
2014-06-18 23:06:35 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 23:06:35 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 23:06:35 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-18 23:06:35 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-18 23:06:35 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:06:35 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:06:35 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:06:35 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:06:35 TRACE Expression:41 - Expression text: 1
2014-06-18 23:06:35 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:06:35 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:06:35 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:06:35 TRACE Expression:41 - Expression text: 2
2014-06-18 23:06:35 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:06:35 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:06:35 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:06:35 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:06:35 TRACE Expression:41 - Expression text: 3
2014-06-18 23:06:35 TRACE Expression:38 - Expression added: NEW
2014-06-18 23:06:35 TRACE Expression:39 - Token: 'new'
2014-06-18 23:06:35 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 23:06:35 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-18 23:06:35 TRACE CompoundStatement:49 - stmt in da block: returna+xxx;
2014-06-18 23:06:35 TRACE Expression:38 - Expression added: PLUS
2014-06-18 23:06:35 TRACE Expression:39 - Token: '+'
2014-06-18 23:06:35 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 23:06:35 TRACE Expression:41 - Expression text: a+xxx
2014-06-18 23:06:35 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-18 23:06:35 TRACE Expression:233 - int_visitLdcInsn: 5
2014-06-18 23:06:35 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = a, index = 1
2014-06-18 23:06:35 TRACE Expression:233 - int_visitLdcInsn: 2
2014-06-18 23:06:35 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-18 23:06:35 TRACE ConstructorExpression:85 - t= I
2014-06-18 23:06:35 TRACE ConstructorExpression:86 - #args= 3
2014-06-18 23:06:35 TRACE Expression:233 - int_visitLdcInsn: 1
2014-06-18 23:06:35 TRACE Expression:233 - int_visitLdcInsn: 2
2014-06-18 23:06:35 TRACE Expression:233 - int_visitLdcInsn: 3
2014-06-18 23:06:35 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-18 23:06:35 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:06:35 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:06:35 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 23:06:35 TRACE Expression:41 - Expression text: a
2014-06-18 23:06:35 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:06:35 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:06:35 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 23:06:35 TRACE Expression:41 - Expression text: xxx
2014-06-18 23:06:35 INFO  CsCompiler:89 - Main: 7
2014-06-18 23:06:47 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 23:06:47 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 23:06:47 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 23:06:47 DEBUG CsCompiler:44 - (cls_def public class Test { (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))) ;)) })) })
2014-06-18 23:06:47 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 23:06:47 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[1,1][1]=781;returna+xxx;}}
2014-06-18 23:06:47 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@60,450:450='}',<40>,21:0]}
2014-06-18 23:06:47 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-18 23:06:47 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-18 23:06:47 TRACE ClassDef:53 - Class name: Test
2014-06-18 23:06:47 TRACE ClassMethod:39 - Method added: Main
2014-06-18 23:06:47 TRACE Variable:30 - Field/variable added: s
2014-06-18 23:06:47 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 23:06:47 TRACE Variable:30 - Field/variable added: a
2014-06-18 23:06:47 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:06:47 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:06:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:06:47 TRACE Expression:41 - Expression text: 5
2014-06-18 23:06:47 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-18 23:06:47 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 23:06:47 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:06:47 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:06:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:06:47 TRACE Expression:41 - Expression text: 2
2014-06-18 23:06:47 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 23:06:47 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 23:06:47 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-18 23:06:47 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-18 23:06:47 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:06:47 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:06:47 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:06:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:06:47 TRACE Expression:41 - Expression text: 1
2014-06-18 23:06:47 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:06:47 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:06:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:06:47 TRACE Expression:41 - Expression text: 2
2014-06-18 23:06:47 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:06:47 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:06:47 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:06:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:06:47 TRACE Expression:41 - Expression text: 3
2014-06-18 23:06:47 TRACE Expression:38 - Expression added: NEW
2014-06-18 23:06:47 TRACE Expression:39 - Token: 'new'
2014-06-18 23:06:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 23:06:47 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-18 23:06:47 TRACE CompoundStatement:49 - stmt in da block: testInt[1,1][1]=781;
2014-06-18 23:06:47 TRACE Expression:38 - Expression added: ASSIGN
2014-06-18 23:06:47 TRACE Expression:39 - Token: '='
2014-06-18 23:06:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 23:06:47 TRACE Expression:41 - Expression text: testInt[1,1][1]=781
2014-06-18 23:06:47 TRACE CompoundStatement:49 - stmt in da block: returna+xxx;
2014-06-18 23:06:47 TRACE Expression:38 - Expression added: PLUS
2014-06-18 23:06:47 TRACE Expression:39 - Token: '+'
2014-06-18 23:06:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 23:06:47 TRACE Expression:41 - Expression text: a+xxx
2014-06-18 23:06:47 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-18 23:06:47 TRACE Expression:233 - int_visitLdcInsn: 5
2014-06-18 23:06:47 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = a, index = 1
2014-06-18 23:06:47 TRACE Expression:233 - int_visitLdcInsn: 2
2014-06-18 23:06:47 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-18 23:06:47 TRACE ConstructorExpression:85 - t= I
2014-06-18 23:06:47 TRACE ConstructorExpression:86 - #args= 3
2014-06-18 23:06:47 TRACE Expression:233 - int_visitLdcInsn: 1
2014-06-18 23:06:47 TRACE Expression:233 - int_visitLdcInsn: 2
2014-06-18 23:06:47 TRACE Expression:233 - int_visitLdcInsn: 3
2014-06-18 23:06:47 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-18 23:06:47 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:06:47 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:06:47 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:06:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:06:47 TRACE Expression:41 - Expression text: 1
2014-06-18 23:06:47 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:06:47 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:06:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:06:47 TRACE Expression:41 - Expression text: 1
2014-06-18 23:06:47 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:06:47 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:06:47 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:06:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:06:47 TRACE Expression:41 - Expression text: 1
2014-06-18 23:06:47 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:06:47 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:06:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-18 23:06:47 TRACE Expression:41 - Expression text: testInt[1,1][1]
2014-06-18 23:06:47 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:06:47 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:06:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:06:47 TRACE Expression:41 - Expression text: 781
2014-06-18 23:06:47 TRACE Expression:233 - int_visitLdcInsn: 781
2014-06-18 23:06:47 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:06:47 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:06:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 23:06:47 TRACE Expression:41 - Expression text: a
2014-06-18 23:06:47 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:06:47 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:06:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 23:06:47 TRACE Expression:41 - Expression text: xxx
2014-06-18 23:06:47 INFO  CsCompiler:89 - Main: 7
2014-06-18 23:09:02 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 23:09:02 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 23:09:02 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 23:09:02 DEBUG CsCompiler:44 - (cls_def public class Test { (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))) ;)) })) })
2014-06-18 23:09:02 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 23:09:02 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[1,1][1]=781;returna+xxx;}}
2014-06-18 23:09:02 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@60,450:450='}',<40>,21:0]}
2014-06-18 23:09:02 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-18 23:09:02 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-18 23:09:02 TRACE ClassDef:53 - Class name: Test
2014-06-18 23:09:02 TRACE ClassMethod:39 - Method added: Main
2014-06-18 23:09:02 TRACE Variable:30 - Field/variable added: s
2014-06-18 23:09:02 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 23:09:02 TRACE Variable:30 - Field/variable added: a
2014-06-18 23:09:02 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:09:02 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:09:03 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:09:03 TRACE Expression:41 - Expression text: 5
2014-06-18 23:09:03 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-18 23:09:03 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 23:09:03 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:09:03 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:09:03 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:09:03 TRACE Expression:41 - Expression text: 2
2014-06-18 23:09:03 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 23:09:03 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 23:09:03 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-18 23:09:03 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-18 23:09:03 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:09:03 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:09:03 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:09:03 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:09:03 TRACE Expression:41 - Expression text: 1
2014-06-18 23:09:03 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:09:03 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:09:03 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:09:03 TRACE Expression:41 - Expression text: 2
2014-06-18 23:09:03 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:09:03 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:09:03 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:09:03 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:09:03 TRACE Expression:41 - Expression text: 3
2014-06-18 23:09:03 TRACE Expression:38 - Expression added: NEW
2014-06-18 23:09:03 TRACE Expression:39 - Token: 'new'
2014-06-18 23:09:03 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 23:09:03 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-18 23:09:03 TRACE CompoundStatement:49 - stmt in da block: testInt[1,1][1]=781;
2014-06-18 23:09:03 TRACE Expression:38 - Expression added: ASSIGN
2014-06-18 23:09:03 TRACE Expression:39 - Token: '='
2014-06-18 23:09:03 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 23:09:03 TRACE Expression:41 - Expression text: testInt[1,1][1]=781
2014-06-18 23:09:03 TRACE CompoundStatement:49 - stmt in da block: returna+xxx;
2014-06-18 23:09:03 TRACE Expression:38 - Expression added: PLUS
2014-06-18 23:09:03 TRACE Expression:39 - Token: '+'
2014-06-18 23:09:03 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 23:09:03 TRACE Expression:41 - Expression text: a+xxx
2014-06-18 23:09:03 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-18 23:09:03 TRACE Expression:233 - int_visitLdcInsn: 5
2014-06-18 23:09:03 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = a, index = 1
2014-06-18 23:09:03 TRACE Expression:233 - int_visitLdcInsn: 2
2014-06-18 23:09:03 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-18 23:09:03 TRACE ConstructorExpression:85 - t= I
2014-06-18 23:09:03 TRACE ConstructorExpression:86 - #args= 3
2014-06-18 23:09:03 TRACE Expression:233 - int_visitLdcInsn: 1
2014-06-18 23:09:03 TRACE Expression:233 - int_visitLdcInsn: 2
2014-06-18 23:09:03 TRACE Expression:233 - int_visitLdcInsn: 3
2014-06-18 23:09:03 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-18 23:09:03 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:09:03 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:09:03 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:09:03 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:09:03 TRACE Expression:41 - Expression text: 1
2014-06-18 23:09:03 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:09:03 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:09:03 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:09:03 TRACE Expression:41 - Expression text: 1
2014-06-18 23:09:03 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:09:03 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:09:03 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:09:03 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:09:03 TRACE Expression:41 - Expression text: 1
2014-06-18 23:09:03 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:09:03 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:09:03 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-18 23:09:03 TRACE Expression:41 - Expression text: testInt[1,1][1]
2014-06-18 23:09:03 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:09:03 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:09:03 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:09:03 TRACE Expression:41 - Expression text: 781
2014-06-18 23:09:03 TRACE Expression:233 - int_visitLdcInsn: 781
2014-06-18 23:09:03 TRACE Expression:233 - int_visitLdcInsn: 1
2014-06-18 23:09:03 TRACE Expression:233 - int_visitLdcInsn: 1
2014-06-18 23:09:03 TRACE Expression:233 - int_visitLdcInsn: 1
2014-06-18 23:09:03 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:09:03 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:09:03 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 23:09:03 TRACE Expression:41 - Expression text: a
2014-06-18 23:09:03 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:09:03 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:09:03 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 23:09:03 TRACE Expression:41 - Expression text: xxx
2014-06-18 23:13:30 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 23:13:30 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 23:13:30 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 23:13:30 DEBUG CsCompiler:44 - (cls_def public class Test { (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))) ;)) })) })
2014-06-18 23:13:31 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 23:13:31 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];returna+xxx;}}
2014-06-18 23:13:31 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@48,452:452='}',<40>,21:0]}
2014-06-18 23:13:31 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-18 23:13:31 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-18 23:13:31 TRACE ClassDef:53 - Class name: Test
2014-06-18 23:13:31 TRACE ClassMethod:39 - Method added: Main
2014-06-18 23:13:31 TRACE Variable:30 - Field/variable added: s
2014-06-18 23:13:31 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 23:13:31 TRACE Variable:30 - Field/variable added: a
2014-06-18 23:13:31 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:13:31 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:13:31 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:13:31 TRACE Expression:41 - Expression text: 5
2014-06-18 23:13:31 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-18 23:13:31 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 23:13:31 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:13:31 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:13:31 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:13:31 TRACE Expression:41 - Expression text: 2
2014-06-18 23:13:31 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 23:13:31 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 23:13:31 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-18 23:13:31 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-18 23:13:31 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:13:31 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:13:31 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:13:31 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:13:31 TRACE Expression:41 - Expression text: 1
2014-06-18 23:13:31 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:13:31 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:13:31 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:13:31 TRACE Expression:41 - Expression text: 2
2014-06-18 23:13:31 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:13:31 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:13:31 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:13:31 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:13:31 TRACE Expression:41 - Expression text: 3
2014-06-18 23:13:31 TRACE Expression:38 - Expression added: NEW
2014-06-18 23:13:31 TRACE Expression:39 - Token: 'new'
2014-06-18 23:13:31 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 23:13:31 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-18 23:13:31 TRACE CompoundStatement:49 - stmt in da block: returna+xxx;
2014-06-18 23:13:31 TRACE Expression:38 - Expression added: PLUS
2014-06-18 23:13:31 TRACE Expression:39 - Token: '+'
2014-06-18 23:13:31 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 23:13:31 TRACE Expression:41 - Expression text: a+xxx
2014-06-18 23:13:31 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-18 23:13:31 TRACE Expression:233 - int_visitLdcInsn: 5
2014-06-18 23:13:31 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = a, index = 1
2014-06-18 23:13:31 TRACE Expression:233 - int_visitLdcInsn: 2
2014-06-18 23:13:31 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-18 23:13:31 TRACE ConstructorExpression:85 - t= I
2014-06-18 23:13:31 TRACE ConstructorExpression:86 - #args= 3
2014-06-18 23:13:31 TRACE Expression:233 - int_visitLdcInsn: 1
2014-06-18 23:13:31 TRACE Expression:233 - int_visitLdcInsn: 2
2014-06-18 23:13:31 TRACE Expression:233 - int_visitLdcInsn: 3
2014-06-18 23:13:31 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-18 23:13:31 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:13:31 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:13:31 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 23:13:31 TRACE Expression:41 - Expression text: a
2014-06-18 23:13:31 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:13:31 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:13:31 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 23:13:31 TRACE Expression:41 - Expression text: xxx
2014-06-18 23:13:31 INFO  CsCompiler:89 - Main: 7
2014-06-18 23:13:46 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 23:13:46 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 23:13:46 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 23:13:46 DEBUG CsCompiler:44 - (cls_def public class Test { (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))) ;)) })) })
2014-06-18 23:13:46 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 23:13:46 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[1,1][1]=781;returna+xxx;}}
2014-06-18 23:13:46 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@60,450:450='}',<40>,21:0]}
2014-06-18 23:13:46 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-18 23:13:46 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-18 23:13:46 TRACE ClassDef:53 - Class name: Test
2014-06-18 23:13:46 TRACE ClassMethod:39 - Method added: Main
2014-06-18 23:13:46 TRACE Variable:30 - Field/variable added: s
2014-06-18 23:13:46 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 23:13:46 TRACE Variable:30 - Field/variable added: a
2014-06-18 23:13:46 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:13:46 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:13:46 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:13:46 TRACE Expression:41 - Expression text: 5
2014-06-18 23:13:46 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-18 23:13:46 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 23:13:46 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:13:46 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:13:46 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:13:46 TRACE Expression:41 - Expression text: 2
2014-06-18 23:13:46 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 23:13:46 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 23:13:46 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-18 23:13:46 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-18 23:13:46 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:13:46 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:13:46 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:13:46 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:13:46 TRACE Expression:41 - Expression text: 1
2014-06-18 23:13:46 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:13:46 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:13:46 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:13:46 TRACE Expression:41 - Expression text: 2
2014-06-18 23:13:46 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:13:46 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:13:46 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:13:46 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:13:46 TRACE Expression:41 - Expression text: 3
2014-06-18 23:13:46 TRACE Expression:38 - Expression added: NEW
2014-06-18 23:13:46 TRACE Expression:39 - Token: 'new'
2014-06-18 23:13:46 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 23:13:46 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-18 23:13:46 TRACE CompoundStatement:49 - stmt in da block: testInt[1,1][1]=781;
2014-06-18 23:13:46 TRACE Expression:38 - Expression added: ASSIGN
2014-06-18 23:13:46 TRACE Expression:39 - Token: '='
2014-06-18 23:13:46 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 23:13:46 TRACE Expression:41 - Expression text: testInt[1,1][1]=781
2014-06-18 23:13:46 TRACE CompoundStatement:49 - stmt in da block: returna+xxx;
2014-06-18 23:13:46 TRACE Expression:38 - Expression added: PLUS
2014-06-18 23:13:46 TRACE Expression:39 - Token: '+'
2014-06-18 23:13:46 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 23:13:46 TRACE Expression:41 - Expression text: a+xxx
2014-06-18 23:13:46 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-18 23:13:46 TRACE Expression:233 - int_visitLdcInsn: 5
2014-06-18 23:13:46 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = a, index = 1
2014-06-18 23:13:46 TRACE Expression:233 - int_visitLdcInsn: 2
2014-06-18 23:13:47 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-18 23:13:47 TRACE ConstructorExpression:85 - t= I
2014-06-18 23:13:47 TRACE ConstructorExpression:86 - #args= 3
2014-06-18 23:13:47 TRACE Expression:233 - int_visitLdcInsn: 1
2014-06-18 23:13:47 TRACE Expression:233 - int_visitLdcInsn: 2
2014-06-18 23:13:47 TRACE Expression:233 - int_visitLdcInsn: 3
2014-06-18 23:13:47 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-18 23:13:47 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:13:47 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:13:47 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:13:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:13:47 TRACE Expression:41 - Expression text: 1
2014-06-18 23:13:47 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:13:47 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:13:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:13:47 TRACE Expression:41 - Expression text: 1
2014-06-18 23:13:47 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:13:47 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:13:47 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:13:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:13:47 TRACE Expression:41 - Expression text: 1
2014-06-18 23:13:47 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:13:47 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:13:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-18 23:13:47 TRACE Expression:41 - Expression text: testInt[1,1][1]
2014-06-18 23:13:47 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:13:47 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:13:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:13:47 TRACE Expression:41 - Expression text: 781
2014-06-18 23:13:47 TRACE Expression:233 - int_visitLdcInsn: 781
2014-06-18 23:13:47 TRACE Expression:233 - int_visitLdcInsn: 1
2014-06-18 23:13:47 TRACE Expression:233 - int_visitLdcInsn: 1
2014-06-18 23:13:47 TRACE Expression:233 - int_visitLdcInsn: 1
2014-06-18 23:13:47 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:13:47 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:13:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 23:13:47 TRACE Expression:41 - Expression text: a
2014-06-18 23:13:47 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:13:47 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:13:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 23:13:47 TRACE Expression:41 - Expression text: xxx
2014-06-18 23:14:39 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 23:14:39 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 23:14:39 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 23:14:39 DEBUG CsCompiler:44 - (cls_def public class Test { (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))) ;)) })) })
2014-06-18 23:14:40 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 23:14:40 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[1,1][1]=781;returna+xxx;}}
2014-06-18 23:14:40 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@60,450:450='}',<40>,21:0]}
2014-06-18 23:14:40 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-18 23:14:40 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-18 23:14:40 TRACE ClassDef:53 - Class name: Test
2014-06-18 23:14:40 TRACE ClassMethod:39 - Method added: Main
2014-06-18 23:14:40 TRACE Variable:30 - Field/variable added: s
2014-06-18 23:14:40 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 23:14:40 TRACE Variable:30 - Field/variable added: a
2014-06-18 23:14:40 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:14:40 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:14:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:14:40 TRACE Expression:41 - Expression text: 5
2014-06-18 23:14:40 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-18 23:14:40 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 23:14:40 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:14:40 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:14:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:14:40 TRACE Expression:41 - Expression text: 2
2014-06-18 23:14:40 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 23:14:40 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 23:14:40 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-18 23:14:40 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-18 23:14:40 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:14:40 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:14:40 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:14:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:14:40 TRACE Expression:41 - Expression text: 1
2014-06-18 23:14:40 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:14:40 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:14:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:14:40 TRACE Expression:41 - Expression text: 2
2014-06-18 23:14:40 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:14:40 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:14:40 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:14:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:14:40 TRACE Expression:41 - Expression text: 3
2014-06-18 23:14:40 TRACE Expression:38 - Expression added: NEW
2014-06-18 23:14:40 TRACE Expression:39 - Token: 'new'
2014-06-18 23:14:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 23:14:40 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-18 23:14:40 TRACE CompoundStatement:49 - stmt in da block: testInt[1,1][1]=781;
2014-06-18 23:14:40 TRACE Expression:38 - Expression added: ASSIGN
2014-06-18 23:14:40 TRACE Expression:39 - Token: '='
2014-06-18 23:14:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 23:14:40 TRACE Expression:41 - Expression text: testInt[1,1][1]=781
2014-06-18 23:14:40 TRACE CompoundStatement:49 - stmt in da block: returna+xxx;
2014-06-18 23:14:40 TRACE Expression:38 - Expression added: PLUS
2014-06-18 23:14:40 TRACE Expression:39 - Token: '+'
2014-06-18 23:14:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 23:14:40 TRACE Expression:41 - Expression text: a+xxx
2014-06-18 23:14:40 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-18 23:14:40 TRACE Expression:233 - int_visitLdcInsn: 5
2014-06-18 23:14:40 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = a, index = 1
2014-06-18 23:14:40 TRACE Expression:233 - int_visitLdcInsn: 2
2014-06-18 23:14:40 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-18 23:14:40 TRACE ConstructorExpression:85 - t= I
2014-06-18 23:14:40 TRACE ConstructorExpression:86 - #args= 3
2014-06-18 23:14:40 TRACE Expression:233 - int_visitLdcInsn: 1
2014-06-18 23:14:40 TRACE Expression:233 - int_visitLdcInsn: 2
2014-06-18 23:14:40 TRACE Expression:233 - int_visitLdcInsn: 3
2014-06-18 23:14:40 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-18 23:14:40 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:14:40 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:14:40 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:14:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:14:40 TRACE Expression:41 - Expression text: 1
2014-06-18 23:14:40 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:14:40 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:14:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:14:40 TRACE Expression:41 - Expression text: 1
2014-06-18 23:14:40 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:14:40 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:14:40 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:14:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:14:40 TRACE Expression:41 - Expression text: 1
2014-06-18 23:14:40 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:14:40 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:14:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-18 23:14:40 TRACE Expression:41 - Expression text: testInt[1,1][1]
2014-06-18 23:14:40 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:14:40 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:14:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:14:40 TRACE Expression:41 - Expression text: 781
2014-06-18 23:14:40 TRACE Expression:233 - int_visitLdcInsn: 781
2014-06-18 23:14:40 TRACE Expression:233 - int_visitLdcInsn: 1
2014-06-18 23:14:40 TRACE Expression:233 - int_visitLdcInsn: 1
2014-06-18 23:14:40 TRACE Expression:233 - int_visitLdcInsn: 1
2014-06-18 23:14:40 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:14:40 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:14:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 23:14:40 TRACE Expression:41 - Expression text: a
2014-06-18 23:14:40 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:14:40 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:14:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 23:14:40 TRACE Expression:41 - Expression text: xxx
2014-06-18 23:32:29 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 23:32:29 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 23:32:29 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 23:32:29 DEBUG CsCompiler:44 - (cls_def public class Test { (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))) ;)) })) })
2014-06-18 23:32:30 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 23:32:30 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[1,1][1]=781;returna+xxx;}}
2014-06-18 23:32:30 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@60,450:450='}',<40>,21:0]}
2014-06-18 23:32:30 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-18 23:32:30 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-18 23:32:30 TRACE ClassDef:53 - Class name: Test
2014-06-18 23:32:30 TRACE ClassMethod:39 - Method added: Main
2014-06-18 23:32:30 TRACE Variable:30 - Field/variable added: s
2014-06-18 23:32:30 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 23:32:30 TRACE Variable:30 - Field/variable added: a
2014-06-18 23:32:30 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:32:30 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:32:30 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:32:30 TRACE Expression:41 - Expression text: 5
2014-06-18 23:32:30 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-18 23:32:30 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 23:32:30 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:32:30 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:32:30 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:32:30 TRACE Expression:41 - Expression text: 2
2014-06-18 23:32:30 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 23:32:30 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 23:32:30 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-18 23:32:30 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-18 23:32:30 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:32:30 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:32:30 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:32:30 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:32:30 TRACE Expression:41 - Expression text: 1
2014-06-18 23:32:30 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:32:30 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:32:30 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:32:30 TRACE Expression:41 - Expression text: 2
2014-06-18 23:32:30 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:32:30 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:32:30 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:32:30 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:32:30 TRACE Expression:41 - Expression text: 3
2014-06-18 23:32:30 TRACE Expression:38 - Expression added: NEW
2014-06-18 23:32:30 TRACE Expression:39 - Token: 'new'
2014-06-18 23:32:30 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 23:32:30 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-18 23:32:30 TRACE CompoundStatement:49 - stmt in da block: testInt[1,1][1]=781;
2014-06-18 23:32:30 TRACE Expression:38 - Expression added: ASSIGN
2014-06-18 23:32:30 TRACE Expression:39 - Token: '='
2014-06-18 23:32:30 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 23:32:30 TRACE Expression:41 - Expression text: testInt[1,1][1]=781
2014-06-18 23:32:30 TRACE CompoundStatement:49 - stmt in da block: returna+xxx;
2014-06-18 23:32:30 TRACE Expression:38 - Expression added: PLUS
2014-06-18 23:32:30 TRACE Expression:39 - Token: '+'
2014-06-18 23:32:30 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 23:32:30 TRACE Expression:41 - Expression text: a+xxx
2014-06-18 23:32:30 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-18 23:32:30 TRACE Expression:241 - int_visitLdcInsn: 5
2014-06-18 23:32:30 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = a, index = 1
2014-06-18 23:32:30 TRACE Expression:241 - int_visitLdcInsn: 2
2014-06-18 23:32:30 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-18 23:32:30 TRACE ConstructorExpression:85 - t= I
2014-06-18 23:32:30 TRACE ConstructorExpression:86 - #args= 3
2014-06-18 23:32:30 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 23:32:30 TRACE Expression:241 - int_visitLdcInsn: 2
2014-06-18 23:32:30 TRACE Expression:241 - int_visitLdcInsn: 3
2014-06-18 23:32:30 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-18 23:32:30 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:32:30 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:32:30 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:32:30 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:32:30 TRACE Expression:41 - Expression text: 1
2014-06-18 23:32:30 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:32:30 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:32:30 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:32:30 TRACE Expression:41 - Expression text: 1
2014-06-18 23:32:30 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:32:30 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:32:30 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:32:30 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:32:30 TRACE Expression:41 - Expression text: 1
2014-06-18 23:32:30 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:32:30 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:32:30 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-18 23:32:30 TRACE Expression:41 - Expression text: testInt[1,1][1]
2014-06-18 23:32:30 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:32:30 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:32:30 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:32:30 TRACE Expression:41 - Expression text: 781
2014-06-18 23:32:57 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 23:32:57 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 23:32:57 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 23:32:57 DEBUG CsCompiler:44 - (cls_def public class Test { (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))) ;)) })) })
2014-06-18 23:32:58 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 23:32:58 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[1,1][1]=781;returna+xxx;}}
2014-06-18 23:32:58 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@60,450:450='}',<40>,21:0]}
2014-06-18 23:32:58 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-18 23:32:58 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-18 23:32:58 TRACE ClassDef:53 - Class name: Test
2014-06-18 23:32:58 TRACE ClassMethod:39 - Method added: Main
2014-06-18 23:32:58 TRACE Variable:30 - Field/variable added: s
2014-06-18 23:32:58 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 23:32:58 TRACE Variable:30 - Field/variable added: a
2014-06-18 23:32:58 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:32:58 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:32:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:32:58 TRACE Expression:41 - Expression text: 5
2014-06-18 23:32:58 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-18 23:32:58 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 23:32:58 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:32:58 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:32:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:32:58 TRACE Expression:41 - Expression text: 2
2014-06-18 23:32:58 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 23:32:58 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 23:32:58 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-18 23:32:58 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-18 23:32:58 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:32:58 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:32:58 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:32:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:32:58 TRACE Expression:41 - Expression text: 1
2014-06-18 23:32:58 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:32:58 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:32:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:32:58 TRACE Expression:41 - Expression text: 2
2014-06-18 23:32:58 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:32:58 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:32:58 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:32:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:32:58 TRACE Expression:41 - Expression text: 3
2014-06-18 23:32:58 TRACE Expression:38 - Expression added: NEW
2014-06-18 23:32:58 TRACE Expression:39 - Token: 'new'
2014-06-18 23:32:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 23:32:58 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-18 23:32:58 TRACE CompoundStatement:49 - stmt in da block: testInt[1,1][1]=781;
2014-06-18 23:32:58 TRACE Expression:38 - Expression added: ASSIGN
2014-06-18 23:32:58 TRACE Expression:39 - Token: '='
2014-06-18 23:32:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 23:32:58 TRACE Expression:41 - Expression text: testInt[1,1][1]=781
2014-06-18 23:32:58 TRACE CompoundStatement:49 - stmt in da block: returna+xxx;
2014-06-18 23:32:58 TRACE Expression:38 - Expression added: PLUS
2014-06-18 23:32:58 TRACE Expression:39 - Token: '+'
2014-06-18 23:32:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 23:32:58 TRACE Expression:41 - Expression text: a+xxx
2014-06-18 23:32:58 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-18 23:32:58 TRACE Expression:241 - int_visitLdcInsn: 5
2014-06-18 23:32:58 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = a, index = 1
2014-06-18 23:32:58 TRACE Expression:241 - int_visitLdcInsn: 2
2014-06-18 23:32:58 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-18 23:32:58 TRACE ConstructorExpression:85 - t= I
2014-06-18 23:32:58 TRACE ConstructorExpression:86 - #args= 3
2014-06-18 23:32:58 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 23:32:58 TRACE Expression:241 - int_visitLdcInsn: 2
2014-06-18 23:32:58 TRACE Expression:241 - int_visitLdcInsn: 3
2014-06-18 23:32:58 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-18 23:32:58 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:32:58 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:32:58 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:32:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:32:58 TRACE Expression:41 - Expression text: 1
2014-06-18 23:32:58 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:32:58 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:32:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:32:58 TRACE Expression:41 - Expression text: 1
2014-06-18 23:32:58 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:32:58 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:32:58 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:32:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:32:58 TRACE Expression:41 - Expression text: 1
2014-06-18 23:32:58 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:32:58 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:32:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-18 23:32:58 TRACE Expression:41 - Expression text: testInt[1,1][1]
2014-06-18 23:32:58 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:32:58 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:32:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:32:58 TRACE Expression:41 - Expression text: 781
2014-06-18 23:33:12 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 23:33:12 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 23:33:12 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 23:33:12 DEBUG CsCompiler:44 - (cls_def public class Test { (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))) ;)) })) })
2014-06-18 23:33:12 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 23:33:12 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[1,1][1]=781;returna+xxx;}}
2014-06-18 23:33:12 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@60,450:450='}',<40>,21:0]}
2014-06-18 23:33:12 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-18 23:33:12 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-18 23:33:12 TRACE ClassDef:53 - Class name: Test
2014-06-18 23:33:12 TRACE ClassMethod:39 - Method added: Main
2014-06-18 23:33:12 TRACE Variable:30 - Field/variable added: s
2014-06-18 23:33:12 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 23:33:12 TRACE Variable:30 - Field/variable added: a
2014-06-18 23:33:12 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:33:12 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:33:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:33:12 TRACE Expression:41 - Expression text: 5
2014-06-18 23:33:12 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-18 23:33:12 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 23:33:12 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:33:12 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:33:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:33:12 TRACE Expression:41 - Expression text: 2
2014-06-18 23:33:12 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 23:33:12 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 23:33:12 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-18 23:33:12 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-18 23:33:12 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:33:12 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:33:12 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:33:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:33:12 TRACE Expression:41 - Expression text: 1
2014-06-18 23:33:12 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:33:12 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:33:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:33:12 TRACE Expression:41 - Expression text: 2
2014-06-18 23:33:12 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:33:12 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:33:12 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:33:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:33:12 TRACE Expression:41 - Expression text: 3
2014-06-18 23:33:12 TRACE Expression:38 - Expression added: NEW
2014-06-18 23:33:12 TRACE Expression:39 - Token: 'new'
2014-06-18 23:33:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 23:33:12 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-18 23:33:12 TRACE CompoundStatement:49 - stmt in da block: testInt[1,1][1]=781;
2014-06-18 23:33:12 TRACE Expression:38 - Expression added: ASSIGN
2014-06-18 23:33:12 TRACE Expression:39 - Token: '='
2014-06-18 23:33:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 23:33:12 TRACE Expression:41 - Expression text: testInt[1,1][1]=781
2014-06-18 23:33:12 TRACE CompoundStatement:49 - stmt in da block: returna+xxx;
2014-06-18 23:33:12 TRACE Expression:38 - Expression added: PLUS
2014-06-18 23:33:12 TRACE Expression:39 - Token: '+'
2014-06-18 23:33:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 23:33:12 TRACE Expression:41 - Expression text: a+xxx
2014-06-18 23:33:12 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-18 23:33:12 TRACE Expression:241 - int_visitLdcInsn: 5
2014-06-18 23:33:12 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = a, index = 1
2014-06-18 23:33:12 TRACE Expression:241 - int_visitLdcInsn: 2
2014-06-18 23:33:12 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-18 23:33:12 TRACE ConstructorExpression:85 - t= I
2014-06-18 23:33:12 TRACE ConstructorExpression:86 - #args= 3
2014-06-18 23:33:12 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 23:33:12 TRACE Expression:241 - int_visitLdcInsn: 2
2014-06-18 23:33:12 TRACE Expression:241 - int_visitLdcInsn: 3
2014-06-18 23:33:12 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-18 23:33:12 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:33:12 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:33:12 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:33:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:33:12 TRACE Expression:41 - Expression text: 1
2014-06-18 23:33:12 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:33:12 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:33:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:33:12 TRACE Expression:41 - Expression text: 1
2014-06-18 23:33:12 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:33:12 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:33:12 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:33:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:33:12 TRACE Expression:41 - Expression text: 1
2014-06-18 23:33:12 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:33:12 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:33:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-18 23:33:12 TRACE Expression:41 - Expression text: testInt[1,1][1]
2014-06-18 23:33:12 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:33:12 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:33:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:33:12 TRACE Expression:41 - Expression text: 781
2014-06-18 23:33:12 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:33:12 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:33:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 23:33:12 TRACE Expression:41 - Expression text: a
2014-06-18 23:33:12 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:33:12 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:33:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 23:33:12 TRACE Expression:41 - Expression text: xxx
2014-06-18 23:33:12 INFO  CsCompiler:89 - Main: 7
2014-06-18 23:33:58 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 23:33:58 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 23:33:58 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 23:33:58 DEBUG CsCompiler:44 - (cls_def public class Test { (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))) ;)) })) })
2014-06-18 23:33:58 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 23:33:58 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[1,1][1]=781;returna+xxx;}}
2014-06-18 23:33:58 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@60,450:450='}',<40>,21:0]}
2014-06-18 23:33:58 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-18 23:33:58 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-18 23:33:58 TRACE ClassDef:53 - Class name: Test
2014-06-18 23:33:58 TRACE ClassMethod:39 - Method added: Main
2014-06-18 23:33:58 TRACE Variable:30 - Field/variable added: s
2014-06-18 23:33:58 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 23:33:58 TRACE Variable:30 - Field/variable added: a
2014-06-18 23:33:58 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:33:58 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:33:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:33:58 TRACE Expression:41 - Expression text: 5
2014-06-18 23:33:58 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-18 23:33:58 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 23:33:58 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:33:58 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:33:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:33:58 TRACE Expression:41 - Expression text: 2
2014-06-18 23:33:58 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 23:33:58 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 23:33:58 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-18 23:33:58 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-18 23:33:58 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:33:58 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:33:58 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:33:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:33:58 TRACE Expression:41 - Expression text: 1
2014-06-18 23:33:58 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:33:58 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:33:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:33:58 TRACE Expression:41 - Expression text: 2
2014-06-18 23:33:58 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:33:58 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:33:58 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:33:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:33:58 TRACE Expression:41 - Expression text: 3
2014-06-18 23:33:58 TRACE Expression:38 - Expression added: NEW
2014-06-18 23:33:58 TRACE Expression:39 - Token: 'new'
2014-06-18 23:33:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 23:33:58 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-18 23:33:58 TRACE CompoundStatement:49 - stmt in da block: testInt[1,1][1]=781;
2014-06-18 23:33:58 TRACE Expression:38 - Expression added: ASSIGN
2014-06-18 23:33:58 TRACE Expression:39 - Token: '='
2014-06-18 23:33:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 23:33:58 TRACE Expression:41 - Expression text: testInt[1,1][1]=781
2014-06-18 23:33:58 TRACE CompoundStatement:49 - stmt in da block: returna+xxx;
2014-06-18 23:33:58 TRACE Expression:38 - Expression added: PLUS
2014-06-18 23:33:58 TRACE Expression:39 - Token: '+'
2014-06-18 23:33:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 23:33:58 TRACE Expression:41 - Expression text: a+xxx
2014-06-18 23:33:58 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-18 23:33:58 TRACE Expression:241 - int_visitLdcInsn: 5
2014-06-18 23:33:58 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = a, index = 1
2014-06-18 23:33:58 TRACE Expression:241 - int_visitLdcInsn: 2
2014-06-18 23:33:58 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-18 23:33:58 TRACE ConstructorExpression:85 - t= I
2014-06-18 23:33:58 TRACE ConstructorExpression:86 - #args= 3
2014-06-18 23:33:58 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 23:33:58 TRACE Expression:241 - int_visitLdcInsn: 2
2014-06-18 23:33:58 TRACE Expression:241 - int_visitLdcInsn: 3
2014-06-18 23:33:58 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-18 23:33:58 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:33:58 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:33:58 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:33:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:33:58 TRACE Expression:41 - Expression text: 1
2014-06-18 23:33:58 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:33:58 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:33:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:33:58 TRACE Expression:41 - Expression text: 1
2014-06-18 23:33:58 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:33:58 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:33:58 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:33:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:33:58 TRACE Expression:41 - Expression text: 1
2014-06-18 23:33:58 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:33:58 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:33:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-18 23:33:58 TRACE Expression:41 - Expression text: testInt[1,1][1]
2014-06-18 23:33:58 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:33:58 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:33:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:33:58 TRACE Expression:41 - Expression text: 781
2014-06-18 23:33:58 TRACE Expression:241 - int_visitLdcInsn: 781
2014-06-18 23:33:58 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 23:33:58 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 23:33:58 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 23:33:58 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:33:58 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:33:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 23:33:58 TRACE Expression:41 - Expression text: a
2014-06-18 23:33:58 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:33:58 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:33:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 23:33:58 TRACE Expression:41 - Expression text: xxx
2014-06-18 23:34:31 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 23:34:31 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 23:34:31 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 23:34:31 DEBUG CsCompiler:44 - (cls_def public class Test { (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))) ;)) })) })
2014-06-18 23:34:32 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 23:34:32 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[1,1][1]=781;returna+xxx;}}
2014-06-18 23:34:32 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@60,450:450='}',<40>,21:0]}
2014-06-18 23:34:32 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-18 23:34:32 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-18 23:34:32 TRACE ClassDef:53 - Class name: Test
2014-06-18 23:34:32 TRACE ClassMethod:39 - Method added: Main
2014-06-18 23:34:32 TRACE Variable:30 - Field/variable added: s
2014-06-18 23:34:32 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 23:34:32 TRACE Variable:30 - Field/variable added: a
2014-06-18 23:34:32 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:34:32 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:34:32 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:34:32 TRACE Expression:41 - Expression text: 5
2014-06-18 23:34:32 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-18 23:34:32 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 23:34:32 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:34:32 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:34:32 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:34:32 TRACE Expression:41 - Expression text: 2
2014-06-18 23:34:32 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 23:34:32 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 23:34:32 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-18 23:34:32 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-18 23:34:32 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:34:32 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:34:32 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:34:32 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:34:32 TRACE Expression:41 - Expression text: 1
2014-06-18 23:34:32 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:34:32 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:34:32 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:34:32 TRACE Expression:41 - Expression text: 2
2014-06-18 23:34:32 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:34:32 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:34:32 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:34:32 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:34:32 TRACE Expression:41 - Expression text: 3
2014-06-18 23:34:32 TRACE Expression:38 - Expression added: NEW
2014-06-18 23:34:32 TRACE Expression:39 - Token: 'new'
2014-06-18 23:34:32 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 23:34:32 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-18 23:34:32 TRACE CompoundStatement:49 - stmt in da block: testInt[1,1][1]=781;
2014-06-18 23:34:32 TRACE Expression:38 - Expression added: ASSIGN
2014-06-18 23:34:32 TRACE Expression:39 - Token: '='
2014-06-18 23:34:32 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 23:34:32 TRACE Expression:41 - Expression text: testInt[1,1][1]=781
2014-06-18 23:34:32 TRACE CompoundStatement:49 - stmt in da block: returna+xxx;
2014-06-18 23:34:32 TRACE Expression:38 - Expression added: PLUS
2014-06-18 23:34:32 TRACE Expression:39 - Token: '+'
2014-06-18 23:34:32 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 23:34:32 TRACE Expression:41 - Expression text: a+xxx
2014-06-18 23:34:32 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-18 23:34:32 TRACE Expression:241 - int_visitLdcInsn: 5
2014-06-18 23:34:32 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = a, index = 1
2014-06-18 23:34:32 TRACE Expression:241 - int_visitLdcInsn: 2
2014-06-18 23:34:32 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-18 23:34:32 TRACE ConstructorExpression:85 - t= I
2014-06-18 23:34:32 TRACE ConstructorExpression:86 - #args= 3
2014-06-18 23:34:32 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 23:34:32 TRACE Expression:241 - int_visitLdcInsn: 2
2014-06-18 23:34:32 TRACE Expression:241 - int_visitLdcInsn: 3
2014-06-18 23:34:32 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-18 23:34:32 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:34:32 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:34:32 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:34:32 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:34:32 TRACE Expression:41 - Expression text: 1
2014-06-18 23:34:32 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:34:32 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:34:32 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:34:32 TRACE Expression:41 - Expression text: 1
2014-06-18 23:34:32 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:34:32 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:34:32 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:34:32 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:34:32 TRACE Expression:41 - Expression text: 1
2014-06-18 23:34:32 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:34:32 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:34:32 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-18 23:34:32 TRACE Expression:41 - Expression text: testInt[1,1][1]
2014-06-18 23:34:32 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:34:32 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:34:32 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:34:32 TRACE Expression:41 - Expression text: 781
2014-06-18 23:34:32 TRACE Expression:241 - int_visitLdcInsn: 781
2014-06-18 23:34:32 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:34:32 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:34:32 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 23:34:32 TRACE Expression:41 - Expression text: a
2014-06-18 23:34:32 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:34:32 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:34:32 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 23:34:32 TRACE Expression:41 - Expression text: xxx
2014-06-18 23:34:32 INFO  CsCompiler:89 - Main: 7
2014-06-18 23:36:24 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 23:36:24 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 23:36:24 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 23:36:24 DEBUG CsCompiler:44 - (cls_def public class Test { (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))) ;)) })) })
2014-06-18 23:36:25 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 23:36:25 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[1,1][1]=781;returna+xxx;}}
2014-06-18 23:36:25 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@60,450:450='}',<40>,21:0]}
2014-06-18 23:36:25 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-18 23:36:25 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-18 23:36:25 TRACE ClassDef:53 - Class name: Test
2014-06-18 23:36:25 TRACE ClassMethod:39 - Method added: Main
2014-06-18 23:36:25 TRACE Variable:30 - Field/variable added: s
2014-06-18 23:36:25 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 23:36:25 TRACE Variable:30 - Field/variable added: a
2014-06-18 23:36:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:36:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:36:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:36:25 TRACE Expression:41 - Expression text: 5
2014-06-18 23:36:25 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-18 23:36:25 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 23:36:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:36:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:36:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:36:25 TRACE Expression:41 - Expression text: 2
2014-06-18 23:36:25 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 23:36:25 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 23:36:25 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-18 23:36:25 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-18 23:36:25 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:36:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:36:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:36:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:36:25 TRACE Expression:41 - Expression text: 1
2014-06-18 23:36:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:36:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:36:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:36:25 TRACE Expression:41 - Expression text: 2
2014-06-18 23:36:25 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:36:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:36:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:36:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:36:25 TRACE Expression:41 - Expression text: 3
2014-06-18 23:36:25 TRACE Expression:38 - Expression added: NEW
2014-06-18 23:36:25 TRACE Expression:39 - Token: 'new'
2014-06-18 23:36:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 23:36:25 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-18 23:36:25 TRACE CompoundStatement:49 - stmt in da block: testInt[1,1][1]=781;
2014-06-18 23:36:25 TRACE Expression:38 - Expression added: ASSIGN
2014-06-18 23:36:25 TRACE Expression:39 - Token: '='
2014-06-18 23:36:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 23:36:25 TRACE Expression:41 - Expression text: testInt[1,1][1]=781
2014-06-18 23:36:25 TRACE CompoundStatement:49 - stmt in da block: returna+xxx;
2014-06-18 23:36:25 TRACE Expression:38 - Expression added: PLUS
2014-06-18 23:36:25 TRACE Expression:39 - Token: '+'
2014-06-18 23:36:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 23:36:25 TRACE Expression:41 - Expression text: a+xxx
2014-06-18 23:36:25 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-18 23:36:25 TRACE Expression:241 - int_visitLdcInsn: 5
2014-06-18 23:36:25 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = a, index = 1
2014-06-18 23:36:25 TRACE Expression:241 - int_visitLdcInsn: 2
2014-06-18 23:36:25 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-18 23:36:25 TRACE ConstructorExpression:85 - t= I
2014-06-18 23:36:25 TRACE ConstructorExpression:86 - #args= 3
2014-06-18 23:36:25 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 23:36:25 TRACE Expression:241 - int_visitLdcInsn: 2
2014-06-18 23:36:25 TRACE Expression:241 - int_visitLdcInsn: 3
2014-06-18 23:36:25 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-18 23:36:25 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:36:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:36:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:36:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:36:25 TRACE Expression:41 - Expression text: 1
2014-06-18 23:36:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:36:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:36:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:36:25 TRACE Expression:41 - Expression text: 1
2014-06-18 23:36:25 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:36:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:36:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:36:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:36:25 TRACE Expression:41 - Expression text: 1
2014-06-18 23:36:25 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:36:25 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:36:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-18 23:36:25 TRACE Expression:41 - Expression text: testInt[1,1][1]
2014-06-18 23:36:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:36:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:36:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:36:25 TRACE Expression:41 - Expression text: 781
2014-06-18 23:36:52 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 23:36:52 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 23:36:52 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 23:36:52 DEBUG CsCompiler:44 - (cls_def public class Test { (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))) ;)) })) })
2014-06-18 23:36:53 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 23:36:53 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[1,1][1]=781;returna+xxx;}}
2014-06-18 23:36:53 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@60,450:450='}',<40>,21:0]}
2014-06-18 23:36:53 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-18 23:36:53 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-18 23:36:53 TRACE ClassDef:53 - Class name: Test
2014-06-18 23:36:53 TRACE ClassMethod:39 - Method added: Main
2014-06-18 23:36:53 TRACE Variable:30 - Field/variable added: s
2014-06-18 23:36:53 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 23:36:53 TRACE Variable:30 - Field/variable added: a
2014-06-18 23:36:53 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:36:53 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:36:53 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:36:53 TRACE Expression:41 - Expression text: 5
2014-06-18 23:36:53 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-18 23:36:53 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 23:36:53 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:36:53 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:36:53 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:36:53 TRACE Expression:41 - Expression text: 2
2014-06-18 23:36:53 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 23:36:53 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 23:36:53 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-18 23:36:53 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-18 23:36:53 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:36:53 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:36:53 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:36:53 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:36:53 TRACE Expression:41 - Expression text: 1
2014-06-18 23:36:53 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:36:53 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:36:53 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:36:53 TRACE Expression:41 - Expression text: 2
2014-06-18 23:36:53 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:36:53 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:36:53 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:36:53 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:36:53 TRACE Expression:41 - Expression text: 3
2014-06-18 23:36:53 TRACE Expression:38 - Expression added: NEW
2014-06-18 23:36:53 TRACE Expression:39 - Token: 'new'
2014-06-18 23:36:53 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 23:36:53 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-18 23:36:53 TRACE CompoundStatement:49 - stmt in da block: testInt[1,1][1]=781;
2014-06-18 23:36:53 TRACE Expression:38 - Expression added: ASSIGN
2014-06-18 23:36:53 TRACE Expression:39 - Token: '='
2014-06-18 23:36:53 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 23:36:53 TRACE Expression:41 - Expression text: testInt[1,1][1]=781
2014-06-18 23:36:53 TRACE CompoundStatement:49 - stmt in da block: returna+xxx;
2014-06-18 23:36:53 TRACE Expression:38 - Expression added: PLUS
2014-06-18 23:36:53 TRACE Expression:39 - Token: '+'
2014-06-18 23:36:53 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 23:36:53 TRACE Expression:41 - Expression text: a+xxx
2014-06-18 23:36:53 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-18 23:36:53 TRACE Expression:241 - int_visitLdcInsn: 5
2014-06-18 23:36:53 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = a, index = 1
2014-06-18 23:36:53 TRACE Expression:241 - int_visitLdcInsn: 2
2014-06-18 23:36:53 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-18 23:36:53 TRACE ConstructorExpression:85 - t= I
2014-06-18 23:36:53 TRACE ConstructorExpression:86 - #args= 3
2014-06-18 23:36:53 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 23:36:53 TRACE Expression:241 - int_visitLdcInsn: 2
2014-06-18 23:36:53 TRACE Expression:241 - int_visitLdcInsn: 3
2014-06-18 23:36:53 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-18 23:36:53 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:36:53 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:36:53 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:36:53 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:36:53 TRACE Expression:41 - Expression text: 1
2014-06-18 23:36:53 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:36:53 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:36:53 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:36:53 TRACE Expression:41 - Expression text: 1
2014-06-18 23:36:53 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:36:53 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:36:53 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:36:53 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:36:53 TRACE Expression:41 - Expression text: 1
2014-06-18 23:36:53 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:36:53 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:36:53 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-18 23:36:53 TRACE Expression:41 - Expression text: testInt[1,1][1]
2014-06-18 23:36:53 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:36:53 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:36:53 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:36:53 TRACE Expression:41 - Expression text: 781
2014-06-18 23:36:53 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 23:36:53 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 23:36:53 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 23:36:53 TRACE Expression:241 - int_visitLdcInsn: 781
2014-06-18 23:36:53 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 23:36:53 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 23:36:53 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 23:36:53 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:36:53 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:36:53 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 23:36:53 TRACE Expression:41 - Expression text: a
2014-06-18 23:36:53 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:36:53 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:36:53 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 23:36:53 TRACE Expression:41 - Expression text: xxx
2014-06-18 23:39:27 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 23:39:27 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 23:39:27 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 23:39:27 DEBUG CsCompiler:44 - (cls_def public class Test { (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))) ;)) })) })
2014-06-18 23:39:28 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 23:39:28 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[1,1][1]=781;returna+xxx;}}
2014-06-18 23:39:28 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@60,450:450='}',<40>,21:0]}
2014-06-18 23:39:28 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-18 23:39:28 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-18 23:39:28 TRACE ClassDef:53 - Class name: Test
2014-06-18 23:39:28 TRACE ClassMethod:39 - Method added: Main
2014-06-18 23:39:28 TRACE Variable:30 - Field/variable added: s
2014-06-18 23:39:28 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 23:39:28 TRACE Variable:30 - Field/variable added: a
2014-06-18 23:39:28 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:39:28 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:39:28 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:39:28 TRACE Expression:41 - Expression text: 5
2014-06-18 23:39:28 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-18 23:39:28 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 23:39:28 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:39:28 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:39:28 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:39:28 TRACE Expression:41 - Expression text: 2
2014-06-18 23:39:28 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 23:39:28 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 23:39:28 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-18 23:39:28 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-18 23:39:28 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:39:28 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:39:28 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:39:28 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:39:28 TRACE Expression:41 - Expression text: 1
2014-06-18 23:39:28 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:39:28 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:39:28 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:39:28 TRACE Expression:41 - Expression text: 2
2014-06-18 23:39:28 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:39:28 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:39:28 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:39:28 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:39:28 TRACE Expression:41 - Expression text: 3
2014-06-18 23:39:28 TRACE Expression:38 - Expression added: NEW
2014-06-18 23:39:28 TRACE Expression:39 - Token: 'new'
2014-06-18 23:39:28 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 23:39:28 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-18 23:39:28 TRACE CompoundStatement:49 - stmt in da block: testInt[1,1][1]=781;
2014-06-18 23:39:28 TRACE Expression:38 - Expression added: ASSIGN
2014-06-18 23:39:28 TRACE Expression:39 - Token: '='
2014-06-18 23:39:28 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 23:39:28 TRACE Expression:41 - Expression text: testInt[1,1][1]=781
2014-06-18 23:39:28 TRACE CompoundStatement:49 - stmt in da block: returna+xxx;
2014-06-18 23:39:28 TRACE Expression:38 - Expression added: PLUS
2014-06-18 23:39:28 TRACE Expression:39 - Token: '+'
2014-06-18 23:39:28 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 23:39:28 TRACE Expression:41 - Expression text: a+xxx
2014-06-18 23:39:28 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-18 23:39:28 TRACE Expression:241 - int_visitLdcInsn: 5
2014-06-18 23:39:28 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = a, index = 1
2014-06-18 23:39:28 TRACE Expression:241 - int_visitLdcInsn: 2
2014-06-18 23:39:28 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-18 23:39:28 TRACE ConstructorExpression:85 - t= I
2014-06-18 23:39:28 TRACE ConstructorExpression:86 - #args= 3
2014-06-18 23:39:28 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 23:39:28 TRACE Expression:241 - int_visitLdcInsn: 2
2014-06-18 23:39:28 TRACE Expression:241 - int_visitLdcInsn: 3
2014-06-18 23:39:28 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-18 23:39:28 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:39:28 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:39:28 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:39:28 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:39:28 TRACE Expression:41 - Expression text: 1
2014-06-18 23:39:28 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:39:28 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:39:28 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:39:28 TRACE Expression:41 - Expression text: 1
2014-06-18 23:39:28 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:39:28 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:39:28 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:39:28 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:39:28 TRACE Expression:41 - Expression text: 1
2014-06-18 23:39:28 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:39:28 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:39:28 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-18 23:39:28 TRACE Expression:41 - Expression text: testInt[1,1][1]
2014-06-18 23:39:28 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:39:28 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:39:28 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:39:28 TRACE Expression:41 - Expression text: 781
2014-06-18 23:39:28 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 23:39:28 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 23:39:28 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 23:39:28 TRACE Expression:241 - int_visitLdcInsn: 781
2014-06-18 23:39:28 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:39:28 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:39:28 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 23:39:28 TRACE Expression:41 - Expression text: a
2014-06-18 23:39:28 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:39:28 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:39:28 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 23:39:28 TRACE Expression:41 - Expression text: xxx
2014-06-18 23:40:09 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 23:40:09 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 23:40:09 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 23:40:09 DEBUG CsCompiler:44 - (cls_def public class Test { (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))) ;)) })) })
2014-06-18 23:40:09 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 23:40:09 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[1,1][1]=781;returna+xxx;}}
2014-06-18 23:40:09 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@60,450:450='}',<40>,21:0]}
2014-06-18 23:40:09 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-18 23:40:09 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-18 23:40:09 TRACE ClassDef:53 - Class name: Test
2014-06-18 23:40:09 TRACE ClassMethod:39 - Method added: Main
2014-06-18 23:40:09 TRACE Variable:30 - Field/variable added: s
2014-06-18 23:40:09 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 23:40:09 TRACE Variable:30 - Field/variable added: a
2014-06-18 23:40:09 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:40:09 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:40:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:40:09 TRACE Expression:41 - Expression text: 5
2014-06-18 23:40:09 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-18 23:40:09 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 23:40:09 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:40:09 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:40:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:40:09 TRACE Expression:41 - Expression text: 2
2014-06-18 23:40:09 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 23:40:09 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 23:40:09 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-18 23:40:09 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-18 23:40:09 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:40:09 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:40:09 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:40:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:40:09 TRACE Expression:41 - Expression text: 1
2014-06-18 23:40:09 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:40:09 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:40:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:40:09 TRACE Expression:41 - Expression text: 2
2014-06-18 23:40:09 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:40:09 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:40:09 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:40:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:40:09 TRACE Expression:41 - Expression text: 3
2014-06-18 23:40:09 TRACE Expression:38 - Expression added: NEW
2014-06-18 23:40:09 TRACE Expression:39 - Token: 'new'
2014-06-18 23:40:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 23:40:09 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-18 23:40:09 TRACE CompoundStatement:49 - stmt in da block: testInt[1,1][1]=781;
2014-06-18 23:40:09 TRACE Expression:38 - Expression added: ASSIGN
2014-06-18 23:40:09 TRACE Expression:39 - Token: '='
2014-06-18 23:40:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 23:40:09 TRACE Expression:41 - Expression text: testInt[1,1][1]=781
2014-06-18 23:40:09 TRACE CompoundStatement:49 - stmt in da block: returna+xxx;
2014-06-18 23:40:09 TRACE Expression:38 - Expression added: PLUS
2014-06-18 23:40:09 TRACE Expression:39 - Token: '+'
2014-06-18 23:40:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 23:40:09 TRACE Expression:41 - Expression text: a+xxx
2014-06-18 23:40:09 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-18 23:40:09 TRACE Expression:241 - int_visitLdcInsn: 5
2014-06-18 23:40:09 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = a, index = 1
2014-06-18 23:40:09 TRACE Expression:241 - int_visitLdcInsn: 2
2014-06-18 23:40:09 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-18 23:40:09 TRACE ConstructorExpression:85 - t= I
2014-06-18 23:40:09 TRACE ConstructorExpression:86 - #args= 3
2014-06-18 23:40:09 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 23:40:09 TRACE Expression:241 - int_visitLdcInsn: 2
2014-06-18 23:40:09 TRACE Expression:241 - int_visitLdcInsn: 3
2014-06-18 23:40:09 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-18 23:40:09 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:40:09 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:40:09 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:40:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:40:09 TRACE Expression:41 - Expression text: 1
2014-06-18 23:40:09 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:40:09 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:40:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:40:09 TRACE Expression:41 - Expression text: 1
2014-06-18 23:40:09 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:40:09 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:40:09 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:40:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:40:09 TRACE Expression:41 - Expression text: 1
2014-06-18 23:40:09 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:40:09 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:40:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-18 23:40:09 TRACE Expression:41 - Expression text: testInt[1,1][1]
2014-06-18 23:40:09 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:40:09 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:40:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:40:09 TRACE Expression:41 - Expression text: 781
2014-06-18 23:40:09 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 23:40:09 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 23:40:09 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 23:40:09 TRACE Expression:241 - int_visitLdcInsn: 781
2014-06-18 23:40:09 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:40:09 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:40:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 23:40:09 TRACE Expression:41 - Expression text: a
2014-06-18 23:40:09 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:40:09 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:40:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 23:40:09 TRACE Expression:41 - Expression text: xxx
2014-06-18 23:41:19 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 23:41:19 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 23:41:19 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 23:41:19 DEBUG CsCompiler:44 - (cls_def public class Test { (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))) ;)) })) })
2014-06-18 23:41:19 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 23:41:19 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[0,0][0]=781;returna+xxx;}}
2014-06-18 23:41:19 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@60,450:450='}',<40>,21:0]}
2014-06-18 23:41:19 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-18 23:41:19 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-18 23:41:19 TRACE ClassDef:53 - Class name: Test
2014-06-18 23:41:19 TRACE ClassMethod:39 - Method added: Main
2014-06-18 23:41:19 TRACE Variable:30 - Field/variable added: s
2014-06-18 23:41:19 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 23:41:19 TRACE Variable:30 - Field/variable added: a
2014-06-18 23:41:19 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:41:19 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:41:19 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:41:19 TRACE Expression:41 - Expression text: 5
2014-06-18 23:41:19 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-18 23:41:19 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 23:41:19 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:41:19 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:41:19 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:41:19 TRACE Expression:41 - Expression text: 2
2014-06-18 23:41:19 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 23:41:19 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 23:41:19 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-18 23:41:19 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-18 23:41:19 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:41:19 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:41:19 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:41:19 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:41:19 TRACE Expression:41 - Expression text: 1
2014-06-18 23:41:19 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:41:19 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:41:19 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:41:19 TRACE Expression:41 - Expression text: 2
2014-06-18 23:41:19 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:41:19 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:41:19 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:41:19 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:41:19 TRACE Expression:41 - Expression text: 3
2014-06-18 23:41:19 TRACE Expression:38 - Expression added: NEW
2014-06-18 23:41:19 TRACE Expression:39 - Token: 'new'
2014-06-18 23:41:19 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 23:41:19 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-18 23:41:19 TRACE CompoundStatement:49 - stmt in da block: testInt[0,0][0]=781;
2014-06-18 23:41:19 TRACE Expression:38 - Expression added: ASSIGN
2014-06-18 23:41:19 TRACE Expression:39 - Token: '='
2014-06-18 23:41:19 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 23:41:19 TRACE Expression:41 - Expression text: testInt[0,0][0]=781
2014-06-18 23:41:19 TRACE CompoundStatement:49 - stmt in da block: returna+xxx;
2014-06-18 23:41:19 TRACE Expression:38 - Expression added: PLUS
2014-06-18 23:41:19 TRACE Expression:39 - Token: '+'
2014-06-18 23:41:19 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 23:41:19 TRACE Expression:41 - Expression text: a+xxx
2014-06-18 23:41:19 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-18 23:41:19 TRACE Expression:241 - int_visitLdcInsn: 5
2014-06-18 23:41:19 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = a, index = 1
2014-06-18 23:41:19 TRACE Expression:241 - int_visitLdcInsn: 2
2014-06-18 23:41:19 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-18 23:41:19 TRACE ConstructorExpression:85 - t= I
2014-06-18 23:41:19 TRACE ConstructorExpression:86 - #args= 3
2014-06-18 23:41:19 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 23:41:19 TRACE Expression:241 - int_visitLdcInsn: 2
2014-06-18 23:41:19 TRACE Expression:241 - int_visitLdcInsn: 3
2014-06-18 23:41:19 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-18 23:41:19 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:41:19 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:41:19 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:41:19 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:41:19 TRACE Expression:41 - Expression text: 0
2014-06-18 23:41:19 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:41:19 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:41:19 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:41:19 TRACE Expression:41 - Expression text: 0
2014-06-18 23:41:19 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:41:19 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:41:19 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:41:19 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:41:19 TRACE Expression:41 - Expression text: 0
2014-06-18 23:41:19 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:41:19 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:41:19 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-18 23:41:19 TRACE Expression:41 - Expression text: testInt[0,0][0]
2014-06-18 23:41:19 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:41:19 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:41:19 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:41:19 TRACE Expression:41 - Expression text: 781
2014-06-18 23:41:19 TRACE Expression:241 - int_visitLdcInsn: 0
2014-06-18 23:41:19 TRACE Expression:241 - int_visitLdcInsn: 0
2014-06-18 23:41:19 TRACE Expression:241 - int_visitLdcInsn: 0
2014-06-18 23:41:19 TRACE Expression:241 - int_visitLdcInsn: 781
2014-06-18 23:41:19 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:41:19 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:41:19 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 23:41:19 TRACE Expression:41 - Expression text: a
2014-06-18 23:41:19 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:41:19 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:41:19 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 23:41:19 TRACE Expression:41 - Expression text: xxx
2014-06-18 23:41:19 INFO  CsCompiler:89 - Main: 7
2014-06-18 23:41:27 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 23:41:27 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 23:41:27 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 23:41:27 DEBUG CsCompiler:44 - (cls_def public class Test { (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ])))))))))))))))) ;)) })) })
2014-06-18 23:41:27 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 23:41:27 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[0,0][0]=781;returntestInt[0,0][0];}}
2014-06-18 23:41:27 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@66,450:450='}',<40>,21:0]}
2014-06-18 23:41:27 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-18 23:41:27 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-18 23:41:27 TRACE ClassDef:53 - Class name: Test
2014-06-18 23:41:27 TRACE ClassMethod:39 - Method added: Main
2014-06-18 23:41:27 TRACE Variable:30 - Field/variable added: s
2014-06-18 23:41:27 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 23:41:27 TRACE Variable:30 - Field/variable added: a
2014-06-18 23:41:27 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:41:27 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:41:27 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:41:27 TRACE Expression:41 - Expression text: 5
2014-06-18 23:41:27 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-18 23:41:27 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 23:41:27 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:41:27 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:41:27 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:41:27 TRACE Expression:41 - Expression text: 2
2014-06-18 23:41:27 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 23:41:27 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 23:41:27 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-18 23:41:27 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-18 23:41:27 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:41:27 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:41:27 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:41:27 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:41:27 TRACE Expression:41 - Expression text: 1
2014-06-18 23:41:27 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:41:27 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:41:27 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:41:27 TRACE Expression:41 - Expression text: 2
2014-06-18 23:41:27 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:41:27 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:41:27 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:41:27 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:41:27 TRACE Expression:41 - Expression text: 3
2014-06-18 23:41:27 TRACE Expression:38 - Expression added: NEW
2014-06-18 23:41:27 TRACE Expression:39 - Token: 'new'
2014-06-18 23:41:27 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 23:41:27 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-18 23:41:27 TRACE CompoundStatement:49 - stmt in da block: testInt[0,0][0]=781;
2014-06-18 23:41:27 TRACE Expression:38 - Expression added: ASSIGN
2014-06-18 23:41:27 TRACE Expression:39 - Token: '='
2014-06-18 23:41:27 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 23:41:27 TRACE Expression:41 - Expression text: testInt[0,0][0]=781
2014-06-18 23:41:27 TRACE CompoundStatement:49 - stmt in da block: returntestInt[0,0][0];
2014-06-18 23:41:27 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:41:27 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:41:27 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:41:27 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:41:27 TRACE Expression:41 - Expression text: 0
2014-06-18 23:41:27 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:41:27 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:41:27 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:41:27 TRACE Expression:41 - Expression text: 0
2014-06-18 23:41:27 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:41:27 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:41:27 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:41:27 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:41:27 TRACE Expression:41 - Expression text: 0
2014-06-18 23:41:27 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:41:27 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:41:27 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-18 23:41:27 TRACE Expression:41 - Expression text: testInt[0,0][0]
2014-06-18 23:41:27 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-18 23:41:27 TRACE Expression:241 - int_visitLdcInsn: 5
2014-06-18 23:41:27 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = a, index = 1
2014-06-18 23:41:27 TRACE Expression:241 - int_visitLdcInsn: 2
2014-06-18 23:41:27 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-18 23:41:27 TRACE ConstructorExpression:85 - t= I
2014-06-18 23:41:27 TRACE ConstructorExpression:86 - #args= 3
2014-06-18 23:41:27 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 23:41:27 TRACE Expression:241 - int_visitLdcInsn: 2
2014-06-18 23:41:27 TRACE Expression:241 - int_visitLdcInsn: 3
2014-06-18 23:41:27 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-18 23:41:27 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:41:27 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:41:27 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:41:27 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:41:27 TRACE Expression:41 - Expression text: 0
2014-06-18 23:41:27 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:41:27 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:41:27 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:41:27 TRACE Expression:41 - Expression text: 0
2014-06-18 23:41:27 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:41:27 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:41:27 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:41:27 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:41:27 TRACE Expression:41 - Expression text: 0
2014-06-18 23:41:27 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:41:27 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:41:27 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-18 23:41:27 TRACE Expression:41 - Expression text: testInt[0,0][0]
2014-06-18 23:41:27 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:41:27 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:41:27 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:41:27 TRACE Expression:41 - Expression text: 781
2014-06-18 23:41:27 TRACE Expression:241 - int_visitLdcInsn: 0
2014-06-18 23:41:27 TRACE Expression:241 - int_visitLdcInsn: 0
2014-06-18 23:41:27 TRACE Expression:241 - int_visitLdcInsn: 0
2014-06-18 23:41:27 TRACE Expression:241 - int_visitLdcInsn: 781
2014-06-18 23:42:51 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 23:42:51 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 23:42:51 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 23:42:51 DEBUG CsCompiler:44 - (cls_def public class Test { (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ])))))))))))))))) ;)) })) })
2014-06-18 23:42:52 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 23:42:52 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[0,0][0]=781;returntestInt[0,0][0];}}
2014-06-18 23:42:52 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@66,450:450='}',<40>,21:0]}
2014-06-18 23:42:52 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-18 23:42:52 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-18 23:42:52 TRACE ClassDef:53 - Class name: Test
2014-06-18 23:42:52 TRACE ClassMethod:39 - Method added: Main
2014-06-18 23:42:52 TRACE Variable:30 - Field/variable added: s
2014-06-18 23:42:52 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 23:42:52 TRACE Variable:30 - Field/variable added: a
2014-06-18 23:42:52 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:42:52 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:42:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:42:52 TRACE Expression:41 - Expression text: 5
2014-06-18 23:42:52 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-18 23:42:52 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 23:42:52 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:42:52 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:42:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:42:52 TRACE Expression:41 - Expression text: 2
2014-06-18 23:42:52 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 23:42:52 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 23:42:52 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-18 23:42:52 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-18 23:42:52 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:42:52 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:42:52 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:42:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:42:52 TRACE Expression:41 - Expression text: 1
2014-06-18 23:42:52 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:42:52 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:42:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:42:52 TRACE Expression:41 - Expression text: 2
2014-06-18 23:42:52 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:42:52 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:42:52 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:42:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:42:52 TRACE Expression:41 - Expression text: 3
2014-06-18 23:42:52 TRACE Expression:38 - Expression added: NEW
2014-06-18 23:42:52 TRACE Expression:39 - Token: 'new'
2014-06-18 23:42:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 23:42:52 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-18 23:42:52 TRACE CompoundStatement:49 - stmt in da block: testInt[0,0][0]=781;
2014-06-18 23:42:52 TRACE Expression:38 - Expression added: ASSIGN
2014-06-18 23:42:52 TRACE Expression:39 - Token: '='
2014-06-18 23:42:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 23:42:52 TRACE Expression:41 - Expression text: testInt[0,0][0]=781
2014-06-18 23:42:52 TRACE CompoundStatement:49 - stmt in da block: returntestInt[0,0][0];
2014-06-18 23:42:52 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:42:52 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:42:52 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:42:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:42:52 TRACE Expression:41 - Expression text: 0
2014-06-18 23:42:52 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:42:52 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:42:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:42:52 TRACE Expression:41 - Expression text: 0
2014-06-18 23:42:52 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:42:52 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:42:52 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:42:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:42:52 TRACE Expression:41 - Expression text: 0
2014-06-18 23:42:52 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:42:52 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:42:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-18 23:42:52 TRACE Expression:41 - Expression text: testInt[0,0][0]
2014-06-18 23:42:52 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-18 23:42:52 TRACE Expression:241 - int_visitLdcInsn: 5
2014-06-18 23:42:52 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = a, index = 1
2014-06-18 23:42:52 TRACE Expression:241 - int_visitLdcInsn: 2
2014-06-18 23:42:52 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-18 23:42:52 TRACE ConstructorExpression:85 - t= I
2014-06-18 23:42:52 TRACE ConstructorExpression:86 - #args= 3
2014-06-18 23:42:52 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 23:42:52 TRACE Expression:241 - int_visitLdcInsn: 2
2014-06-18 23:42:52 TRACE Expression:241 - int_visitLdcInsn: 3
2014-06-18 23:42:52 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-18 23:42:52 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:42:52 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:42:52 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:42:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:42:52 TRACE Expression:41 - Expression text: 0
2014-06-18 23:42:52 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:42:52 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:42:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:42:52 TRACE Expression:41 - Expression text: 0
2014-06-18 23:42:52 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:42:52 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:42:52 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:42:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:42:52 TRACE Expression:41 - Expression text: 0
2014-06-18 23:42:52 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:42:52 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:42:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-18 23:42:52 TRACE Expression:41 - Expression text: testInt[0,0][0]
2014-06-18 23:42:52 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:42:52 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:42:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:42:52 TRACE Expression:41 - Expression text: 781
2014-06-18 23:42:52 TRACE Expression:241 - int_visitLdcInsn: 0
2014-06-18 23:42:52 TRACE Expression:241 - int_visitLdcInsn: 0
2014-06-18 23:42:52 TRACE Expression:241 - int_visitLdcInsn: 0
2014-06-18 23:42:52 TRACE Expression:241 - int_visitLdcInsn: 781
2014-06-18 23:42:52 TRACE Expression:241 - int_visitLdcInsn: 0
2014-06-18 23:42:52 TRACE Expression:241 - int_visitLdcInsn: 0
2014-06-18 23:42:52 TRACE Expression:241 - int_visitLdcInsn: 0
2014-06-18 23:42:52 INFO  CsCompiler:89 - Main: 781
2014-06-18 23:44:03 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 23:44:03 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 23:44:03 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 23:44:03 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator (assign_and_modify_operator +=)) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression xxx))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]))))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))))))))))))))) ;)) })) })
2014-06-18 23:44:04 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 23:44:04 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[0,0][0]=781;a+=xxx+6;xxx=yyy;returntestInt[0,0][0]+a;}}
2014-06-18 23:44:04 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@105,442:442='}',<40>,21:0]}
2014-06-18 23:44:04 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-18 23:44:04 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-18 23:44:04 TRACE ClassDef:53 - Class name: Test
2014-06-18 23:44:04 TRACE Variable:30 - Field/variable added: tst
2014-06-18 23:44:04 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:44:04 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:44:04 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:44:04 TRACE Expression:41 - Expression text: 555
2014-06-18 23:44:04 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 23:44:04 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:44:04 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:44:04 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:44:04 TRACE Expression:41 - Expression text: 1
2014-06-18 23:44:04 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 23:44:04 TRACE Expression:38 - Expression added: PLUS
2014-06-18 23:44:04 TRACE Expression:39 - Token: '+'
2014-06-18 23:44:04 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 23:44:04 TRACE Expression:41 - Expression text: tst+1
2014-06-18 23:44:04 TRACE Variable:30 - Field/variable added: zzz
2014-06-18 23:44:04 TRACE Expression:38 - Expression added: PLUS
2014-06-18 23:44:04 TRACE Expression:39 - Token: '+'
2014-06-18 23:44:04 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 23:44:04 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-18 23:44:04 TRACE ClassMethod:39 - Method added: Main
2014-06-18 23:44:04 TRACE Variable:30 - Field/variable added: s
2014-06-18 23:44:04 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 23:44:04 TRACE Variable:30 - Field/variable added: a
2014-06-18 23:44:04 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:44:04 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:44:04 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:44:04 TRACE Expression:41 - Expression text: 5
2014-06-18 23:44:04 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-18 23:44:04 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 23:44:04 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:44:04 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:44:04 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:44:04 TRACE Expression:41 - Expression text: 2
2014-06-18 23:44:04 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 23:44:04 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 23:44:04 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-18 23:44:04 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-18 23:44:04 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:44:04 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:44:04 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:44:04 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:44:04 TRACE Expression:41 - Expression text: 1
2014-06-18 23:44:04 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:44:04 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:44:04 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:44:04 TRACE Expression:41 - Expression text: 2
2014-06-18 23:44:04 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-18 23:44:04 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:44:04 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:44:04 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:44:04 TRACE Expression:41 - Expression text: 3
2014-06-18 23:44:04 TRACE Expression:38 - Expression added: NEW
2014-06-18 23:44:04 TRACE Expression:39 - Token: 'new'
2014-06-18 23:44:04 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 23:44:04 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-18 23:44:04 TRACE CompoundStatement:49 - stmt in da block: testInt[0,0][0]=781;
2014-06-18 23:44:04 TRACE Expression:38 - Expression added: ASSIGN
2014-06-18 23:44:04 TRACE Expression:39 - Token: '='
2014-06-18 23:44:04 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 23:44:04 TRACE Expression:41 - Expression text: testInt[0,0][0]=781
2014-06-18 23:44:04 TRACE CompoundStatement:49 - stmt in da block: a+=xxx+6;
2014-06-18 23:44:04 TRACE Expression:38 - Expression added: ADD_ASS
2014-06-18 23:44:04 TRACE Expression:39 - Token: '+='
2014-06-18 23:44:04 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$10
2014-06-18 23:44:04 TRACE Expression:41 - Expression text: a+=xxx+6
2014-06-18 23:44:04 TRACE CompoundStatement:49 - stmt in da block: xxx=yyy;
2014-06-18 23:44:04 TRACE Expression:38 - Expression added: ASSIGN
2014-06-18 23:44:04 TRACE Expression:39 - Token: '='
2014-06-18 23:44:04 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 23:44:04 TRACE Expression:41 - Expression text: xxx=yyy
2014-06-18 23:44:04 TRACE CompoundStatement:49 - stmt in da block: returntestInt[0,0][0]+a;
2014-06-18 23:44:04 TRACE Expression:38 - Expression added: PLUS
2014-06-18 23:44:04 TRACE Expression:39 - Token: '+'
2014-06-18 23:44:04 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 23:44:04 TRACE Expression:41 - Expression text: testInt[0,0][0]+a
2014-06-18 23:44:04 TRACE Expression:241 - int_visitLdcInsn: 555
2014-06-18 23:44:04 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 23:44:04 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:44:04 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:44:04 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 23:44:04 TRACE Expression:41 - Expression text: tst
2014-06-18 23:44:04 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:44:04 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:44:04 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:44:04 TRACE Expression:41 - Expression text: 1
2014-06-18 23:44:04 TRACE IDExpressionType:63 - tst Test I
2014-06-18 23:44:04 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 23:44:04 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:44:04 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:44:04 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 23:44:04 TRACE Expression:41 - Expression text: yyy
2014-06-18 23:44:04 TRACE Expression:38 - Expression added: PLUS
2014-06-18 23:44:04 TRACE Expression:39 - Token: '+'
2014-06-18 23:44:04 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 23:44:04 TRACE Expression:41 - Expression text: xxx+123
2014-06-18 23:44:04 TRACE IDExpressionType:63 - yyy Test I
2014-06-18 23:44:04 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:44:04 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:44:04 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 23:44:04 TRACE Expression:41 - Expression text: xxx
2014-06-18 23:44:04 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:44:04 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:44:04 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:44:04 TRACE Expression:41 - Expression text: 123
2014-06-18 23:44:04 TRACE IDExpressionType:63 - xxx Test I
2014-06-18 23:44:04 TRACE Expression:241 - int_visitLdcInsn: 123
2014-06-18 23:44:04 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-18 23:44:04 TRACE Expression:241 - int_visitLdcInsn: 5
2014-06-18 23:44:04 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = a, index = 1
2014-06-18 23:44:04 TRACE Expression:241 - int_visitLdcInsn: 2
2014-06-18 23:44:04 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-18 23:44:04 TRACE ConstructorExpression:85 - t= I
2014-06-18 23:44:04 TRACE ConstructorExpression:86 - #args= 3
2014-06-18 23:44:04 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 23:44:04 TRACE Expression:241 - int_visitLdcInsn: 2
2014-06-18 23:44:04 TRACE Expression:241 - int_visitLdcInsn: 3
2014-06-18 23:44:04 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-18 23:44:04 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:44:04 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:44:04 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:44:04 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:44:04 TRACE Expression:41 - Expression text: 0
2014-06-18 23:44:04 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:44:04 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:44:04 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:44:04 TRACE Expression:41 - Expression text: 0
2014-06-18 23:44:04 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:44:04 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:44:04 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:44:04 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:44:04 TRACE Expression:41 - Expression text: 0
2014-06-18 23:44:04 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:44:04 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:44:04 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-18 23:44:04 TRACE Expression:41 - Expression text: testInt[0,0][0]
2014-06-18 23:44:04 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:44:04 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:44:04 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:44:04 TRACE Expression:41 - Expression text: 781
2014-06-18 23:44:04 TRACE Expression:241 - int_visitLdcInsn: 0
2014-06-18 23:44:04 TRACE Expression:241 - int_visitLdcInsn: 0
2014-06-18 23:44:04 TRACE Expression:241 - int_visitLdcInsn: 0
2014-06-18 23:44:04 TRACE Expression:241 - int_visitLdcInsn: 781
2014-06-18 23:44:04 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:44:04 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:44:04 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 23:44:04 TRACE Expression:41 - Expression text: a
2014-06-18 23:44:04 TRACE Expression:38 - Expression added: PLUS
2014-06-18 23:44:04 TRACE Expression:39 - Token: '+'
2014-06-18 23:44:04 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 23:44:04 TRACE Expression:41 - Expression text: xxx+6
2014-06-18 23:44:04 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:44:04 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:44:04 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 23:44:04 TRACE Expression:41 - Expression text: xxx
2014-06-18 23:44:04 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:44:04 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:44:04 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:44:04 TRACE Expression:41 - Expression text: 6
2014-06-18 23:44:04 TRACE Expression:241 - int_visitLdcInsn: 6
2014-06-18 23:44:04 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:44:04 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:44:04 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 23:44:04 TRACE Expression:41 - Expression text: xxx
2014-06-18 23:44:04 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:44:04 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:44:04 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 23:44:04 TRACE Expression:41 - Expression text: yyy
2014-06-18 23:44:04 TRACE IDExpressionType:63 - yyy Test I
2014-06-18 23:44:04 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:44:04 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:44:04 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:44:04 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:44:04 TRACE Expression:41 - Expression text: 0
2014-06-18 23:44:04 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:44:04 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:44:04 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:44:04 TRACE Expression:41 - Expression text: 0
2014-06-18 23:44:04 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-18 23:44:04 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-18 23:44:04 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-18 23:44:04 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 23:44:04 TRACE Expression:41 - Expression text: 0
2014-06-18 23:44:04 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:44:04 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:44:04 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-18 23:44:04 TRACE Expression:41 - Expression text: testInt[0,0][0]
2014-06-18 23:44:04 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-18 23:44:04 TRACE Expression:39 - Token: IDENTIFIER
2014-06-18 23:44:04 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 23:44:04 TRACE Expression:41 - Expression text: a
2014-06-18 23:44:04 TRACE Expression:241 - int_visitLdcInsn: 0
2014-06-18 23:44:04 TRACE Expression:241 - int_visitLdcInsn: 0
2014-06-18 23:44:04 TRACE Expression:241 - int_visitLdcInsn: 0
2014-06-18 23:44:04 INFO  CsCompiler:89 - Main: 794
