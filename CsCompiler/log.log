2014-06-18 00:15:29 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 00:15:29 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst;publicstaticvoidMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 00:15:29 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@66,294:294='}',<40>,15:0]}
2014-06-18 00:15:29 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 00:15:29 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 00:15:29 TRACE ClassDef:55 - Class name: Test
2014-06-18 00:15:29 TRACE Variable:30 - Field/variable added: tst
2014-06-18 00:15:29 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:15:29 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:15:29 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:15:29 TRACE Expression:45 - Expression text: 555
2014-06-18 00:15:29 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 00:15:29 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:15:29 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:15:29 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:15:29 TRACE Expression:45 - Expression text: 1
2014-06-18 00:15:29 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 00:15:29 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:15:29 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:15:29 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:15:29 TRACE Expression:45 - Expression text: tst
2014-06-18 00:15:29 TRACE ClassMethod:39 - Method added: Main
2014-06-18 00:15:29 TRACE Variable:30 - Field/variable added: s
2014-06-18 00:15:29 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 00:15:29 TRACE Variable:30 - Field/variable added: a
2014-06-18 00:15:29 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:15:29 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:15:29 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:15:29 TRACE Expression:45 - Expression text: 5
2014-06-18 00:15:29 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 00:15:29 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 00:15:29 TRACE ConstructorExpression:26 - Constructor call added: newint[1,2][3]
2014-06-18 00:15:29 TRACE Expression:42 - Expression added: NEW
2014-06-18 00:15:29 TRACE Expression:43 - Token: 'new'
2014-06-18 00:15:29 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 00:15:29 TRACE Expression:45 - Expression text: newint[1,2][3]
2014-06-18 00:15:29 TRACE CompoundStatement:49 - stmt in da block: System.Console.WriteLine("Hello, World!");
2014-06-18 00:15:29 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:15:29 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:15:29 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:15:29 TRACE Expression:45 - Expression text: System
2014-06-18 00:15:29 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:15:29 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:15:29 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:15:29 TRACE Expression:45 - Expression text: Console
2014-06-18 00:15:29 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:15:29 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:15:29 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:15:29 TRACE Expression:45 - Expression text: WriteLine
2014-06-18 00:15:29 TRACE Expression:42 - Expression added: CHARACTER_LITERAL
2014-06-18 00:15:29 TRACE Expression:43 - Token: STRING_LITERAL
2014-06-18 00:15:29 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$1
2014-06-18 00:15:29 TRACE Expression:45 - Expression text: "Hello, World!"
2014-06-18 00:15:29 TRACE PostfixExpression:58 - Constructor call added: WriteLine("Hello, World!")
2014-06-18 00:15:29 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:15:29 TRACE Expression:43 - Token: '.'
2014-06-18 00:15:29 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:15:29 TRACE Expression:45 - Expression text: WriteLine("Hello, World!")
2014-06-18 00:15:29 TRACE PostfixExpression:58 - Constructor call added: Console.WriteLine("Hello, World!")
2014-06-18 00:15:29 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:15:29 TRACE Expression:43 - Token: '.'
2014-06-18 00:15:29 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:15:29 TRACE Expression:45 - Expression text: Console.WriteLine("Hello, World!")
2014-06-18 00:15:29 TRACE PostfixExpression:58 - Constructor call added: System.Console.WriteLine("Hello, World!")
2014-06-18 00:15:29 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:15:29 TRACE Expression:43 - Token: '.'
2014-06-18 00:15:29 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:15:29 TRACE Expression:45 - Expression text: System.Console.WriteLine("Hello, World!")
2014-06-18 00:15:29 TRACE CompoundStatement:49 - stmt in da block: a=6;
2014-06-18 00:15:29 TRACE Expression:42 - Expression added: ASSIGN
2014-06-18 00:15:29 TRACE Expression:43 - Token: '='
2014-06-18 00:15:29 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 00:15:29 TRACE Expression:45 - Expression text: a=6
2014-06-18 00:15:29 TRACE Expression:235 - int_visitLdcInsn: 555
2014-06-18 00:15:29 TRACE Expression:235 - int_visitLdcInsn: 1
2014-06-18 00:16:55 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 00:16:55 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 00:16:55 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 00:16:55 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 00:16:55 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 00:16:55 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst;publicstaticvoidMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 00:16:55 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@66,294:294='}',<40>,15:0]}
2014-06-18 00:16:55 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 00:16:55 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 00:16:55 TRACE ClassDef:55 - Class name: Test
2014-06-18 00:16:55 TRACE Variable:30 - Field/variable added: tst
2014-06-18 00:16:55 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:16:55 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:16:55 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:16:55 TRACE Expression:45 - Expression text: 555
2014-06-18 00:16:55 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 00:16:55 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:16:55 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:16:55 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:16:55 TRACE Expression:45 - Expression text: 1
2014-06-18 00:16:55 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 00:16:55 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:16:55 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:16:55 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:16:55 TRACE Expression:45 - Expression text: tst
2014-06-18 00:16:55 TRACE ClassMethod:39 - Method added: Main
2014-06-18 00:16:55 TRACE Variable:30 - Field/variable added: s
2014-06-18 00:16:55 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 00:16:55 TRACE Variable:30 - Field/variable added: a
2014-06-18 00:16:55 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:16:55 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:16:55 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:16:55 TRACE Expression:45 - Expression text: 5
2014-06-18 00:16:55 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 00:16:55 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 00:16:55 TRACE ConstructorExpression:26 - Constructor call added: newint[1,2][3]
2014-06-18 00:16:55 TRACE Expression:42 - Expression added: NEW
2014-06-18 00:16:55 TRACE Expression:43 - Token: 'new'
2014-06-18 00:16:55 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 00:16:55 TRACE Expression:45 - Expression text: newint[1,2][3]
2014-06-18 00:16:55 TRACE CompoundStatement:49 - stmt in da block: System.Console.WriteLine("Hello, World!");
2014-06-18 00:16:55 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:16:55 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:16:55 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:16:55 TRACE Expression:45 - Expression text: System
2014-06-18 00:16:55 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:16:55 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:16:55 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:16:55 TRACE Expression:45 - Expression text: Console
2014-06-18 00:16:55 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:16:55 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:16:55 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:16:55 TRACE Expression:45 - Expression text: WriteLine
2014-06-18 00:16:55 TRACE Expression:42 - Expression added: CHARACTER_LITERAL
2014-06-18 00:16:55 TRACE Expression:43 - Token: STRING_LITERAL
2014-06-18 00:16:55 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$1
2014-06-18 00:16:55 TRACE Expression:45 - Expression text: "Hello, World!"
2014-06-18 00:16:55 TRACE PostfixExpression:58 - Constructor call added: WriteLine("Hello, World!")
2014-06-18 00:16:55 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:16:55 TRACE Expression:43 - Token: '.'
2014-06-18 00:16:55 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:16:55 TRACE Expression:45 - Expression text: WriteLine("Hello, World!")
2014-06-18 00:16:55 TRACE PostfixExpression:58 - Constructor call added: Console.WriteLine("Hello, World!")
2014-06-18 00:16:55 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:16:55 TRACE Expression:43 - Token: '.'
2014-06-18 00:16:55 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:16:55 TRACE Expression:45 - Expression text: Console.WriteLine("Hello, World!")
2014-06-18 00:16:55 TRACE PostfixExpression:58 - Constructor call added: System.Console.WriteLine("Hello, World!")
2014-06-18 00:16:55 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:16:55 TRACE Expression:43 - Token: '.'
2014-06-18 00:16:55 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:16:55 TRACE Expression:45 - Expression text: System.Console.WriteLine("Hello, World!")
2014-06-18 00:16:55 TRACE CompoundStatement:49 - stmt in da block: a=6;
2014-06-18 00:16:55 TRACE Expression:42 - Expression added: ASSIGN
2014-06-18 00:16:55 TRACE Expression:43 - Token: '='
2014-06-18 00:16:55 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 00:16:55 TRACE Expression:45 - Expression text: a=6
2014-06-18 00:16:55 TRACE Expression:235 - int_visitLdcInsn: 555
2014-06-18 00:16:55 TRACE Expression:235 - int_visitLdcInsn: 1
2014-06-18 00:17:17 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 00:17:17 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 00:17:17 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 00:17:17 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 00:17:18 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 00:17:18 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst;publicstaticvoidMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 00:17:18 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@66,294:294='}',<40>,15:0]}
2014-06-18 00:17:18 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 00:17:18 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 00:17:18 TRACE ClassDef:55 - Class name: Test
2014-06-18 00:17:18 TRACE Variable:30 - Field/variable added: tst
2014-06-18 00:17:18 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:17:18 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:17:18 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:17:18 TRACE Expression:45 - Expression text: 555
2014-06-18 00:17:18 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 00:17:18 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:17:18 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:17:18 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:17:18 TRACE Expression:45 - Expression text: 1
2014-06-18 00:17:18 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 00:17:18 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:17:18 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:17:18 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:17:18 TRACE Expression:45 - Expression text: tst
2014-06-18 00:17:18 TRACE ClassMethod:39 - Method added: Main
2014-06-18 00:17:18 TRACE Variable:30 - Field/variable added: s
2014-06-18 00:17:18 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 00:17:18 TRACE Variable:30 - Field/variable added: a
2014-06-18 00:17:18 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:17:18 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:17:18 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:17:18 TRACE Expression:45 - Expression text: 5
2014-06-18 00:17:18 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 00:17:18 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 00:17:18 TRACE ConstructorExpression:26 - Constructor call added: newint[1,2][3]
2014-06-18 00:17:18 TRACE Expression:42 - Expression added: NEW
2014-06-18 00:17:18 TRACE Expression:43 - Token: 'new'
2014-06-18 00:17:18 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 00:17:18 TRACE Expression:45 - Expression text: newint[1,2][3]
2014-06-18 00:17:18 TRACE CompoundStatement:49 - stmt in da block: System.Console.WriteLine("Hello, World!");
2014-06-18 00:17:18 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:17:18 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:17:18 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:17:18 TRACE Expression:45 - Expression text: System
2014-06-18 00:17:18 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:17:18 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:17:18 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:17:18 TRACE Expression:45 - Expression text: Console
2014-06-18 00:17:18 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:17:18 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:17:18 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:17:18 TRACE Expression:45 - Expression text: WriteLine
2014-06-18 00:17:18 TRACE Expression:42 - Expression added: CHARACTER_LITERAL
2014-06-18 00:17:18 TRACE Expression:43 - Token: STRING_LITERAL
2014-06-18 00:17:18 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$1
2014-06-18 00:17:18 TRACE Expression:45 - Expression text: "Hello, World!"
2014-06-18 00:17:18 TRACE PostfixExpression:58 - Constructor call added: WriteLine("Hello, World!")
2014-06-18 00:17:18 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:17:18 TRACE Expression:43 - Token: '.'
2014-06-18 00:17:18 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:17:18 TRACE Expression:45 - Expression text: WriteLine("Hello, World!")
2014-06-18 00:17:18 TRACE PostfixExpression:58 - Constructor call added: Console.WriteLine("Hello, World!")
2014-06-18 00:17:18 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:17:18 TRACE Expression:43 - Token: '.'
2014-06-18 00:17:18 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:17:18 TRACE Expression:45 - Expression text: Console.WriteLine("Hello, World!")
2014-06-18 00:17:18 TRACE PostfixExpression:58 - Constructor call added: System.Console.WriteLine("Hello, World!")
2014-06-18 00:17:18 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:17:18 TRACE Expression:43 - Token: '.'
2014-06-18 00:17:18 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:17:18 TRACE Expression:45 - Expression text: System.Console.WriteLine("Hello, World!")
2014-06-18 00:17:18 TRACE CompoundStatement:49 - stmt in da block: a=6;
2014-06-18 00:17:18 TRACE Expression:42 - Expression added: ASSIGN
2014-06-18 00:17:18 TRACE Expression:43 - Token: '='
2014-06-18 00:17:18 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 00:17:18 TRACE Expression:45 - Expression text: a=6
2014-06-18 00:17:18 TRACE Expression:235 - int_visitLdcInsn: 555
2014-06-18 00:17:18 TRACE Expression:235 - int_visitLdcInsn: 1
2014-06-18 00:19:15 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 00:19:15 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 00:19:15 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 00:19:15 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 00:19:16 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 00:19:16 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst;publicstaticvoidMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 00:19:16 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@66,294:294='}',<40>,15:0]}
2014-06-18 00:19:16 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 00:19:16 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 00:19:16 TRACE ClassDef:55 - Class name: Test
2014-06-18 00:19:16 TRACE Variable:30 - Field/variable added: tst
2014-06-18 00:19:16 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:19:16 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:19:16 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:19:16 TRACE Expression:45 - Expression text: 555
2014-06-18 00:19:16 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 00:19:16 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:19:16 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:19:16 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:19:16 TRACE Expression:45 - Expression text: 1
2014-06-18 00:19:16 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 00:19:16 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:19:16 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:19:16 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:19:16 TRACE Expression:45 - Expression text: tst
2014-06-18 00:19:16 TRACE ClassMethod:39 - Method added: Main
2014-06-18 00:19:16 TRACE Variable:30 - Field/variable added: s
2014-06-18 00:19:16 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 00:19:16 TRACE Variable:30 - Field/variable added: a
2014-06-18 00:19:16 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:19:16 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:19:16 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:19:16 TRACE Expression:45 - Expression text: 5
2014-06-18 00:19:16 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 00:19:16 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 00:19:16 TRACE ConstructorExpression:26 - Constructor call added: newint[1,2][3]
2014-06-18 00:19:16 TRACE Expression:42 - Expression added: NEW
2014-06-18 00:19:16 TRACE Expression:43 - Token: 'new'
2014-06-18 00:19:16 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 00:19:16 TRACE Expression:45 - Expression text: newint[1,2][3]
2014-06-18 00:19:16 TRACE CompoundStatement:49 - stmt in da block: System.Console.WriteLine("Hello, World!");
2014-06-18 00:19:16 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:19:16 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:19:16 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:19:16 TRACE Expression:45 - Expression text: System
2014-06-18 00:19:16 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:19:16 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:19:16 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:19:16 TRACE Expression:45 - Expression text: Console
2014-06-18 00:19:16 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:19:16 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:19:16 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:19:16 TRACE Expression:45 - Expression text: WriteLine
2014-06-18 00:19:16 TRACE Expression:42 - Expression added: CHARACTER_LITERAL
2014-06-18 00:19:16 TRACE Expression:43 - Token: STRING_LITERAL
2014-06-18 00:19:16 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$1
2014-06-18 00:19:16 TRACE Expression:45 - Expression text: "Hello, World!"
2014-06-18 00:19:16 TRACE PostfixExpression:58 - Constructor call added: WriteLine("Hello, World!")
2014-06-18 00:19:16 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:19:16 TRACE Expression:43 - Token: '.'
2014-06-18 00:19:16 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:19:16 TRACE Expression:45 - Expression text: WriteLine("Hello, World!")
2014-06-18 00:19:16 TRACE PostfixExpression:58 - Constructor call added: Console.WriteLine("Hello, World!")
2014-06-18 00:19:16 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:19:16 TRACE Expression:43 - Token: '.'
2014-06-18 00:19:16 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:19:16 TRACE Expression:45 - Expression text: Console.WriteLine("Hello, World!")
2014-06-18 00:19:16 TRACE PostfixExpression:58 - Constructor call added: System.Console.WriteLine("Hello, World!")
2014-06-18 00:19:16 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:19:16 TRACE Expression:43 - Token: '.'
2014-06-18 00:19:16 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:19:16 TRACE Expression:45 - Expression text: System.Console.WriteLine("Hello, World!")
2014-06-18 00:19:16 TRACE CompoundStatement:49 - stmt in da block: a=6;
2014-06-18 00:19:16 TRACE Expression:42 - Expression added: ASSIGN
2014-06-18 00:19:16 TRACE Expression:43 - Token: '='
2014-06-18 00:19:16 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 00:19:16 TRACE Expression:45 - Expression text: a=6
2014-06-18 00:19:16 TRACE Expression:236 - int_visitLdcInsn: 555
2014-06-18 00:19:16 TRACE Expression:236 - int_visitLdcInsn: 1
2014-06-18 00:19:39 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 00:19:39 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 00:19:39 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 00:19:39 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 00:19:40 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 00:19:40 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst;publicstaticvoidMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 00:19:40 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@66,294:294='}',<40>,15:0]}
2014-06-18 00:19:40 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 00:19:40 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 00:19:40 TRACE ClassDef:55 - Class name: Test
2014-06-18 00:19:40 TRACE Variable:30 - Field/variable added: tst
2014-06-18 00:19:40 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:19:40 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:19:40 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:19:40 TRACE Expression:45 - Expression text: 555
2014-06-18 00:19:40 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 00:19:40 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:19:40 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:19:40 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:19:40 TRACE Expression:45 - Expression text: 1
2014-06-18 00:19:40 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 00:19:40 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:19:40 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:19:40 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:19:40 TRACE Expression:45 - Expression text: tst
2014-06-18 00:19:40 TRACE ClassMethod:39 - Method added: Main
2014-06-18 00:19:40 TRACE Variable:30 - Field/variable added: s
2014-06-18 00:19:40 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 00:19:40 TRACE Variable:30 - Field/variable added: a
2014-06-18 00:19:40 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:19:40 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:19:40 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:19:40 TRACE Expression:45 - Expression text: 5
2014-06-18 00:19:40 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 00:19:40 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 00:19:40 TRACE ConstructorExpression:26 - Constructor call added: newint[1,2][3]
2014-06-18 00:19:40 TRACE Expression:42 - Expression added: NEW
2014-06-18 00:19:40 TRACE Expression:43 - Token: 'new'
2014-06-18 00:19:40 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 00:19:40 TRACE Expression:45 - Expression text: newint[1,2][3]
2014-06-18 00:19:40 TRACE CompoundStatement:49 - stmt in da block: System.Console.WriteLine("Hello, World!");
2014-06-18 00:19:40 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:19:40 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:19:40 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:19:40 TRACE Expression:45 - Expression text: System
2014-06-18 00:19:40 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:19:40 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:19:40 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:19:40 TRACE Expression:45 - Expression text: Console
2014-06-18 00:19:40 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:19:40 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:19:40 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:19:40 TRACE Expression:45 - Expression text: WriteLine
2014-06-18 00:19:40 TRACE Expression:42 - Expression added: CHARACTER_LITERAL
2014-06-18 00:19:40 TRACE Expression:43 - Token: STRING_LITERAL
2014-06-18 00:19:40 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$1
2014-06-18 00:19:40 TRACE Expression:45 - Expression text: "Hello, World!"
2014-06-18 00:19:40 TRACE PostfixExpression:58 - Constructor call added: WriteLine("Hello, World!")
2014-06-18 00:19:40 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:19:40 TRACE Expression:43 - Token: '.'
2014-06-18 00:19:40 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:19:40 TRACE Expression:45 - Expression text: WriteLine("Hello, World!")
2014-06-18 00:19:40 TRACE PostfixExpression:58 - Constructor call added: Console.WriteLine("Hello, World!")
2014-06-18 00:19:40 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:19:40 TRACE Expression:43 - Token: '.'
2014-06-18 00:19:40 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:19:40 TRACE Expression:45 - Expression text: Console.WriteLine("Hello, World!")
2014-06-18 00:19:40 TRACE PostfixExpression:58 - Constructor call added: System.Console.WriteLine("Hello, World!")
2014-06-18 00:19:40 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:19:40 TRACE Expression:43 - Token: '.'
2014-06-18 00:19:40 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:19:40 TRACE Expression:45 - Expression text: System.Console.WriteLine("Hello, World!")
2014-06-18 00:19:40 TRACE CompoundStatement:49 - stmt in da block: a=6;
2014-06-18 00:19:40 TRACE Expression:42 - Expression added: ASSIGN
2014-06-18 00:19:40 TRACE Expression:43 - Token: '='
2014-06-18 00:19:40 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 00:19:40 TRACE Expression:45 - Expression text: a=6
2014-06-18 00:19:40 TRACE Expression:236 - int_visitLdcInsn: 555
2014-06-18 00:19:40 TRACE Expression:236 - int_visitLdcInsn: 1
2014-06-18 00:21:53 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 00:21:53 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 00:21:53 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 00:21:53 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 00:21:53 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 00:21:53 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst;publicstaticvoidMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 00:21:53 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@66,294:294='}',<40>,15:0]}
2014-06-18 00:21:53 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 00:21:53 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 00:21:53 TRACE ClassDef:55 - Class name: Test
2014-06-18 00:21:53 TRACE Variable:30 - Field/variable added: tst
2014-06-18 00:21:53 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:21:53 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:21:53 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:21:53 TRACE Expression:45 - Expression text: 555
2014-06-18 00:21:53 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 00:21:53 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:21:53 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:21:53 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:21:53 TRACE Expression:45 - Expression text: 1
2014-06-18 00:21:53 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 00:21:53 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:21:53 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:21:53 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:21:53 TRACE Expression:45 - Expression text: tst
2014-06-18 00:21:53 TRACE ClassMethod:39 - Method added: Main
2014-06-18 00:21:53 TRACE Variable:30 - Field/variable added: s
2014-06-18 00:21:53 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 00:21:53 TRACE Variable:30 - Field/variable added: a
2014-06-18 00:21:53 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:21:53 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:21:53 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:21:53 TRACE Expression:45 - Expression text: 5
2014-06-18 00:21:53 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 00:21:53 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 00:21:53 TRACE ConstructorExpression:26 - Constructor call added: newint[1,2][3]
2014-06-18 00:21:53 TRACE Expression:42 - Expression added: NEW
2014-06-18 00:21:53 TRACE Expression:43 - Token: 'new'
2014-06-18 00:21:53 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 00:21:53 TRACE Expression:45 - Expression text: newint[1,2][3]
2014-06-18 00:21:53 TRACE CompoundStatement:49 - stmt in da block: System.Console.WriteLine("Hello, World!");
2014-06-18 00:21:53 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:21:53 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:21:53 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:21:53 TRACE Expression:45 - Expression text: System
2014-06-18 00:21:53 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:21:53 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:21:53 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:21:53 TRACE Expression:45 - Expression text: Console
2014-06-18 00:21:53 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:21:53 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:21:53 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:21:53 TRACE Expression:45 - Expression text: WriteLine
2014-06-18 00:21:53 TRACE Expression:42 - Expression added: CHARACTER_LITERAL
2014-06-18 00:21:53 TRACE Expression:43 - Token: STRING_LITERAL
2014-06-18 00:21:53 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$1
2014-06-18 00:21:53 TRACE Expression:45 - Expression text: "Hello, World!"
2014-06-18 00:21:53 TRACE PostfixExpression:58 - Constructor call added: WriteLine("Hello, World!")
2014-06-18 00:21:53 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:21:53 TRACE Expression:43 - Token: '.'
2014-06-18 00:21:53 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:21:53 TRACE Expression:45 - Expression text: WriteLine("Hello, World!")
2014-06-18 00:21:53 TRACE PostfixExpression:58 - Constructor call added: Console.WriteLine("Hello, World!")
2014-06-18 00:21:53 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:21:53 TRACE Expression:43 - Token: '.'
2014-06-18 00:21:53 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:21:53 TRACE Expression:45 - Expression text: Console.WriteLine("Hello, World!")
2014-06-18 00:21:53 TRACE PostfixExpression:58 - Constructor call added: System.Console.WriteLine("Hello, World!")
2014-06-18 00:21:53 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:21:53 TRACE Expression:43 - Token: '.'
2014-06-18 00:21:53 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:21:53 TRACE Expression:45 - Expression text: System.Console.WriteLine("Hello, World!")
2014-06-18 00:21:53 TRACE CompoundStatement:49 - stmt in da block: a=6;
2014-06-18 00:21:53 TRACE Expression:42 - Expression added: ASSIGN
2014-06-18 00:21:53 TRACE Expression:43 - Token: '='
2014-06-18 00:21:53 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 00:21:53 TRACE Expression:45 - Expression text: a=6
2014-06-18 00:21:53 TRACE Expression:235 - int_visitLdcInsn: 555
2014-06-18 00:21:53 TRACE Expression:235 - int_visitLdcInsn: 1
2014-06-18 00:22:15 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 00:22:15 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 00:22:15 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 00:22:15 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 00:22:15 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 00:22:15 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst;publicstaticvoidMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 00:22:15 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@66,294:294='}',<40>,15:0]}
2014-06-18 00:22:15 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 00:22:15 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 00:22:15 TRACE ClassDef:55 - Class name: Test
2014-06-18 00:22:15 TRACE Variable:30 - Field/variable added: tst
2014-06-18 00:22:15 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:22:15 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:22:15 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:22:15 TRACE Expression:45 - Expression text: 555
2014-06-18 00:22:15 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 00:22:15 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:22:15 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:22:15 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:22:15 TRACE Expression:45 - Expression text: 1
2014-06-18 00:22:15 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 00:22:15 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:22:15 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:22:15 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:22:15 TRACE Expression:45 - Expression text: tst
2014-06-18 00:22:15 TRACE ClassMethod:39 - Method added: Main
2014-06-18 00:22:15 TRACE Variable:30 - Field/variable added: s
2014-06-18 00:22:15 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 00:22:15 TRACE Variable:30 - Field/variable added: a
2014-06-18 00:22:15 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:22:15 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:22:15 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:22:15 TRACE Expression:45 - Expression text: 5
2014-06-18 00:22:15 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 00:22:15 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 00:22:15 TRACE ConstructorExpression:26 - Constructor call added: newint[1,2][3]
2014-06-18 00:22:15 TRACE Expression:42 - Expression added: NEW
2014-06-18 00:22:15 TRACE Expression:43 - Token: 'new'
2014-06-18 00:22:15 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 00:22:15 TRACE Expression:45 - Expression text: newint[1,2][3]
2014-06-18 00:22:15 TRACE CompoundStatement:49 - stmt in da block: System.Console.WriteLine("Hello, World!");
2014-06-18 00:22:15 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:22:15 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:22:15 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:22:15 TRACE Expression:45 - Expression text: System
2014-06-18 00:22:15 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:22:15 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:22:15 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:22:15 TRACE Expression:45 - Expression text: Console
2014-06-18 00:22:15 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:22:15 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:22:15 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:22:15 TRACE Expression:45 - Expression text: WriteLine
2014-06-18 00:22:15 TRACE Expression:42 - Expression added: CHARACTER_LITERAL
2014-06-18 00:22:15 TRACE Expression:43 - Token: STRING_LITERAL
2014-06-18 00:22:15 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$1
2014-06-18 00:22:15 TRACE Expression:45 - Expression text: "Hello, World!"
2014-06-18 00:22:15 TRACE PostfixExpression:58 - Constructor call added: WriteLine("Hello, World!")
2014-06-18 00:22:15 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:22:15 TRACE Expression:43 - Token: '.'
2014-06-18 00:22:15 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:22:15 TRACE Expression:45 - Expression text: WriteLine("Hello, World!")
2014-06-18 00:22:15 TRACE PostfixExpression:58 - Constructor call added: Console.WriteLine("Hello, World!")
2014-06-18 00:22:15 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:22:15 TRACE Expression:43 - Token: '.'
2014-06-18 00:22:15 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:22:15 TRACE Expression:45 - Expression text: Console.WriteLine("Hello, World!")
2014-06-18 00:22:15 TRACE PostfixExpression:58 - Constructor call added: System.Console.WriteLine("Hello, World!")
2014-06-18 00:22:15 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:22:15 TRACE Expression:43 - Token: '.'
2014-06-18 00:22:15 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:22:15 TRACE Expression:45 - Expression text: System.Console.WriteLine("Hello, World!")
2014-06-18 00:22:15 TRACE CompoundStatement:49 - stmt in da block: a=6;
2014-06-18 00:22:15 TRACE Expression:42 - Expression added: ASSIGN
2014-06-18 00:22:15 TRACE Expression:43 - Token: '='
2014-06-18 00:22:15 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 00:22:15 TRACE Expression:45 - Expression text: a=6
2014-06-18 00:22:15 TRACE Expression:235 - int_visitLdcInsn: 555
2014-06-18 00:22:15 TRACE Expression:235 - int_visitLdcInsn: 1
2014-06-18 00:22:15 INFO  CsCompiler:69 - 1; declaration; inttst=555;
2014-06-18 00:22:15 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def, declaration]{start=[@4,27:29='int',<14>,4:3], stop=[@8,40:40=';',<45>,4:16]}
2014-06-18 00:23:20 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 00:23:20 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 00:23:20 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 00:23:20 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 00:23:21 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 00:23:21 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst;publicstaticvoidMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 00:23:21 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@66,294:294='}',<40>,15:0]}
2014-06-18 00:23:21 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 00:23:21 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 00:23:21 TRACE ClassDef:55 - Class name: Test
2014-06-18 00:23:21 TRACE Variable:30 - Field/variable added: tst
2014-06-18 00:23:21 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:23:21 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:23:21 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:23:21 TRACE Expression:45 - Expression text: 555
2014-06-18 00:23:21 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 00:23:21 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:23:21 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:23:21 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:23:21 TRACE Expression:45 - Expression text: 1
2014-06-18 00:23:21 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 00:23:21 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:23:21 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:23:21 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:23:21 TRACE Expression:45 - Expression text: tst
2014-06-18 00:23:21 TRACE ClassMethod:39 - Method added: Main
2014-06-18 00:23:21 TRACE Variable:30 - Field/variable added: s
2014-06-18 00:23:21 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 00:23:21 TRACE Variable:30 - Field/variable added: a
2014-06-18 00:23:21 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:23:21 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:23:21 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:23:21 TRACE Expression:45 - Expression text: 5
2014-06-18 00:23:21 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 00:23:21 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 00:23:21 TRACE ConstructorExpression:26 - Constructor call added: newint[1,2][3]
2014-06-18 00:23:21 TRACE Expression:42 - Expression added: NEW
2014-06-18 00:23:21 TRACE Expression:43 - Token: 'new'
2014-06-18 00:23:21 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 00:23:21 TRACE Expression:45 - Expression text: newint[1,2][3]
2014-06-18 00:23:21 TRACE CompoundStatement:49 - stmt in da block: System.Console.WriteLine("Hello, World!");
2014-06-18 00:23:21 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:23:21 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:23:21 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:23:21 TRACE Expression:45 - Expression text: System
2014-06-18 00:23:21 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:23:21 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:23:21 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:23:21 TRACE Expression:45 - Expression text: Console
2014-06-18 00:23:21 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:23:21 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:23:21 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:23:21 TRACE Expression:45 - Expression text: WriteLine
2014-06-18 00:23:21 TRACE Expression:42 - Expression added: CHARACTER_LITERAL
2014-06-18 00:23:21 TRACE Expression:43 - Token: STRING_LITERAL
2014-06-18 00:23:21 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$1
2014-06-18 00:23:21 TRACE Expression:45 - Expression text: "Hello, World!"
2014-06-18 00:23:21 TRACE PostfixExpression:58 - Constructor call added: WriteLine("Hello, World!")
2014-06-18 00:23:21 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:23:21 TRACE Expression:43 - Token: '.'
2014-06-18 00:23:21 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:23:21 TRACE Expression:45 - Expression text: WriteLine("Hello, World!")
2014-06-18 00:23:21 TRACE PostfixExpression:58 - Constructor call added: Console.WriteLine("Hello, World!")
2014-06-18 00:23:21 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:23:21 TRACE Expression:43 - Token: '.'
2014-06-18 00:23:21 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:23:21 TRACE Expression:45 - Expression text: Console.WriteLine("Hello, World!")
2014-06-18 00:23:21 TRACE PostfixExpression:58 - Constructor call added: System.Console.WriteLine("Hello, World!")
2014-06-18 00:23:21 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:23:21 TRACE Expression:43 - Token: '.'
2014-06-18 00:23:21 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:23:21 TRACE Expression:45 - Expression text: System.Console.WriteLine("Hello, World!")
2014-06-18 00:23:21 TRACE CompoundStatement:49 - stmt in da block: a=6;
2014-06-18 00:23:21 TRACE Expression:42 - Expression added: ASSIGN
2014-06-18 00:23:21 TRACE Expression:43 - Token: '='
2014-06-18 00:23:21 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 00:23:21 TRACE Expression:45 - Expression text: a=6
2014-06-18 00:23:21 TRACE Expression:235 - int_visitLdcInsn: 555
2014-06-18 00:23:21 TRACE Expression:235 - int_visitLdcInsn: 1
2014-06-18 00:23:21 INFO  CsCompiler:69 - 1; declaration; inttst=555;
2014-06-18 00:23:21 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def, declaration]{start=[@4,27:29='int',<14>,4:3], stop=[@8,40:40=';',<45>,4:16]}
2014-06-18 00:29:00 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 00:29:00 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 00:29:00 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 00:29:00 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (unary_expression (postfix_expression (primary_expression tst))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 00:29:00 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 00:29:00 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst=xxx;publicstaticvoidMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 00:29:00 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@68,300:300='}',<40>,15:0]}
2014-06-18 00:29:00 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 00:29:00 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 00:29:00 TRACE ClassDef:55 - Class name: Test
2014-06-18 00:29:00 TRACE Variable:30 - Field/variable added: tst
2014-06-18 00:29:00 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:29:00 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:29:00 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:29:00 TRACE Expression:45 - Expression text: 555
2014-06-18 00:29:00 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 00:29:00 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:29:00 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:29:00 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:29:00 TRACE Expression:45 - Expression text: 1
2014-06-18 00:29:00 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 00:29:00 TRACE Expression:42 - Expression added: ASSIGN
2014-06-18 00:29:00 TRACE Expression:43 - Token: '='
2014-06-18 00:29:00 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 00:29:00 TRACE Expression:45 - Expression text: tst=xxx
2014-06-18 00:29:00 TRACE ClassMethod:39 - Method added: Main
2014-06-18 00:29:00 TRACE Variable:30 - Field/variable added: s
2014-06-18 00:29:00 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 00:29:00 TRACE Variable:30 - Field/variable added: a
2014-06-18 00:29:00 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:29:00 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:29:00 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:29:00 TRACE Expression:45 - Expression text: 5
2014-06-18 00:29:00 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 00:29:00 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 00:29:00 TRACE ConstructorExpression:26 - Constructor call added: newint[1,2][3]
2014-06-18 00:29:00 TRACE Expression:42 - Expression added: NEW
2014-06-18 00:29:00 TRACE Expression:43 - Token: 'new'
2014-06-18 00:29:00 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 00:29:00 TRACE Expression:45 - Expression text: newint[1,2][3]
2014-06-18 00:29:00 TRACE CompoundStatement:49 - stmt in da block: System.Console.WriteLine("Hello, World!");
2014-06-18 00:29:00 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:29:00 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:29:00 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:29:00 TRACE Expression:45 - Expression text: System
2014-06-18 00:29:00 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:29:00 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:29:00 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:29:00 TRACE Expression:45 - Expression text: Console
2014-06-18 00:29:00 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:29:00 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:29:00 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:29:00 TRACE Expression:45 - Expression text: WriteLine
2014-06-18 00:29:00 TRACE Expression:42 - Expression added: CHARACTER_LITERAL
2014-06-18 00:29:00 TRACE Expression:43 - Token: STRING_LITERAL
2014-06-18 00:29:00 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$1
2014-06-18 00:29:00 TRACE Expression:45 - Expression text: "Hello, World!"
2014-06-18 00:29:00 TRACE PostfixExpression:58 - Constructor call added: WriteLine("Hello, World!")
2014-06-18 00:29:00 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:29:00 TRACE Expression:43 - Token: '.'
2014-06-18 00:29:00 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:29:00 TRACE Expression:45 - Expression text: WriteLine("Hello, World!")
2014-06-18 00:29:00 TRACE PostfixExpression:58 - Constructor call added: Console.WriteLine("Hello, World!")
2014-06-18 00:29:00 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:29:00 TRACE Expression:43 - Token: '.'
2014-06-18 00:29:00 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:29:00 TRACE Expression:45 - Expression text: Console.WriteLine("Hello, World!")
2014-06-18 00:29:00 TRACE PostfixExpression:58 - Constructor call added: System.Console.WriteLine("Hello, World!")
2014-06-18 00:29:00 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:29:00 TRACE Expression:43 - Token: '.'
2014-06-18 00:29:00 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:29:00 TRACE Expression:45 - Expression text: System.Console.WriteLine("Hello, World!")
2014-06-18 00:29:00 TRACE CompoundStatement:49 - stmt in da block: a=6;
2014-06-18 00:29:00 TRACE Expression:42 - Expression added: ASSIGN
2014-06-18 00:29:00 TRACE Expression:43 - Token: '='
2014-06-18 00:29:00 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 00:29:00 TRACE Expression:45 - Expression text: a=6
2014-06-18 00:29:00 TRACE Expression:235 - int_visitLdcInsn: 555
2014-06-18 00:29:00 TRACE Expression:235 - int_visitLdcInsn: 1
2014-06-18 00:29:00 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:29:00 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:29:00 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:29:00 TRACE Expression:45 - Expression text: tst
2014-06-18 00:29:00 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:29:00 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:29:00 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:29:00 TRACE Expression:45 - Expression text: xxx
2014-06-18 00:29:00 INFO  CsCompiler:69 - 1; declaration; inttst=555;
2014-06-18 00:29:00 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def, declaration]{start=[@4,27:29='int',<14>,4:3], stop=[@8,40:40=';',<45>,4:16]}
2014-06-18 00:29:18 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 00:29:18 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 00:29:18 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 00:29:18 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 00:29:18 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 00:29:18 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst+1;publicstaticvoidMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 00:29:18 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@68,298:298='}',<40>,15:0]}
2014-06-18 00:29:18 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 00:29:18 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 00:29:18 TRACE ClassDef:55 - Class name: Test
2014-06-18 00:29:18 TRACE Variable:30 - Field/variable added: tst
2014-06-18 00:29:18 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:29:18 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:29:18 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:29:18 TRACE Expression:45 - Expression text: 555
2014-06-18 00:29:18 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 00:29:18 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:29:18 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:29:18 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:29:18 TRACE Expression:45 - Expression text: 1
2014-06-18 00:29:18 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 00:29:18 TRACE Expression:42 - Expression added: PLUS
2014-06-18 00:29:18 TRACE Expression:43 - Token: '+'
2014-06-18 00:29:18 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 00:29:18 TRACE Expression:45 - Expression text: tst+1
2014-06-18 00:29:18 TRACE ClassMethod:39 - Method added: Main
2014-06-18 00:29:18 TRACE Variable:30 - Field/variable added: s
2014-06-18 00:29:18 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 00:29:18 TRACE Variable:30 - Field/variable added: a
2014-06-18 00:29:18 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:29:18 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:29:18 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:29:18 TRACE Expression:45 - Expression text: 5
2014-06-18 00:29:18 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 00:29:18 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 00:29:18 TRACE ConstructorExpression:26 - Constructor call added: newint[1,2][3]
2014-06-18 00:29:18 TRACE Expression:42 - Expression added: NEW
2014-06-18 00:29:18 TRACE Expression:43 - Token: 'new'
2014-06-18 00:29:18 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 00:29:18 TRACE Expression:45 - Expression text: newint[1,2][3]
2014-06-18 00:29:18 TRACE CompoundStatement:49 - stmt in da block: System.Console.WriteLine("Hello, World!");
2014-06-18 00:29:18 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:29:18 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:29:18 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:29:18 TRACE Expression:45 - Expression text: System
2014-06-18 00:29:18 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:29:18 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:29:18 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:29:18 TRACE Expression:45 - Expression text: Console
2014-06-18 00:29:18 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:29:18 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:29:18 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:29:18 TRACE Expression:45 - Expression text: WriteLine
2014-06-18 00:29:18 TRACE Expression:42 - Expression added: CHARACTER_LITERAL
2014-06-18 00:29:18 TRACE Expression:43 - Token: STRING_LITERAL
2014-06-18 00:29:18 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$1
2014-06-18 00:29:18 TRACE Expression:45 - Expression text: "Hello, World!"
2014-06-18 00:29:18 TRACE PostfixExpression:58 - Constructor call added: WriteLine("Hello, World!")
2014-06-18 00:29:18 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:29:18 TRACE Expression:43 - Token: '.'
2014-06-18 00:29:18 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:29:18 TRACE Expression:45 - Expression text: WriteLine("Hello, World!")
2014-06-18 00:29:18 TRACE PostfixExpression:58 - Constructor call added: Console.WriteLine("Hello, World!")
2014-06-18 00:29:18 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:29:18 TRACE Expression:43 - Token: '.'
2014-06-18 00:29:18 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:29:18 TRACE Expression:45 - Expression text: Console.WriteLine("Hello, World!")
2014-06-18 00:29:18 TRACE PostfixExpression:58 - Constructor call added: System.Console.WriteLine("Hello, World!")
2014-06-18 00:29:18 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:29:18 TRACE Expression:43 - Token: '.'
2014-06-18 00:29:18 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:29:18 TRACE Expression:45 - Expression text: System.Console.WriteLine("Hello, World!")
2014-06-18 00:29:18 TRACE CompoundStatement:49 - stmt in da block: a=6;
2014-06-18 00:29:18 TRACE Expression:42 - Expression added: ASSIGN
2014-06-18 00:29:18 TRACE Expression:43 - Token: '='
2014-06-18 00:29:18 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 00:29:18 TRACE Expression:45 - Expression text: a=6
2014-06-18 00:29:19 TRACE Expression:235 - int_visitLdcInsn: 555
2014-06-18 00:29:19 TRACE Expression:235 - int_visitLdcInsn: 1
2014-06-18 00:29:19 ERROR ErrorProcessor:14 - line 5: assertion failed: 3 != 1. Message: BinOp
2014-06-18 00:32:55 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 00:32:55 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 00:32:55 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 00:32:55 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 00:32:55 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 00:32:55 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst+1;publicstaticvoidMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 00:32:55 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@68,298:298='}',<40>,15:0]}
2014-06-18 00:32:55 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 00:32:55 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 00:32:55 TRACE ClassDef:55 - Class name: Test
2014-06-18 00:32:55 TRACE Variable:30 - Field/variable added: tst
2014-06-18 00:33:04 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 00:33:04 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 00:33:04 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 00:33:04 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 00:33:05 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 00:33:05 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst+1;publicstaticvoidMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 00:33:05 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@68,298:298='}',<40>,15:0]}
2014-06-18 00:33:05 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 00:33:05 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 00:33:05 TRACE ClassDef:55 - Class name: Test
2014-06-18 00:33:05 TRACE Variable:30 - Field/variable added: tst
2014-06-18 00:34:01 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 00:34:01 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 00:34:01 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 00:34:01 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 00:34:02 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 00:34:02 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst+1;publicstaticvoidMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 00:34:02 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@68,298:298='}',<40>,15:0]}
2014-06-18 00:34:02 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 00:34:02 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 00:34:02 TRACE ClassDef:55 - Class name: Test
2014-06-18 00:34:02 TRACE Variable:30 - Field/variable added: tst
2014-06-18 00:34:02 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:34:02 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:34:02 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:34:02 TRACE Expression:45 - Expression text: 555
2014-06-18 00:34:02 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 00:34:02 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:34:02 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:34:02 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:34:02 TRACE Expression:45 - Expression text: 1
2014-06-18 00:34:02 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 00:34:59 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 00:34:59 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 00:34:59 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 00:34:59 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 00:35:00 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 00:35:00 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst+1;publicstaticvoidMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 00:35:00 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@68,298:298='}',<40>,15:0]}
2014-06-18 00:35:00 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 00:35:00 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 00:35:00 TRACE ClassDef:55 - Class name: Test
2014-06-18 00:35:00 TRACE Variable:30 - Field/variable added: tst
2014-06-18 00:35:00 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:35:00 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:35:00 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:35:00 TRACE Expression:45 - Expression text: 555
2014-06-18 00:35:00 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 00:35:00 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:35:00 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:35:00 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:35:00 TRACE Expression:45 - Expression text: 1
2014-06-18 00:35:00 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 00:35:48 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 00:35:48 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 00:35:48 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 00:35:48 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 00:35:49 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 00:35:49 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst+1;publicstaticvoidMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 00:35:49 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@68,298:298='}',<40>,15:0]}
2014-06-18 00:35:49 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 00:35:49 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 00:35:49 TRACE ClassDef:55 - Class name: Test
2014-06-18 00:35:49 TRACE Variable:30 - Field/variable added: tst
2014-06-18 00:35:49 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:35:49 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:35:49 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:35:49 TRACE Expression:45 - Expression text: 555
2014-06-18 00:35:49 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 00:35:49 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:35:49 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:35:49 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:35:49 TRACE Expression:45 - Expression text: 1
2014-06-18 00:35:49 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 00:35:49 TRACE Expression:42 - Expression added: PLUS
2014-06-18 00:35:49 TRACE Expression:43 - Token: '+'
2014-06-18 00:35:49 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 00:35:49 TRACE Expression:45 - Expression text: tst+1
2014-06-18 00:35:49 TRACE ClassMethod:39 - Method added: Main
2014-06-18 00:35:49 TRACE Variable:30 - Field/variable added: s
2014-06-18 00:35:49 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 00:35:49 TRACE Variable:30 - Field/variable added: a
2014-06-18 00:35:49 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:35:49 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:35:49 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:35:49 TRACE Expression:45 - Expression text: 5
2014-06-18 00:35:49 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 00:35:49 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 00:35:49 TRACE ConstructorExpression:26 - Constructor call added: newint[1,2][3]
2014-06-18 00:35:49 TRACE Expression:42 - Expression added: NEW
2014-06-18 00:35:49 TRACE Expression:43 - Token: 'new'
2014-06-18 00:35:49 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 00:35:49 TRACE Expression:45 - Expression text: newint[1,2][3]
2014-06-18 00:35:49 TRACE CompoundStatement:49 - stmt in da block: System.Console.WriteLine("Hello, World!");
2014-06-18 00:35:49 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:35:49 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:35:49 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:35:49 TRACE Expression:45 - Expression text: System
2014-06-18 00:35:49 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:35:49 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:35:49 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:35:49 TRACE Expression:45 - Expression text: Console
2014-06-18 00:35:49 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:35:49 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:35:49 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:35:49 TRACE Expression:45 - Expression text: WriteLine
2014-06-18 00:35:49 TRACE Expression:42 - Expression added: CHARACTER_LITERAL
2014-06-18 00:35:49 TRACE Expression:43 - Token: STRING_LITERAL
2014-06-18 00:35:49 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$1
2014-06-18 00:35:49 TRACE Expression:45 - Expression text: "Hello, World!"
2014-06-18 00:35:49 TRACE PostfixExpression:58 - Constructor call added: WriteLine("Hello, World!")
2014-06-18 00:35:49 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:35:49 TRACE Expression:43 - Token: '.'
2014-06-18 00:35:49 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:35:49 TRACE Expression:45 - Expression text: WriteLine("Hello, World!")
2014-06-18 00:35:49 TRACE PostfixExpression:58 - Constructor call added: Console.WriteLine("Hello, World!")
2014-06-18 00:35:49 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:35:49 TRACE Expression:43 - Token: '.'
2014-06-18 00:35:49 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:35:49 TRACE Expression:45 - Expression text: Console.WriteLine("Hello, World!")
2014-06-18 00:35:49 TRACE PostfixExpression:58 - Constructor call added: System.Console.WriteLine("Hello, World!")
2014-06-18 00:35:49 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:35:49 TRACE Expression:43 - Token: '.'
2014-06-18 00:35:49 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:35:49 TRACE Expression:45 - Expression text: System.Console.WriteLine("Hello, World!")
2014-06-18 00:35:49 TRACE CompoundStatement:49 - stmt in da block: a=6;
2014-06-18 00:35:49 TRACE Expression:42 - Expression added: ASSIGN
2014-06-18 00:35:49 TRACE Expression:43 - Token: '='
2014-06-18 00:35:49 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 00:35:49 TRACE Expression:45 - Expression text: a=6
2014-06-18 00:35:49 TRACE Expression:237 - int_visitLdcInsn: 555
2014-06-18 00:35:49 TRACE Expression:237 - int_visitLdcInsn: 1
2014-06-18 00:35:49 ERROR ErrorProcessor:14 - line 5: assertion failed: 3 != 1. Message: BinOp tst+1
2014-06-18 00:36:47 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 00:36:47 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 00:36:47 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 00:36:47 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 00:36:48 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 00:36:48 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst+1;publicstaticvoidMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 00:36:48 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@68,298:298='}',<40>,15:0]}
2014-06-18 00:36:48 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 00:36:48 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 00:36:48 TRACE ClassDef:55 - Class name: Test
2014-06-18 00:36:48 TRACE Variable:30 - Field/variable added: tst
2014-06-18 00:36:48 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:36:48 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:36:48 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:36:48 TRACE Expression:45 - Expression text: 555
2014-06-18 00:36:48 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 00:36:48 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:36:48 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:36:48 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:36:48 TRACE Expression:45 - Expression text: 1
2014-06-18 00:36:48 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 00:36:48 TRACE Expression:42 - Expression added: PLUS
2014-06-18 00:36:48 TRACE Expression:43 - Token: '+'
2014-06-18 00:36:48 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 00:36:48 TRACE Expression:45 - Expression text: tst+1
2014-06-18 00:36:48 TRACE ClassMethod:39 - Method added: Main
2014-06-18 00:36:48 TRACE Variable:30 - Field/variable added: s
2014-06-18 00:36:48 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 00:36:48 TRACE Variable:30 - Field/variable added: a
2014-06-18 00:36:48 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:36:48 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:36:48 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:36:48 TRACE Expression:45 - Expression text: 5
2014-06-18 00:36:48 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 00:36:48 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 00:36:48 TRACE ConstructorExpression:26 - Constructor call added: newint[1,2][3]
2014-06-18 00:36:48 TRACE Expression:42 - Expression added: NEW
2014-06-18 00:36:48 TRACE Expression:43 - Token: 'new'
2014-06-18 00:36:48 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 00:36:48 TRACE Expression:45 - Expression text: newint[1,2][3]
2014-06-18 00:36:48 TRACE CompoundStatement:49 - stmt in da block: System.Console.WriteLine("Hello, World!");
2014-06-18 00:36:48 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:36:48 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:36:48 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:36:48 TRACE Expression:45 - Expression text: System
2014-06-18 00:36:48 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:36:48 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:36:48 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:36:48 TRACE Expression:45 - Expression text: Console
2014-06-18 00:36:48 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:36:48 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:36:48 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:36:48 TRACE Expression:45 - Expression text: WriteLine
2014-06-18 00:36:48 TRACE Expression:42 - Expression added: CHARACTER_LITERAL
2014-06-18 00:36:48 TRACE Expression:43 - Token: STRING_LITERAL
2014-06-18 00:36:48 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$1
2014-06-18 00:36:48 TRACE Expression:45 - Expression text: "Hello, World!"
2014-06-18 00:36:48 TRACE PostfixExpression:58 - Constructor call added: WriteLine("Hello, World!")
2014-06-18 00:36:48 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:36:48 TRACE Expression:43 - Token: '.'
2014-06-18 00:36:48 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:36:48 TRACE Expression:45 - Expression text: WriteLine("Hello, World!")
2014-06-18 00:36:48 TRACE PostfixExpression:58 - Constructor call added: Console.WriteLine("Hello, World!")
2014-06-18 00:36:48 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:36:48 TRACE Expression:43 - Token: '.'
2014-06-18 00:36:48 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:36:48 TRACE Expression:45 - Expression text: Console.WriteLine("Hello, World!")
2014-06-18 00:36:48 TRACE PostfixExpression:58 - Constructor call added: System.Console.WriteLine("Hello, World!")
2014-06-18 00:36:48 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:36:48 TRACE Expression:43 - Token: '.'
2014-06-18 00:36:48 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:36:48 TRACE Expression:45 - Expression text: System.Console.WriteLine("Hello, World!")
2014-06-18 00:36:48 TRACE CompoundStatement:49 - stmt in da block: a=6;
2014-06-18 00:36:48 TRACE Expression:42 - Expression added: ASSIGN
2014-06-18 00:36:48 TRACE Expression:43 - Token: '='
2014-06-18 00:36:48 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 00:36:48 TRACE Expression:45 - Expression text: a=6
2014-06-18 00:36:48 TRACE Expression:237 - int_visitLdcInsn: 555
2014-06-18 00:36:48 TRACE Expression:237 - int_visitLdcInsn: 1
2014-06-18 00:36:48 ERROR ErrorProcessor:14 - line 5: assertion failed: 3 != 1. Message: BinOp tst+1
2014-06-18 00:37:11 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 00:37:11 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 00:37:11 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 00:37:11 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 00:37:12 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 00:37:12 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst+1;publicstaticvoidMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 00:37:12 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@68,298:298='}',<40>,15:0]}
2014-06-18 00:37:12 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 00:37:12 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 00:37:12 TRACE ClassDef:55 - Class name: Test
2014-06-18 00:37:12 TRACE Variable:30 - Field/variable added: tst
2014-06-18 00:37:12 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:37:12 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:37:12 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:37:12 TRACE Expression:45 - Expression text: 555
2014-06-18 00:37:12 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 00:37:12 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:37:12 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:37:12 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:37:12 TRACE Expression:45 - Expression text: 1
2014-06-18 00:37:12 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 00:37:12 TRACE Expression:42 - Expression added: PLUS
2014-06-18 00:37:12 TRACE Expression:43 - Token: '+'
2014-06-18 00:37:12 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 00:37:12 TRACE Expression:45 - Expression text: tst+1
2014-06-18 00:37:12 TRACE ClassMethod:39 - Method added: Main
2014-06-18 00:37:12 TRACE Variable:30 - Field/variable added: s
2014-06-18 00:37:12 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 00:37:12 TRACE Variable:30 - Field/variable added: a
2014-06-18 00:37:12 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:37:12 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:37:12 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:37:12 TRACE Expression:45 - Expression text: 5
2014-06-18 00:37:12 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 00:37:12 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 00:37:12 TRACE ConstructorExpression:26 - Constructor call added: newint[1,2][3]
2014-06-18 00:37:12 TRACE Expression:42 - Expression added: NEW
2014-06-18 00:37:12 TRACE Expression:43 - Token: 'new'
2014-06-18 00:37:12 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 00:37:12 TRACE Expression:45 - Expression text: newint[1,2][3]
2014-06-18 00:37:12 TRACE CompoundStatement:49 - stmt in da block: System.Console.WriteLine("Hello, World!");
2014-06-18 00:37:12 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:37:12 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:37:12 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:37:12 TRACE Expression:45 - Expression text: System
2014-06-18 00:37:12 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:37:12 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:37:12 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:37:12 TRACE Expression:45 - Expression text: Console
2014-06-18 00:37:12 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:37:12 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:37:12 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:37:12 TRACE Expression:45 - Expression text: WriteLine
2014-06-18 00:37:12 TRACE Expression:42 - Expression added: CHARACTER_LITERAL
2014-06-18 00:37:12 TRACE Expression:43 - Token: STRING_LITERAL
2014-06-18 00:37:12 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$1
2014-06-18 00:37:12 TRACE Expression:45 - Expression text: "Hello, World!"
2014-06-18 00:37:12 TRACE PostfixExpression:58 - Constructor call added: WriteLine("Hello, World!")
2014-06-18 00:37:12 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:37:12 TRACE Expression:43 - Token: '.'
2014-06-18 00:37:12 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:37:12 TRACE Expression:45 - Expression text: WriteLine("Hello, World!")
2014-06-18 00:37:12 TRACE PostfixExpression:58 - Constructor call added: Console.WriteLine("Hello, World!")
2014-06-18 00:37:12 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:37:12 TRACE Expression:43 - Token: '.'
2014-06-18 00:37:12 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:37:12 TRACE Expression:45 - Expression text: Console.WriteLine("Hello, World!")
2014-06-18 00:37:12 TRACE PostfixExpression:58 - Constructor call added: System.Console.WriteLine("Hello, World!")
2014-06-18 00:37:12 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:37:12 TRACE Expression:43 - Token: '.'
2014-06-18 00:37:12 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:37:12 TRACE Expression:45 - Expression text: System.Console.WriteLine("Hello, World!")
2014-06-18 00:37:12 TRACE CompoundStatement:49 - stmt in da block: a=6;
2014-06-18 00:37:12 TRACE Expression:42 - Expression added: ASSIGN
2014-06-18 00:37:12 TRACE Expression:43 - Token: '='
2014-06-18 00:37:12 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 00:37:12 TRACE Expression:45 - Expression text: a=6
2014-06-18 00:37:12 TRACE Expression:237 - int_visitLdcInsn: 555
2014-06-18 00:37:12 TRACE Expression:237 - int_visitLdcInsn: 1
2014-06-18 00:37:12 ERROR ErrorProcessor:14 - line 5: assertion failed: 3 != 1. Message: BinOp tst+1
2014-06-18 00:38:33 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 00:38:33 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 00:38:33 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 00:38:33 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 00:38:34 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 00:38:34 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst+1;publicstaticvoidMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 00:38:34 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@68,298:298='}',<40>,15:0]}
2014-06-18 00:38:34 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 00:38:34 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 00:38:34 TRACE ClassDef:55 - Class name: Test
2014-06-18 00:38:34 TRACE Variable:30 - Field/variable added: tst
2014-06-18 00:38:34 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:38:34 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:38:34 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:38:34 TRACE Expression:45 - Expression text: 555
2014-06-18 00:38:34 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 00:38:34 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:38:34 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:38:34 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:38:34 TRACE Expression:45 - Expression text: 1
2014-06-18 00:38:34 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 00:40:19 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 00:40:19 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 00:40:19 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 00:40:19 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 00:40:20 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 00:40:20 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst+1;publicstaticvoidMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 00:40:20 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@68,298:298='}',<40>,15:0]}
2014-06-18 00:40:20 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 00:40:20 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 00:40:20 TRACE ClassDef:55 - Class name: Test
2014-06-18 00:40:20 TRACE Variable:30 - Field/variable added: tst
2014-06-18 00:40:20 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:40:20 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:40:20 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:40:20 TRACE Expression:45 - Expression text: 555
2014-06-18 00:40:20 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 00:40:20 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:40:20 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:40:20 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:40:20 TRACE Expression:45 - Expression text: 1
2014-06-18 00:40:20 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 00:40:20 TRACE Expression:42 - Expression added: PLUS
2014-06-18 00:40:20 TRACE Expression:43 - Token: '+'
2014-06-18 00:40:20 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 00:40:20 TRACE Expression:45 - Expression text: tst+1
2014-06-18 00:40:20 TRACE ClassMethod:39 - Method added: Main
2014-06-18 00:40:20 TRACE Variable:30 - Field/variable added: s
2014-06-18 00:40:20 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 00:40:20 TRACE Variable:30 - Field/variable added: a
2014-06-18 00:40:20 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:40:20 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:40:20 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:40:20 TRACE Expression:45 - Expression text: 5
2014-06-18 00:40:20 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 00:40:20 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 00:40:20 TRACE ConstructorExpression:26 - Constructor call added: newint[1,2][3]
2014-06-18 00:40:20 TRACE Expression:42 - Expression added: NEW
2014-06-18 00:40:20 TRACE Expression:43 - Token: 'new'
2014-06-18 00:40:20 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 00:40:20 TRACE Expression:45 - Expression text: newint[1,2][3]
2014-06-18 00:40:20 TRACE CompoundStatement:49 - stmt in da block: System.Console.WriteLine("Hello, World!");
2014-06-18 00:40:20 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:40:20 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:40:20 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:40:20 TRACE Expression:45 - Expression text: System
2014-06-18 00:40:20 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:40:20 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:40:20 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:40:20 TRACE Expression:45 - Expression text: Console
2014-06-18 00:40:20 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:40:20 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:40:20 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:40:20 TRACE Expression:45 - Expression text: WriteLine
2014-06-18 00:40:20 TRACE Expression:42 - Expression added: CHARACTER_LITERAL
2014-06-18 00:40:20 TRACE Expression:43 - Token: STRING_LITERAL
2014-06-18 00:40:20 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$1
2014-06-18 00:40:20 TRACE Expression:45 - Expression text: "Hello, World!"
2014-06-18 00:40:20 TRACE PostfixExpression:58 - Constructor call added: WriteLine("Hello, World!")
2014-06-18 00:40:20 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:40:20 TRACE Expression:43 - Token: '.'
2014-06-18 00:40:20 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:40:20 TRACE Expression:45 - Expression text: WriteLine("Hello, World!")
2014-06-18 00:40:20 TRACE PostfixExpression:58 - Constructor call added: Console.WriteLine("Hello, World!")
2014-06-18 00:40:20 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:40:20 TRACE Expression:43 - Token: '.'
2014-06-18 00:40:20 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:40:20 TRACE Expression:45 - Expression text: Console.WriteLine("Hello, World!")
2014-06-18 00:40:20 TRACE PostfixExpression:58 - Constructor call added: System.Console.WriteLine("Hello, World!")
2014-06-18 00:40:20 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:40:20 TRACE Expression:43 - Token: '.'
2014-06-18 00:40:20 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:40:20 TRACE Expression:45 - Expression text: System.Console.WriteLine("Hello, World!")
2014-06-18 00:40:20 TRACE CompoundStatement:49 - stmt in da block: a=6;
2014-06-18 00:40:20 TRACE Expression:42 - Expression added: ASSIGN
2014-06-18 00:40:20 TRACE Expression:43 - Token: '='
2014-06-18 00:40:20 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 00:40:20 TRACE Expression:45 - Expression text: a=6
2014-06-18 00:40:20 TRACE Expression:237 - int_visitLdcInsn: 555
2014-06-18 00:40:20 TRACE Expression:237 - int_visitLdcInsn: 1
2014-06-18 00:40:20 ERROR ErrorProcessor:14 - line 5: assertion failed: 3 != 1. Message: BinOp tst+1
2014-06-18 00:41:44 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 00:41:44 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 00:41:44 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 00:41:44 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 00:41:44 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 00:41:44 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst+1;publicstaticvoidMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 00:41:44 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@68,298:298='}',<40>,15:0]}
2014-06-18 00:41:44 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 00:41:44 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 00:41:44 TRACE ClassDef:55 - Class name: Test
2014-06-18 00:41:44 TRACE Variable:30 - Field/variable added: tst
2014-06-18 00:42:58 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 00:42:58 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 00:42:58 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 00:42:58 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 00:42:58 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 00:42:58 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst+1;publicstaticvoidMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 00:42:58 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@68,298:298='}',<40>,15:0]}
2014-06-18 00:42:58 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 00:42:58 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 00:42:58 TRACE ClassDef:55 - Class name: Test
2014-06-18 00:42:58 TRACE Variable:30 - Field/variable added: tst
2014-06-18 00:43:21 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 00:43:21 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 00:43:21 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 00:43:21 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 00:43:21 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 00:43:21 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst+1;publicstaticvoidMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 00:43:21 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@68,298:298='}',<40>,15:0]}
2014-06-18 00:43:21 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 00:43:21 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 00:43:21 TRACE ClassDef:55 - Class name: Test
2014-06-18 00:43:21 TRACE Variable:30 - Field/variable added: tst
2014-06-18 00:44:55 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 00:44:55 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 00:44:55 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 00:44:55 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 00:44:56 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 00:44:56 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst+1;publicstaticvoidMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 00:44:56 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@68,298:298='}',<40>,15:0]}
2014-06-18 00:44:56 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 00:44:56 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 00:44:56 TRACE ClassDef:55 - Class name: Test
2014-06-18 00:44:56 TRACE Variable:30 - Field/variable added: tst
2014-06-18 00:45:09 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 00:45:09 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 00:45:09 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 00:45:09 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 00:45:10 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 00:45:10 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst+1;publicstaticvoidMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 00:45:10 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@68,298:298='}',<40>,15:0]}
2014-06-18 00:45:10 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 00:45:10 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 00:45:10 TRACE ClassDef:55 - Class name: Test
2014-06-18 00:45:10 TRACE Variable:30 - Field/variable added: tst
2014-06-18 00:45:34 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 00:45:34 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 00:45:34 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 00:45:34 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 00:45:34 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 00:45:34 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst+1;publicstaticvoidMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 00:45:34 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@68,298:298='}',<40>,15:0]}
2014-06-18 00:45:34 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 00:45:34 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 00:45:34 TRACE ClassDef:55 - Class name: Test
2014-06-18 00:45:34 TRACE Variable:30 - Field/variable added: tst
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 555assignment_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 555conditional_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 555logical_or_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 555logical_and_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 555inclusive_or_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 555exclusive_or_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 555and_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 555equality_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 555relational_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 555shift_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 555additive_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 555multiplicative_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 555unary_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 555postfix_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 555primary_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 555constant
2014-06-18 00:45:34 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:45:34 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:45:34 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:45:34 TRACE Expression:45 - Expression text: 555
2014-06-18 00:45:34 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 1assignment_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 1conditional_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 1logical_or_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 1logical_and_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 1inclusive_or_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 1exclusive_or_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 1and_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 1equality_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 1relational_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 1shift_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 1additive_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 1multiplicative_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 1unary_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 1postfix_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 1primary_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 1constant
2014-06-18 00:45:34 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:45:34 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:45:34 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:45:34 TRACE Expression:45 - Expression text: 1
2014-06-18 00:45:34 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. tst+1assignment_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. tst+1conditional_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. tst+1logical_or_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. tst+1logical_and_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. tst+1inclusive_or_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. tst+1exclusive_or_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. tst+1and_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. tst+1equality_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. tst+1relational_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. tst+1shift_expression
2014-06-18 00:45:34 TRACE Expression:42 - Expression added: PLUS
2014-06-18 00:45:34 TRACE Expression:43 - Token: '+'
2014-06-18 00:45:34 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 00:45:34 TRACE Expression:45 - Expression text: tst+1
2014-06-18 00:45:34 TRACE ClassMethod:39 - Method added: Main
2014-06-18 00:45:34 TRACE Variable:30 - Field/variable added: s
2014-06-18 00:45:34 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 00:45:34 TRACE Variable:30 - Field/variable added: a
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 5assignment_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 5conditional_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 5logical_or_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 5logical_and_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 5inclusive_or_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 5exclusive_or_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 5and_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 5equality_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 5relational_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 5shift_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 5additive_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 5multiplicative_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 5unary_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 5postfix_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 5primary_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. 5constant
2014-06-18 00:45:34 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:45:34 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:45:34 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:45:34 TRACE Expression:45 - Expression text: 5
2014-06-18 00:45:34 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 00:45:34 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. newint[1,2][3]assignment_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. newint[1,2][3]conditional_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. newint[1,2][3]logical_or_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. newint[1,2][3]logical_and_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. newint[1,2][3]inclusive_or_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. newint[1,2][3]exclusive_or_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. newint[1,2][3]and_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. newint[1,2][3]equality_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. newint[1,2][3]relational_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. newint[1,2][3]shift_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. newint[1,2][3]additive_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. newint[1,2][3]multiplicative_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. newint[1,2][3]unary_expression
2014-06-18 00:45:34 TRACE ConstructorExpression:26 - Constructor call added: newint[1,2][3]
2014-06-18 00:45:34 TRACE Expression:42 - Expression added: NEW
2014-06-18 00:45:34 TRACE Expression:43 - Token: 'new'
2014-06-18 00:45:34 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 00:45:34 TRACE Expression:45 - Expression text: newint[1,2][3]
2014-06-18 00:45:34 TRACE CompoundStatement:49 - stmt in da block: System.Console.WriteLine("Hello, World!");
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. System.Console.WriteLine("Hello, World!")assignment_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. System.Console.WriteLine("Hello, World!")conditional_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. System.Console.WriteLine("Hello, World!")logical_or_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. System.Console.WriteLine("Hello, World!")logical_and_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. System.Console.WriteLine("Hello, World!")inclusive_or_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. System.Console.WriteLine("Hello, World!")exclusive_or_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. System.Console.WriteLine("Hello, World!")and_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. System.Console.WriteLine("Hello, World!")equality_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. System.Console.WriteLine("Hello, World!")relational_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. System.Console.WriteLine("Hello, World!")shift_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. System.Console.WriteLine("Hello, World!")additive_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. System.Console.WriteLine("Hello, World!")multiplicative_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. System.Console.WriteLine("Hello, World!")unary_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. Systemprimary_expression
2014-06-18 00:45:34 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:45:34 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:45:34 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:45:34 TRACE Expression:45 - Expression text: System
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. Consoleprimary_expression
2014-06-18 00:45:34 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:45:34 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:45:34 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:45:34 TRACE Expression:45 - Expression text: Console
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. WriteLineprimary_expression
2014-06-18 00:45:34 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 00:45:34 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 00:45:34 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 00:45:34 TRACE Expression:45 - Expression text: WriteLine
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. "Hello, World!"assignment_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. "Hello, World!"conditional_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. "Hello, World!"logical_or_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. "Hello, World!"logical_and_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. "Hello, World!"inclusive_or_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. "Hello, World!"exclusive_or_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. "Hello, World!"and_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. "Hello, World!"equality_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. "Hello, World!"relational_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. "Hello, World!"shift_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. "Hello, World!"additive_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. "Hello, World!"multiplicative_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. "Hello, World!"unary_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. "Hello, World!"postfix_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. "Hello, World!"primary_expression
2014-06-18 00:45:34 WARN  Expression:119 - OneChild tree. "Hello, World!"constant
2014-06-18 00:45:34 TRACE Expression:42 - Expression added: CHARACTER_LITERAL
2014-06-18 00:45:34 TRACE Expression:43 - Token: STRING_LITERAL
2014-06-18 00:45:34 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$1
2014-06-18 00:45:34 TRACE Expression:45 - Expression text: "Hello, World!"
2014-06-18 00:45:34 TRACE PostfixExpression:58 - Constructor call added: WriteLine("Hello, World!")
2014-06-18 00:45:34 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:45:34 TRACE Expression:43 - Token: '.'
2014-06-18 00:45:34 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:45:34 TRACE Expression:45 - Expression text: WriteLine("Hello, World!")
2014-06-18 00:45:34 TRACE PostfixExpression:58 - Constructor call added: Console.WriteLine("Hello, World!")
2014-06-18 00:45:34 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:45:34 TRACE Expression:43 - Token: '.'
2014-06-18 00:45:34 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:45:34 TRACE Expression:45 - Expression text: Console.WriteLine("Hello, World!")
2014-06-18 00:45:34 TRACE PostfixExpression:58 - Constructor call added: System.Console.WriteLine("Hello, World!")
2014-06-18 00:45:34 TRACE Expression:42 - Expression added: DOT
2014-06-18 00:45:34 TRACE Expression:43 - Token: '.'
2014-06-18 00:45:34 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 00:45:34 TRACE Expression:45 - Expression text: System.Console.WriteLine("Hello, World!")
2014-06-18 00:45:34 TRACE CompoundStatement:49 - stmt in da block: a=6;
2014-06-18 00:45:34 TRACE Expression:42 - Expression added: ASSIGN
2014-06-18 00:45:34 TRACE Expression:43 - Token: '='
2014-06-18 00:45:34 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 00:45:34 TRACE Expression:45 - Expression text: a=6
2014-06-18 00:45:34 TRACE Expression:239 - int_visitLdcInsn: 555
2014-06-18 00:45:34 TRACE Expression:239 - int_visitLdcInsn: 1
2014-06-18 00:45:34 ERROR ErrorProcessor:14 - line 5: assertion failed: 3 != 1. Message: BinOp tst+1
2014-06-18 00:48:24 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 00:48:24 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 00:48:24 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 00:48:24 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 00:48:25 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 00:48:25 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst+1;publicstaticvoidMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 00:48:25 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@68,298:298='}',<40>,15:0]}
2014-06-18 00:48:25 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 00:48:25 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 00:48:25 TRACE ClassDef:55 - Class name: Test
2014-06-18 00:48:25 TRACE Variable:30 - Field/variable added: tst
2014-06-18 00:48:25 WARN  Expression:119 - OneChild tree. 555assignment_expression
2014-06-18 00:48:25 WARN  Expression:119 - OneChild tree. 555conditional_expression
2014-06-18 00:48:25 WARN  Expression:119 - OneChild tree. 555logical_or_expression
2014-06-18 00:48:25 WARN  Expression:119 - OneChild tree. 555logical_and_expression
2014-06-18 00:48:25 WARN  Expression:119 - OneChild tree. 555inclusive_or_expression
2014-06-18 00:48:25 WARN  Expression:119 - OneChild tree. 555exclusive_or_expression
2014-06-18 00:48:25 WARN  Expression:119 - OneChild tree. 555and_expression
2014-06-18 00:48:25 WARN  Expression:119 - OneChild tree. 555equality_expression
2014-06-18 00:48:25 WARN  Expression:119 - OneChild tree. 555relational_expression
2014-06-18 00:48:25 WARN  Expression:119 - OneChild tree. 555shift_expression
2014-06-18 00:48:25 WARN  Expression:119 - OneChild tree. 555additive_expression
2014-06-18 00:48:25 WARN  Expression:119 - OneChild tree. 555multiplicative_expression
2014-06-18 00:48:25 WARN  Expression:119 - OneChild tree. 555unary_expression
2014-06-18 00:48:25 WARN  Expression:119 - OneChild tree. 555postfix_expression
2014-06-18 00:48:25 WARN  Expression:119 - OneChild tree. 555primary_expression
2014-06-18 00:48:25 WARN  Expression:119 - OneChild tree. 555constant
2014-06-18 00:48:25 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:48:25 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:48:25 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:48:25 TRACE Expression:45 - Expression text: 555
2014-06-18 00:48:25 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 00:48:25 WARN  Expression:119 - OneChild tree. 1assignment_expression
2014-06-18 00:48:25 WARN  Expression:119 - OneChild tree. 1conditional_expression
2014-06-18 00:48:25 WARN  Expression:119 - OneChild tree. 1logical_or_expression
2014-06-18 00:48:25 WARN  Expression:119 - OneChild tree. 1logical_and_expression
2014-06-18 00:48:25 WARN  Expression:119 - OneChild tree. 1inclusive_or_expression
2014-06-18 00:48:25 WARN  Expression:119 - OneChild tree. 1exclusive_or_expression
2014-06-18 00:48:25 WARN  Expression:119 - OneChild tree. 1and_expression
2014-06-18 00:48:25 WARN  Expression:119 - OneChild tree. 1equality_expression
2014-06-18 00:48:25 WARN  Expression:119 - OneChild tree. 1relational_expression
2014-06-18 00:48:25 WARN  Expression:119 - OneChild tree. 1shift_expression
2014-06-18 00:48:25 WARN  Expression:119 - OneChild tree. 1additive_expression
2014-06-18 00:48:25 WARN  Expression:119 - OneChild tree. 1multiplicative_expression
2014-06-18 00:48:25 WARN  Expression:119 - OneChild tree. 1unary_expression
2014-06-18 00:48:25 WARN  Expression:119 - OneChild tree. 1postfix_expression
2014-06-18 00:48:25 WARN  Expression:119 - OneChild tree. 1primary_expression
2014-06-18 00:48:25 WARN  Expression:119 - OneChild tree. 1constant
2014-06-18 00:48:25 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:48:25 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:48:25 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:48:25 TRACE Expression:45 - Expression text: 1
2014-06-18 00:48:25 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 00:48:25 WARN  Expression:119 - OneChild tree. tst+1assignment_expression
2014-06-18 00:48:25 WARN  Expression:119 - OneChild tree. tst+1conditional_expression
2014-06-18 00:48:25 WARN  Expression:119 - OneChild tree. tst+1logical_or_expression
2014-06-18 00:48:25 WARN  Expression:119 - OneChild tree. tst+1logical_and_expression
2014-06-18 00:48:25 WARN  Expression:119 - OneChild tree. tst+1inclusive_or_expression
2014-06-18 00:48:25 WARN  Expression:119 - OneChild tree. tst+1exclusive_or_expression
2014-06-18 00:48:25 WARN  Expression:119 - OneChild tree. tst+1and_expression
2014-06-18 00:48:25 WARN  Expression:119 - OneChild tree. tst+1equality_expression
2014-06-18 00:48:25 WARN  Expression:119 - OneChild tree. tst+1relational_expression
2014-06-18 00:48:25 WARN  Expression:119 - OneChild tree. tst+1shift_expression
2014-06-18 00:48:41 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 00:48:41 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 00:48:41 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 00:48:41 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 00:48:42 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 00:48:42 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst+1;publicstaticvoidMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 00:48:42 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@68,298:298='}',<40>,15:0]}
2014-06-18 00:48:42 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 00:48:42 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 00:48:42 TRACE ClassDef:55 - Class name: Test
2014-06-18 00:48:42 TRACE Variable:30 - Field/variable added: tst
2014-06-18 00:48:42 WARN  Expression:119 - OneChild tree. 555assignment_expression
2014-06-18 00:48:42 WARN  Expression:119 - OneChild tree. 555conditional_expression
2014-06-18 00:48:42 WARN  Expression:119 - OneChild tree. 555logical_or_expression
2014-06-18 00:48:42 WARN  Expression:119 - OneChild tree. 555logical_and_expression
2014-06-18 00:48:42 WARN  Expression:119 - OneChild tree. 555inclusive_or_expression
2014-06-18 00:48:42 WARN  Expression:119 - OneChild tree. 555exclusive_or_expression
2014-06-18 00:48:42 WARN  Expression:119 - OneChild tree. 555and_expression
2014-06-18 00:48:42 WARN  Expression:119 - OneChild tree. 555equality_expression
2014-06-18 00:48:42 WARN  Expression:119 - OneChild tree. 555relational_expression
2014-06-18 00:48:42 WARN  Expression:119 - OneChild tree. 555shift_expression
2014-06-18 00:48:42 WARN  Expression:119 - OneChild tree. 555additive_expression
2014-06-18 00:48:42 WARN  Expression:119 - OneChild tree. 555multiplicative_expression
2014-06-18 00:48:42 WARN  Expression:119 - OneChild tree. 555unary_expression
2014-06-18 00:48:42 WARN  Expression:119 - OneChild tree. 555postfix_expression
2014-06-18 00:48:42 WARN  Expression:119 - OneChild tree. 555primary_expression
2014-06-18 00:48:42 WARN  Expression:119 - OneChild tree. 555constant
2014-06-18 00:48:42 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:48:42 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:48:42 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:48:42 TRACE Expression:45 - Expression text: 555
2014-06-18 00:48:42 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 00:48:42 WARN  Expression:119 - OneChild tree. 1assignment_expression
2014-06-18 00:48:42 WARN  Expression:119 - OneChild tree. 1conditional_expression
2014-06-18 00:48:42 WARN  Expression:119 - OneChild tree. 1logical_or_expression
2014-06-18 00:48:42 WARN  Expression:119 - OneChild tree. 1logical_and_expression
2014-06-18 00:48:42 WARN  Expression:119 - OneChild tree. 1inclusive_or_expression
2014-06-18 00:48:42 WARN  Expression:119 - OneChild tree. 1exclusive_or_expression
2014-06-18 00:48:42 WARN  Expression:119 - OneChild tree. 1and_expression
2014-06-18 00:48:42 WARN  Expression:119 - OneChild tree. 1equality_expression
2014-06-18 00:48:42 WARN  Expression:119 - OneChild tree. 1relational_expression
2014-06-18 00:48:42 WARN  Expression:119 - OneChild tree. 1shift_expression
2014-06-18 00:48:42 WARN  Expression:119 - OneChild tree. 1additive_expression
2014-06-18 00:48:42 WARN  Expression:119 - OneChild tree. 1multiplicative_expression
2014-06-18 00:48:42 WARN  Expression:119 - OneChild tree. 1unary_expression
2014-06-18 00:48:42 WARN  Expression:119 - OneChild tree. 1postfix_expression
2014-06-18 00:48:42 WARN  Expression:119 - OneChild tree. 1primary_expression
2014-06-18 00:48:42 WARN  Expression:119 - OneChild tree. 1constant
2014-06-18 00:48:42 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 00:48:42 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 00:48:42 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 00:48:42 TRACE Expression:45 - Expression text: 1
2014-06-18 00:48:42 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 00:48:42 WARN  Expression:119 - OneChild tree. tst+1assignment_expression
2014-06-18 00:48:42 WARN  Expression:119 - OneChild tree. tst+1conditional_expression
2014-06-18 00:48:42 WARN  Expression:119 - OneChild tree. tst+1logical_or_expression
2014-06-18 00:48:42 WARN  Expression:119 - OneChild tree. tst+1logical_and_expression
2014-06-18 00:48:42 WARN  Expression:119 - OneChild tree. tst+1inclusive_or_expression
2014-06-18 00:48:42 WARN  Expression:119 - OneChild tree. tst+1exclusive_or_expression
2014-06-18 00:48:42 WARN  Expression:119 - OneChild tree. tst+1and_expression
2014-06-18 00:48:42 WARN  Expression:119 - OneChild tree. tst+1equality_expression
2014-06-18 00:48:42 WARN  Expression:119 - OneChild tree. tst+1relational_expression
2014-06-18 00:48:42 WARN  Expression:119 - OneChild tree. tst+1shift_expression
2014-06-18 01:05:08 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 01:05:08 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 01:05:08 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 01:05:08 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 01:05:09 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 01:05:09 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst+1;publicstaticvoidMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 01:05:09 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@68,298:298='}',<40>,15:0]}
2014-06-18 01:05:09 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 01:05:09 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 01:05:09 TRACE ClassDef:55 - Class name: Test
2014-06-18 01:05:09 TRACE Variable:30 - Field/variable added: tst
2014-06-18 01:05:09 WARN  Expression:119 - OneChild tree. 555assignment_expression
2014-06-18 01:05:09 WARN  Expression:119 - OneChild tree. 555conditional_expression
2014-06-18 01:05:09 WARN  Expression:119 - OneChild tree. 555logical_or_expression
2014-06-18 01:05:09 WARN  Expression:119 - OneChild tree. 555logical_and_expression
2014-06-18 01:05:09 WARN  Expression:119 - OneChild tree. 555inclusive_or_expression
2014-06-18 01:05:09 WARN  Expression:119 - OneChild tree. 555exclusive_or_expression
2014-06-18 01:05:09 WARN  Expression:119 - OneChild tree. 555and_expression
2014-06-18 01:05:09 WARN  Expression:119 - OneChild tree. 555equality_expression
2014-06-18 01:05:09 WARN  Expression:119 - OneChild tree. 555relational_expression
2014-06-18 01:05:09 WARN  Expression:119 - OneChild tree. 555shift_expression
2014-06-18 01:05:09 WARN  Expression:119 - OneChild tree. 555additive_expression
2014-06-18 01:05:09 WARN  Expression:119 - OneChild tree. 555multiplicative_expression
2014-06-18 01:05:09 WARN  Expression:119 - OneChild tree. 555unary_expression
2014-06-18 01:05:09 WARN  Expression:119 - OneChild tree. 555postfix_expression
2014-06-18 01:05:09 WARN  Expression:119 - OneChild tree. 555primary_expression
2014-06-18 01:05:09 WARN  Expression:119 - OneChild tree. 555constant
2014-06-18 01:05:09 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:05:09 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:05:09 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:05:09 TRACE Expression:45 - Expression text: 555
2014-06-18 01:05:09 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 01:05:09 WARN  Expression:119 - OneChild tree. 1assignment_expression
2014-06-18 01:05:09 WARN  Expression:119 - OneChild tree. 1conditional_expression
2014-06-18 01:05:09 WARN  Expression:119 - OneChild tree. 1logical_or_expression
2014-06-18 01:05:09 WARN  Expression:119 - OneChild tree. 1logical_and_expression
2014-06-18 01:05:09 WARN  Expression:119 - OneChild tree. 1inclusive_or_expression
2014-06-18 01:05:09 WARN  Expression:119 - OneChild tree. 1exclusive_or_expression
2014-06-18 01:05:09 WARN  Expression:119 - OneChild tree. 1and_expression
2014-06-18 01:05:09 WARN  Expression:119 - OneChild tree. 1equality_expression
2014-06-18 01:05:09 WARN  Expression:119 - OneChild tree. 1relational_expression
2014-06-18 01:05:09 WARN  Expression:119 - OneChild tree. 1shift_expression
2014-06-18 01:05:09 WARN  Expression:119 - OneChild tree. 1additive_expression
2014-06-18 01:05:09 WARN  Expression:119 - OneChild tree. 1multiplicative_expression
2014-06-18 01:05:09 WARN  Expression:119 - OneChild tree. 1unary_expression
2014-06-18 01:05:09 WARN  Expression:119 - OneChild tree. 1postfix_expression
2014-06-18 01:05:09 WARN  Expression:119 - OneChild tree. 1primary_expression
2014-06-18 01:05:09 WARN  Expression:119 - OneChild tree. 1constant
2014-06-18 01:05:09 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:05:09 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:05:09 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:05:09 TRACE Expression:45 - Expression text: 1
2014-06-18 01:05:09 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 01:05:09 WARN  Expression:119 - OneChild tree. tst+1assignment_expression
2014-06-18 01:05:09 WARN  Expression:119 - OneChild tree. tst+1conditional_expression
2014-06-18 01:05:09 WARN  Expression:119 - OneChild tree. tst+1logical_or_expression
2014-06-18 01:05:09 WARN  Expression:119 - OneChild tree. tst+1logical_and_expression
2014-06-18 01:05:09 WARN  Expression:119 - OneChild tree. tst+1inclusive_or_expression
2014-06-18 01:05:09 WARN  Expression:119 - OneChild tree. tst+1exclusive_or_expression
2014-06-18 01:05:09 WARN  Expression:119 - OneChild tree. tst+1and_expression
2014-06-18 01:05:09 WARN  Expression:119 - OneChild tree. tst+1equality_expression
2014-06-18 01:05:09 WARN  Expression:119 - OneChild tree. tst+1relational_expression
2014-06-18 01:05:09 WARN  Expression:119 - OneChild tree. tst+1shift_expression
2014-06-18 01:05:23 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 01:05:23 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 01:05:23 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 01:05:23 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 01:05:24 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 01:05:24 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst+1;publicstaticvoidMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 01:05:24 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@68,298:298='}',<40>,15:0]}
2014-06-18 01:05:24 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 01:05:24 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 01:05:24 TRACE ClassDef:55 - Class name: Test
2014-06-18 01:05:24 TRACE Variable:30 - Field/variable added: tst
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 555assignment_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 555conditional_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 555logical_or_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 555logical_and_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 555inclusive_or_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 555exclusive_or_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 555and_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 555equality_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 555relational_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 555shift_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 555additive_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 555multiplicative_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 555unary_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 555postfix_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 555primary_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 555constant
2014-06-18 01:05:24 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:05:24 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:05:24 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:05:24 TRACE Expression:45 - Expression text: 555
2014-06-18 01:05:24 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 1assignment_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 1conditional_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 1logical_or_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 1logical_and_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 1inclusive_or_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 1exclusive_or_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 1and_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 1equality_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 1relational_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 1shift_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 1additive_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 1multiplicative_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 1unary_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 1postfix_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 1primary_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 1constant
2014-06-18 01:05:24 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:05:24 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:05:24 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:05:24 TRACE Expression:45 - Expression text: 1
2014-06-18 01:05:24 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. tst+1assignment_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. tst+1conditional_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. tst+1logical_or_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. tst+1logical_and_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. tst+1inclusive_or_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. tst+1exclusive_or_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. tst+1and_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. tst+1equality_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. tst+1relational_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. tst+1shift_expression
2014-06-18 01:05:24 TRACE Expression:42 - Expression added: PLUS
2014-06-18 01:05:24 TRACE Expression:43 - Token: '+'
2014-06-18 01:05:24 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 01:05:24 TRACE Expression:45 - Expression text: tst+1
2014-06-18 01:05:24 TRACE ClassMethod:39 - Method added: Main
2014-06-18 01:05:24 TRACE Variable:30 - Field/variable added: s
2014-06-18 01:05:24 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 01:05:24 TRACE Variable:30 - Field/variable added: a
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 5assignment_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 5conditional_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 5logical_or_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 5logical_and_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 5inclusive_or_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 5exclusive_or_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 5and_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 5equality_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 5relational_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 5shift_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 5additive_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 5multiplicative_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 5unary_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 5postfix_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 5primary_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. 5constant
2014-06-18 01:05:24 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:05:24 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:05:24 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:05:24 TRACE Expression:45 - Expression text: 5
2014-06-18 01:05:24 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 01:05:24 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. newint[1,2][3]assignment_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. newint[1,2][3]conditional_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. newint[1,2][3]logical_or_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. newint[1,2][3]logical_and_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. newint[1,2][3]inclusive_or_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. newint[1,2][3]exclusive_or_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. newint[1,2][3]and_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. newint[1,2][3]equality_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. newint[1,2][3]relational_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. newint[1,2][3]shift_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. newint[1,2][3]additive_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. newint[1,2][3]multiplicative_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. newint[1,2][3]unary_expression
2014-06-18 01:05:24 TRACE ConstructorExpression:19 - Constructor call added: newint[1,2][3]
2014-06-18 01:05:24 TRACE Expression:42 - Expression added: NEW
2014-06-18 01:05:24 TRACE Expression:43 - Token: 'new'
2014-06-18 01:05:24 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 01:05:24 TRACE Expression:45 - Expression text: newint[1,2][3]
2014-06-18 01:05:24 TRACE CompoundStatement:49 - stmt in da block: System.Console.WriteLine("Hello, World!");
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. System.Console.WriteLine("Hello, World!")assignment_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. System.Console.WriteLine("Hello, World!")conditional_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. System.Console.WriteLine("Hello, World!")logical_or_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. System.Console.WriteLine("Hello, World!")logical_and_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. System.Console.WriteLine("Hello, World!")inclusive_or_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. System.Console.WriteLine("Hello, World!")exclusive_or_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. System.Console.WriteLine("Hello, World!")and_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. System.Console.WriteLine("Hello, World!")equality_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. System.Console.WriteLine("Hello, World!")relational_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. System.Console.WriteLine("Hello, World!")shift_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. System.Console.WriteLine("Hello, World!")additive_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. System.Console.WriteLine("Hello, World!")multiplicative_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. System.Console.WriteLine("Hello, World!")unary_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. Systemprimary_expression
2014-06-18 01:05:24 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:05:24 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:05:24 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:05:24 TRACE Expression:45 - Expression text: System
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. Consoleprimary_expression
2014-06-18 01:05:24 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:05:24 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:05:24 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:05:24 TRACE Expression:45 - Expression text: Console
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. WriteLineprimary_expression
2014-06-18 01:05:24 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:05:24 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:05:24 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:05:24 TRACE Expression:45 - Expression text: WriteLine
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. "Hello, World!"assignment_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. "Hello, World!"conditional_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. "Hello, World!"logical_or_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. "Hello, World!"logical_and_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. "Hello, World!"inclusive_or_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. "Hello, World!"exclusive_or_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. "Hello, World!"and_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. "Hello, World!"equality_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. "Hello, World!"relational_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. "Hello, World!"shift_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. "Hello, World!"additive_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. "Hello, World!"multiplicative_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. "Hello, World!"unary_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. "Hello, World!"postfix_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. "Hello, World!"primary_expression
2014-06-18 01:05:24 WARN  Expression:119 - OneChild tree. "Hello, World!"constant
2014-06-18 01:05:24 TRACE Expression:42 - Expression added: CHARACTER_LITERAL
2014-06-18 01:05:24 TRACE Expression:43 - Token: STRING_LITERAL
2014-06-18 01:05:24 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$1
2014-06-18 01:05:24 TRACE Expression:45 - Expression text: "Hello, World!"
2014-06-18 01:05:24 TRACE PostfixExpression:50 - Constructor call added: WriteLine("Hello, World!")
2014-06-18 01:05:24 TRACE Expression:42 - Expression added: DOT
2014-06-18 01:05:24 TRACE Expression:43 - Token: '.'
2014-06-18 01:05:24 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 01:05:24 TRACE Expression:45 - Expression text: WriteLine("Hello, World!")
2014-06-18 01:05:24 TRACE PostfixExpression:50 - Constructor call added: Console.WriteLine("Hello, World!")
2014-06-18 01:05:24 TRACE Expression:42 - Expression added: DOT
2014-06-18 01:05:24 TRACE Expression:43 - Token: '.'
2014-06-18 01:05:24 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 01:05:24 TRACE Expression:45 - Expression text: Console.WriteLine("Hello, World!")
2014-06-18 01:05:24 TRACE PostfixExpression:50 - Constructor call added: System.Console.WriteLine("Hello, World!")
2014-06-18 01:05:24 TRACE Expression:42 - Expression added: DOT
2014-06-18 01:05:24 TRACE Expression:43 - Token: '.'
2014-06-18 01:05:24 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 01:05:24 TRACE Expression:45 - Expression text: System.Console.WriteLine("Hello, World!")
2014-06-18 01:05:24 TRACE CompoundStatement:49 - stmt in da block: a=6;
2014-06-18 01:05:24 TRACE Expression:42 - Expression added: ASSIGN
2014-06-18 01:05:24 TRACE Expression:43 - Token: '='
2014-06-18 01:05:24 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 01:05:24 TRACE Expression:45 - Expression text: a=6
2014-06-18 01:05:24 TRACE Expression:239 - int_visitLdcInsn: 555
2014-06-18 01:05:24 TRACE Expression:239 - int_visitLdcInsn: 1
2014-06-18 01:05:24 ERROR ErrorProcessor:14 - line 5: assertion failed: 3 != 2. Message: BinOp tst+1
2014-06-18 01:05:58 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 01:05:58 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 01:05:58 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 01:05:58 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 01:05:59 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 01:05:59 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst+1;publicstaticvoidMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 01:05:59 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@68,298:298='}',<40>,15:0]}
2014-06-18 01:05:59 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 01:05:59 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 01:05:59 TRACE ClassDef:55 - Class name: Test
2014-06-18 01:05:59 TRACE Variable:30 - Field/variable added: tst
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 555assignment_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 555conditional_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 555logical_or_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 555logical_and_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 555inclusive_or_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 555exclusive_or_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 555and_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 555equality_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 555relational_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 555shift_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 555additive_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 555multiplicative_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 555unary_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 555postfix_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 555primary_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 555constant
2014-06-18 01:05:59 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:05:59 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:05:59 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:05:59 TRACE Expression:45 - Expression text: 555
2014-06-18 01:05:59 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 1assignment_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 1conditional_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 1logical_or_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 1logical_and_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 1inclusive_or_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 1exclusive_or_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 1and_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 1equality_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 1relational_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 1shift_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 1additive_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 1multiplicative_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 1unary_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 1postfix_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 1primary_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 1constant
2014-06-18 01:05:59 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:05:59 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:05:59 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:05:59 TRACE Expression:45 - Expression text: 1
2014-06-18 01:05:59 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. tst+1assignment_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. tst+1conditional_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. tst+1logical_or_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. tst+1logical_and_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. tst+1inclusive_or_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. tst+1exclusive_or_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. tst+1and_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. tst+1equality_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. tst+1relational_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. tst+1shift_expression
2014-06-18 01:05:59 TRACE Expression:42 - Expression added: PLUS
2014-06-18 01:05:59 TRACE Expression:43 - Token: '+'
2014-06-18 01:05:59 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 01:05:59 TRACE Expression:45 - Expression text: tst+1
2014-06-18 01:05:59 TRACE ClassMethod:39 - Method added: Main
2014-06-18 01:05:59 TRACE Variable:30 - Field/variable added: s
2014-06-18 01:05:59 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 01:05:59 TRACE Variable:30 - Field/variable added: a
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 5assignment_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 5conditional_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 5logical_or_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 5logical_and_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 5inclusive_or_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 5exclusive_or_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 5and_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 5equality_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 5relational_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 5shift_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 5additive_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 5multiplicative_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 5unary_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 5postfix_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 5primary_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. 5constant
2014-06-18 01:05:59 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:05:59 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:05:59 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:05:59 TRACE Expression:45 - Expression text: 5
2014-06-18 01:05:59 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 01:05:59 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. newint[1,2][3]assignment_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. newint[1,2][3]conditional_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. newint[1,2][3]logical_or_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. newint[1,2][3]logical_and_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. newint[1,2][3]inclusive_or_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. newint[1,2][3]exclusive_or_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. newint[1,2][3]and_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. newint[1,2][3]equality_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. newint[1,2][3]relational_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. newint[1,2][3]shift_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. newint[1,2][3]additive_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. newint[1,2][3]multiplicative_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. newint[1,2][3]unary_expression
2014-06-18 01:05:59 TRACE ConstructorExpression:19 - Constructor call added: newint[1,2][3]
2014-06-18 01:05:59 TRACE Expression:42 - Expression added: NEW
2014-06-18 01:05:59 TRACE Expression:43 - Token: 'new'
2014-06-18 01:05:59 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 01:05:59 TRACE Expression:45 - Expression text: newint[1,2][3]
2014-06-18 01:05:59 TRACE CompoundStatement:49 - stmt in da block: System.Console.WriteLine("Hello, World!");
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. System.Console.WriteLine("Hello, World!")assignment_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. System.Console.WriteLine("Hello, World!")conditional_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. System.Console.WriteLine("Hello, World!")logical_or_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. System.Console.WriteLine("Hello, World!")logical_and_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. System.Console.WriteLine("Hello, World!")inclusive_or_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. System.Console.WriteLine("Hello, World!")exclusive_or_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. System.Console.WriteLine("Hello, World!")and_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. System.Console.WriteLine("Hello, World!")equality_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. System.Console.WriteLine("Hello, World!")relational_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. System.Console.WriteLine("Hello, World!")shift_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. System.Console.WriteLine("Hello, World!")additive_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. System.Console.WriteLine("Hello, World!")multiplicative_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. System.Console.WriteLine("Hello, World!")unary_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. Systemprimary_expression
2014-06-18 01:05:59 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:05:59 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:05:59 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:05:59 TRACE Expression:45 - Expression text: System
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. Consoleprimary_expression
2014-06-18 01:05:59 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:05:59 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:05:59 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:05:59 TRACE Expression:45 - Expression text: Console
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. WriteLineprimary_expression
2014-06-18 01:05:59 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:05:59 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:05:59 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:05:59 TRACE Expression:45 - Expression text: WriteLine
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. "Hello, World!"assignment_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. "Hello, World!"conditional_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. "Hello, World!"logical_or_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. "Hello, World!"logical_and_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. "Hello, World!"inclusive_or_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. "Hello, World!"exclusive_or_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. "Hello, World!"and_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. "Hello, World!"equality_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. "Hello, World!"relational_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. "Hello, World!"shift_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. "Hello, World!"additive_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. "Hello, World!"multiplicative_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. "Hello, World!"unary_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. "Hello, World!"postfix_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. "Hello, World!"primary_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. "Hello, World!"constant
2014-06-18 01:05:59 TRACE Expression:42 - Expression added: CHARACTER_LITERAL
2014-06-18 01:05:59 TRACE Expression:43 - Token: STRING_LITERAL
2014-06-18 01:05:59 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$1
2014-06-18 01:05:59 TRACE Expression:45 - Expression text: "Hello, World!"
2014-06-18 01:05:59 TRACE PostfixExpression:50 - Constructor call added: WriteLine("Hello, World!")
2014-06-18 01:05:59 TRACE Expression:42 - Expression added: DOT
2014-06-18 01:05:59 TRACE Expression:43 - Token: '.'
2014-06-18 01:05:59 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 01:05:59 TRACE Expression:45 - Expression text: WriteLine("Hello, World!")
2014-06-18 01:05:59 TRACE PostfixExpression:50 - Constructor call added: Console.WriteLine("Hello, World!")
2014-06-18 01:05:59 TRACE Expression:42 - Expression added: DOT
2014-06-18 01:05:59 TRACE Expression:43 - Token: '.'
2014-06-18 01:05:59 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 01:05:59 TRACE Expression:45 - Expression text: Console.WriteLine("Hello, World!")
2014-06-18 01:05:59 TRACE PostfixExpression:50 - Constructor call added: System.Console.WriteLine("Hello, World!")
2014-06-18 01:05:59 TRACE Expression:42 - Expression added: DOT
2014-06-18 01:05:59 TRACE Expression:43 - Token: '.'
2014-06-18 01:05:59 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 01:05:59 TRACE Expression:45 - Expression text: System.Console.WriteLine("Hello, World!")
2014-06-18 01:05:59 TRACE CompoundStatement:49 - stmt in da block: a=6;
2014-06-18 01:05:59 TRACE Expression:42 - Expression added: ASSIGN
2014-06-18 01:05:59 TRACE Expression:43 - Token: '='
2014-06-18 01:05:59 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 01:05:59 TRACE Expression:45 - Expression text: a=6
2014-06-18 01:05:59 TRACE Expression:239 - int_visitLdcInsn: 555
2014-06-18 01:05:59 TRACE Expression:239 - int_visitLdcInsn: 1
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. tstmultiplicative_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. tstunary_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. tstpostfix_expression
2014-06-18 01:05:59 WARN  Expression:119 - OneChild tree. tstprimary_expression
2014-06-18 01:05:59 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:05:59 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:05:59 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:05:59 TRACE Expression:45 - Expression text: tst
2014-06-18 01:06:42 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 01:06:42 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 01:06:42 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 01:06:42 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 01:06:42 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 01:06:42 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst+1;publicstaticvoidMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 01:06:42 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@68,298:298='}',<40>,15:0]}
2014-06-18 01:06:42 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 01:06:42 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 01:06:42 TRACE ClassDef:55 - Class name: Test
2014-06-18 01:06:42 TRACE Variable:30 - Field/variable added: tst
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 555assignment_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 555conditional_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 555logical_or_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 555logical_and_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 555inclusive_or_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 555exclusive_or_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 555and_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 555equality_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 555relational_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 555shift_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 555additive_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 555multiplicative_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 555unary_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 555postfix_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 555primary_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 555constant
2014-06-18 01:06:42 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:06:42 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:06:42 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:06:42 TRACE Expression:45 - Expression text: 555
2014-06-18 01:06:42 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 1assignment_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 1conditional_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 1logical_or_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 1logical_and_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 1inclusive_or_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 1exclusive_or_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 1and_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 1equality_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 1relational_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 1shift_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 01:06:42 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:06:42 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:06:42 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:06:42 TRACE Expression:45 - Expression text: 1
2014-06-18 01:06:42 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. tst+1assignment_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. tst+1conditional_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. tst+1logical_or_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. tst+1logical_and_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. tst+1inclusive_or_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. tst+1exclusive_or_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. tst+1and_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. tst+1equality_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. tst+1relational_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. tst+1shift_expression
2014-06-18 01:06:42 TRACE Expression:42 - Expression added: PLUS
2014-06-18 01:06:42 TRACE Expression:43 - Token: '+'
2014-06-18 01:06:42 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 01:06:42 TRACE Expression:45 - Expression text: tst+1
2014-06-18 01:06:42 TRACE ClassMethod:39 - Method added: Main
2014-06-18 01:06:42 TRACE Variable:30 - Field/variable added: s
2014-06-18 01:06:42 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 01:06:42 TRACE Variable:30 - Field/variable added: a
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 5assignment_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 5conditional_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 5logical_or_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 5logical_and_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 5inclusive_or_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 5exclusive_or_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 5and_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 5equality_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 5relational_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 5shift_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 5additive_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 5multiplicative_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 5unary_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 5postfix_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 5primary_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. 5constant
2014-06-18 01:06:42 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:06:42 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:06:42 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:06:42 TRACE Expression:45 - Expression text: 5
2014-06-18 01:06:42 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 01:06:42 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. newint[1,2][3]assignment_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. newint[1,2][3]conditional_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. newint[1,2][3]logical_or_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. newint[1,2][3]logical_and_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. newint[1,2][3]inclusive_or_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. newint[1,2][3]exclusive_or_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. newint[1,2][3]and_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. newint[1,2][3]equality_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. newint[1,2][3]relational_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. newint[1,2][3]shift_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. newint[1,2][3]additive_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. newint[1,2][3]multiplicative_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. newint[1,2][3]unary_expression
2014-06-18 01:06:42 TRACE ConstructorExpression:19 - Constructor call added: newint[1,2][3]
2014-06-18 01:06:42 TRACE Expression:42 - Expression added: NEW
2014-06-18 01:06:42 TRACE Expression:43 - Token: 'new'
2014-06-18 01:06:42 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 01:06:42 TRACE Expression:45 - Expression text: newint[1,2][3]
2014-06-18 01:06:42 TRACE CompoundStatement:49 - stmt in da block: System.Console.WriteLine("Hello, World!");
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")assignment_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")conditional_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")logical_or_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")logical_and_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")inclusive_or_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")exclusive_or_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")and_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")equality_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")relational_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")shift_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")additive_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")multiplicative_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")unary_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. Systemprimary_expression
2014-06-18 01:06:42 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:06:42 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:06:42 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:06:42 TRACE Expression:45 - Expression text: System
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. Consoleprimary_expression
2014-06-18 01:06:42 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:06:42 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:06:42 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:06:42 TRACE Expression:45 - Expression text: Console
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. WriteLineprimary_expression
2014-06-18 01:06:42 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:06:42 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:06:42 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:06:42 TRACE Expression:45 - Expression text: WriteLine
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. "Hello, World!"assignment_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. "Hello, World!"conditional_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. "Hello, World!"logical_or_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. "Hello, World!"logical_and_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. "Hello, World!"inclusive_or_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. "Hello, World!"exclusive_or_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. "Hello, World!"and_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. "Hello, World!"equality_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. "Hello, World!"relational_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. "Hello, World!"shift_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. "Hello, World!"additive_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. "Hello, World!"multiplicative_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. "Hello, World!"unary_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. "Hello, World!"postfix_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. "Hello, World!"primary_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. "Hello, World!"constant
2014-06-18 01:06:42 TRACE Expression:42 - Expression added: CHARACTER_LITERAL
2014-06-18 01:06:42 TRACE Expression:43 - Token: STRING_LITERAL
2014-06-18 01:06:42 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$1
2014-06-18 01:06:42 TRACE Expression:45 - Expression text: "Hello, World!"
2014-06-18 01:06:42 TRACE PostfixExpression:50 - Constructor call added: WriteLine("Hello, World!")
2014-06-18 01:06:42 TRACE Expression:42 - Expression added: DOT
2014-06-18 01:06:42 TRACE Expression:43 - Token: '.'
2014-06-18 01:06:42 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 01:06:42 TRACE Expression:45 - Expression text: WriteLine("Hello, World!")
2014-06-18 01:06:42 TRACE PostfixExpression:50 - Constructor call added: Console.WriteLine("Hello, World!")
2014-06-18 01:06:42 TRACE Expression:42 - Expression added: DOT
2014-06-18 01:06:42 TRACE Expression:43 - Token: '.'
2014-06-18 01:06:42 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 01:06:42 TRACE Expression:45 - Expression text: Console.WriteLine("Hello, World!")
2014-06-18 01:06:42 TRACE PostfixExpression:50 - Constructor call added: System.Console.WriteLine("Hello, World!")
2014-06-18 01:06:42 TRACE Expression:42 - Expression added: DOT
2014-06-18 01:06:42 TRACE Expression:43 - Token: '.'
2014-06-18 01:06:42 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 01:06:42 TRACE Expression:45 - Expression text: System.Console.WriteLine("Hello, World!")
2014-06-18 01:06:42 TRACE CompoundStatement:49 - stmt in da block: a=6;
2014-06-18 01:06:42 TRACE Expression:42 - Expression added: ASSIGN
2014-06-18 01:06:42 TRACE Expression:43 - Token: '='
2014-06-18 01:06:42 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 01:06:42 TRACE Expression:45 - Expression text: a=6
2014-06-18 01:06:42 TRACE Expression:241 - int_visitLdcInsn: 555
2014-06-18 01:06:42 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. tstmultiplicative_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. tstunary_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. tstpostfix_expression
2014-06-18 01:06:42 WARN  Expression:121 - OneChild tree. tstprimary_expression
2014-06-18 01:06:42 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:06:42 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:06:42 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:06:42 TRACE Expression:45 - Expression text: tst
2014-06-18 01:06:59 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 01:06:59 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 01:06:59 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 01:06:59 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 01:07:00 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 01:07:00 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst+1;publicstaticvoidMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 01:07:00 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@68,298:298='}',<40>,15:0]}
2014-06-18 01:07:00 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 01:07:00 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 01:07:00 TRACE ClassDef:55 - Class name: Test
2014-06-18 01:07:00 TRACE Variable:30 - Field/variable added: tst
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 555assignment_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 555conditional_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 555logical_or_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 555logical_and_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 555inclusive_or_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 555exclusive_or_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 555and_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 555equality_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 555relational_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 555shift_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 555additive_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 555multiplicative_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 555unary_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 555postfix_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 555primary_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 555constant
2014-06-18 01:07:00 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:07:00 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:07:00 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:07:00 TRACE Expression:45 - Expression text: 555
2014-06-18 01:07:00 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 1assignment_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 1conditional_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 1logical_or_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 1logical_and_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 1inclusive_or_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 1exclusive_or_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 1and_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 1equality_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 1relational_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 1shift_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 01:07:00 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:07:00 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:07:00 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:07:00 TRACE Expression:45 - Expression text: 1
2014-06-18 01:07:00 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. tst+1assignment_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. tst+1conditional_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. tst+1logical_or_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. tst+1logical_and_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. tst+1inclusive_or_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. tst+1exclusive_or_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. tst+1and_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. tst+1equality_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. tst+1relational_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. tst+1shift_expression
2014-06-18 01:07:00 TRACE Expression:42 - Expression added: PLUS
2014-06-18 01:07:00 TRACE Expression:43 - Token: '+'
2014-06-18 01:07:00 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 01:07:00 TRACE Expression:45 - Expression text: tst+1
2014-06-18 01:07:00 TRACE ClassMethod:39 - Method added: Main
2014-06-18 01:07:00 TRACE Variable:30 - Field/variable added: s
2014-06-18 01:07:00 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 01:07:00 TRACE Variable:30 - Field/variable added: a
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 5assignment_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 5conditional_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 5logical_or_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 5logical_and_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 5inclusive_or_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 5exclusive_or_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 5and_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 5equality_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 5relational_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 5shift_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 5additive_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 5multiplicative_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 5unary_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 5postfix_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 5primary_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 5constant
2014-06-18 01:07:00 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:07:00 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:07:00 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:07:00 TRACE Expression:45 - Expression text: 5
2014-06-18 01:07:00 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 01:07:00 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. newint[1,2][3]assignment_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. newint[1,2][3]conditional_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. newint[1,2][3]logical_or_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. newint[1,2][3]logical_and_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. newint[1,2][3]inclusive_or_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. newint[1,2][3]exclusive_or_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. newint[1,2][3]and_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. newint[1,2][3]equality_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. newint[1,2][3]relational_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. newint[1,2][3]shift_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. newint[1,2][3]additive_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. newint[1,2][3]multiplicative_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. newint[1,2][3]unary_expression
2014-06-18 01:07:00 TRACE ConstructorExpression:19 - Constructor call added: newint[1,2][3]
2014-06-18 01:07:00 TRACE Expression:42 - Expression added: NEW
2014-06-18 01:07:00 TRACE Expression:43 - Token: 'new'
2014-06-18 01:07:00 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 01:07:00 TRACE Expression:45 - Expression text: newint[1,2][3]
2014-06-18 01:07:00 TRACE CompoundStatement:49 - stmt in da block: System.Console.WriteLine("Hello, World!");
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")assignment_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")conditional_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")logical_or_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")logical_and_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")inclusive_or_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")exclusive_or_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")and_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")equality_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")relational_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")shift_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")additive_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")multiplicative_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")unary_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. Systemprimary_expression
2014-06-18 01:07:00 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:07:00 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:07:00 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:07:00 TRACE Expression:45 - Expression text: System
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. Consoleprimary_expression
2014-06-18 01:07:00 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:07:00 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:07:00 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:07:00 TRACE Expression:45 - Expression text: Console
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. WriteLineprimary_expression
2014-06-18 01:07:00 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:07:00 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:07:00 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:07:00 TRACE Expression:45 - Expression text: WriteLine
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. "Hello, World!"assignment_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. "Hello, World!"conditional_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. "Hello, World!"logical_or_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. "Hello, World!"logical_and_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. "Hello, World!"inclusive_or_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. "Hello, World!"exclusive_or_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. "Hello, World!"and_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. "Hello, World!"equality_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. "Hello, World!"relational_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. "Hello, World!"shift_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. "Hello, World!"additive_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. "Hello, World!"multiplicative_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. "Hello, World!"unary_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. "Hello, World!"postfix_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. "Hello, World!"primary_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. "Hello, World!"constant
2014-06-18 01:07:00 TRACE Expression:42 - Expression added: CHARACTER_LITERAL
2014-06-18 01:07:00 TRACE Expression:43 - Token: STRING_LITERAL
2014-06-18 01:07:00 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$1
2014-06-18 01:07:00 TRACE Expression:45 - Expression text: "Hello, World!"
2014-06-18 01:07:00 TRACE PostfixExpression:50 - Constructor call added: WriteLine("Hello, World!")
2014-06-18 01:07:00 TRACE Expression:42 - Expression added: DOT
2014-06-18 01:07:00 TRACE Expression:43 - Token: '.'
2014-06-18 01:07:00 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 01:07:00 TRACE Expression:45 - Expression text: WriteLine("Hello, World!")
2014-06-18 01:07:00 TRACE PostfixExpression:50 - Constructor call added: Console.WriteLine("Hello, World!")
2014-06-18 01:07:00 TRACE Expression:42 - Expression added: DOT
2014-06-18 01:07:00 TRACE Expression:43 - Token: '.'
2014-06-18 01:07:00 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 01:07:00 TRACE Expression:45 - Expression text: Console.WriteLine("Hello, World!")
2014-06-18 01:07:00 TRACE PostfixExpression:50 - Constructor call added: System.Console.WriteLine("Hello, World!")
2014-06-18 01:07:00 TRACE Expression:42 - Expression added: DOT
2014-06-18 01:07:00 TRACE Expression:43 - Token: '.'
2014-06-18 01:07:00 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 01:07:00 TRACE Expression:45 - Expression text: System.Console.WriteLine("Hello, World!")
2014-06-18 01:07:00 TRACE CompoundStatement:49 - stmt in da block: a=6;
2014-06-18 01:07:00 TRACE Expression:42 - Expression added: ASSIGN
2014-06-18 01:07:00 TRACE Expression:43 - Token: '='
2014-06-18 01:07:00 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 01:07:00 TRACE Expression:45 - Expression text: a=6
2014-06-18 01:07:00 TRACE Expression:241 - int_visitLdcInsn: 555
2014-06-18 01:07:00 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. tstmultiplicative_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. tstunary_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. tstpostfix_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. tstprimary_expression
2014-06-18 01:07:00 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:07:00 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:07:00 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:07:00 TRACE Expression:45 - Expression text: tst
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 01:07:00 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 01:07:00 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:07:00 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:07:00 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:07:00 TRACE Expression:45 - Expression text: 1
2014-06-18 01:07:00 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 01:39:43 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 01:39:43 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 01:39:43 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 01:39:43 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 01:39:43 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 01:39:43 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst+1;publicstaticintMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 01:39:43 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@68,297:297='}',<40>,15:0]}
2014-06-18 01:39:43 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 01:39:43 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 01:39:43 TRACE ClassDef:55 - Class name: Test
2014-06-18 01:39:43 TRACE Variable:30 - Field/variable added: tst
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 555assignment_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 555conditional_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 555logical_or_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 555logical_and_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 555inclusive_or_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 555exclusive_or_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 555and_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 555equality_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 555relational_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 555shift_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 555additive_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 555multiplicative_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 555unary_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 555postfix_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 555primary_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 555constant
2014-06-18 01:39:43 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:39:43 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:39:43 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:39:43 TRACE Expression:45 - Expression text: 555
2014-06-18 01:39:43 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 1assignment_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 1conditional_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 1logical_or_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 1logical_and_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 1inclusive_or_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 1exclusive_or_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 1and_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 1equality_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 1relational_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 1shift_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 01:39:43 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:39:43 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:39:43 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:39:43 TRACE Expression:45 - Expression text: 1
2014-06-18 01:39:43 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. tst+1assignment_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. tst+1conditional_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. tst+1logical_or_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. tst+1logical_and_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. tst+1inclusive_or_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. tst+1exclusive_or_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. tst+1and_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. tst+1equality_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. tst+1relational_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. tst+1shift_expression
2014-06-18 01:39:43 TRACE Expression:42 - Expression added: PLUS
2014-06-18 01:39:43 TRACE Expression:43 - Token: '+'
2014-06-18 01:39:43 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 01:39:43 TRACE Expression:45 - Expression text: tst+1
2014-06-18 01:39:43 TRACE ClassMethod:39 - Method added: Main
2014-06-18 01:39:43 TRACE Variable:30 - Field/variable added: s
2014-06-18 01:39:43 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 01:39:43 TRACE Variable:30 - Field/variable added: a
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 5assignment_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 5conditional_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 5logical_or_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 5logical_and_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 5inclusive_or_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 5exclusive_or_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 5and_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 5equality_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 5relational_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 5shift_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 5additive_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 5multiplicative_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 5unary_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 5postfix_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 5primary_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 5constant
2014-06-18 01:39:43 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:39:43 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:39:43 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:39:43 TRACE Expression:45 - Expression text: 5
2014-06-18 01:39:43 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 01:39:43 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. newint[1,2][3]assignment_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. newint[1,2][3]conditional_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. newint[1,2][3]logical_or_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. newint[1,2][3]logical_and_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. newint[1,2][3]inclusive_or_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. newint[1,2][3]exclusive_or_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. newint[1,2][3]and_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. newint[1,2][3]equality_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. newint[1,2][3]relational_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. newint[1,2][3]shift_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. newint[1,2][3]additive_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. newint[1,2][3]multiplicative_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. newint[1,2][3]unary_expression
2014-06-18 01:39:43 TRACE ConstructorExpression:19 - Constructor call added: newint[1,2][3]
2014-06-18 01:39:43 TRACE Expression:42 - Expression added: NEW
2014-06-18 01:39:43 TRACE Expression:43 - Token: 'new'
2014-06-18 01:39:43 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 01:39:43 TRACE Expression:45 - Expression text: newint[1,2][3]
2014-06-18 01:39:43 TRACE CompoundStatement:49 - stmt in da block: System.Console.WriteLine("Hello, World!");
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")assignment_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")conditional_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")logical_or_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")logical_and_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")inclusive_or_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")exclusive_or_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")and_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")equality_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")relational_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")shift_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")additive_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")multiplicative_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")unary_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. Systemprimary_expression
2014-06-18 01:39:43 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:39:43 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:39:43 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:39:43 TRACE Expression:45 - Expression text: System
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. Consoleprimary_expression
2014-06-18 01:39:43 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:39:43 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:39:43 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:39:43 TRACE Expression:45 - Expression text: Console
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. WriteLineprimary_expression
2014-06-18 01:39:43 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:39:43 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:39:43 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:39:43 TRACE Expression:45 - Expression text: WriteLine
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. "Hello, World!"assignment_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. "Hello, World!"conditional_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. "Hello, World!"logical_or_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. "Hello, World!"logical_and_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. "Hello, World!"inclusive_or_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. "Hello, World!"exclusive_or_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. "Hello, World!"and_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. "Hello, World!"equality_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. "Hello, World!"relational_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. "Hello, World!"shift_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. "Hello, World!"additive_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. "Hello, World!"multiplicative_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. "Hello, World!"unary_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. "Hello, World!"postfix_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. "Hello, World!"primary_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. "Hello, World!"constant
2014-06-18 01:39:43 TRACE Expression:42 - Expression added: CHARACTER_LITERAL
2014-06-18 01:39:43 TRACE Expression:43 - Token: STRING_LITERAL
2014-06-18 01:39:43 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$1
2014-06-18 01:39:43 TRACE Expression:45 - Expression text: "Hello, World!"
2014-06-18 01:39:43 TRACE PostfixExpression:50 - Constructor call added: WriteLine("Hello, World!")
2014-06-18 01:39:43 TRACE Expression:42 - Expression added: DOT
2014-06-18 01:39:43 TRACE Expression:43 - Token: '.'
2014-06-18 01:39:43 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 01:39:43 TRACE Expression:45 - Expression text: WriteLine("Hello, World!")
2014-06-18 01:39:43 TRACE PostfixExpression:50 - Constructor call added: Console.WriteLine("Hello, World!")
2014-06-18 01:39:43 TRACE Expression:42 - Expression added: DOT
2014-06-18 01:39:43 TRACE Expression:43 - Token: '.'
2014-06-18 01:39:43 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 01:39:43 TRACE Expression:45 - Expression text: Console.WriteLine("Hello, World!")
2014-06-18 01:39:43 TRACE PostfixExpression:50 - Constructor call added: System.Console.WriteLine("Hello, World!")
2014-06-18 01:39:43 TRACE Expression:42 - Expression added: DOT
2014-06-18 01:39:43 TRACE Expression:43 - Token: '.'
2014-06-18 01:39:43 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 01:39:43 TRACE Expression:45 - Expression text: System.Console.WriteLine("Hello, World!")
2014-06-18 01:39:43 TRACE CompoundStatement:49 - stmt in da block: a=6;
2014-06-18 01:39:43 TRACE Expression:42 - Expression added: ASSIGN
2014-06-18 01:39:43 TRACE Expression:43 - Token: '='
2014-06-18 01:39:43 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 01:39:43 TRACE Expression:45 - Expression text: a=6
2014-06-18 01:39:43 TRACE Expression:241 - int_visitLdcInsn: 555
2014-06-18 01:39:43 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. tstmultiplicative_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. tstunary_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. tstpostfix_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. tstprimary_expression
2014-06-18 01:39:43 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:39:43 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:39:43 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:39:43 TRACE Expression:45 - Expression text: tst
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 01:39:43 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 01:39:43 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:39:43 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:39:43 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:39:43 TRACE Expression:45 - Expression text: 1
2014-06-18 01:39:43 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 01:40:37 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 01:40:37 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 01:40:37 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 01:40:37 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 01:40:38 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 01:40:38 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst+1;publicstaticintMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 01:40:38 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@68,297:297='}',<40>,15:0]}
2014-06-18 01:40:38 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 01:40:38 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 01:40:38 TRACE ClassDef:55 - Class name: Test
2014-06-18 01:40:38 TRACE Variable:30 - Field/variable added: tst
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 555assignment_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 555conditional_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 555logical_or_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 555logical_and_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 555inclusive_or_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 555exclusive_or_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 555and_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 555equality_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 555relational_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 555shift_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 555additive_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 555multiplicative_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 555unary_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 555postfix_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 555primary_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 555constant
2014-06-18 01:40:38 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:40:38 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:40:38 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:40:38 TRACE Expression:45 - Expression text: 555
2014-06-18 01:40:38 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 1assignment_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 1conditional_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 1logical_or_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 1logical_and_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 1inclusive_or_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 1exclusive_or_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 1and_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 1equality_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 1relational_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 1shift_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 01:40:38 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:40:38 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:40:38 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:40:38 TRACE Expression:45 - Expression text: 1
2014-06-18 01:40:38 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. tst+1assignment_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. tst+1conditional_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. tst+1logical_or_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. tst+1logical_and_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. tst+1inclusive_or_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. tst+1exclusive_or_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. tst+1and_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. tst+1equality_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. tst+1relational_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. tst+1shift_expression
2014-06-18 01:40:38 TRACE Expression:42 - Expression added: PLUS
2014-06-18 01:40:38 TRACE Expression:43 - Token: '+'
2014-06-18 01:40:38 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 01:40:38 TRACE Expression:45 - Expression text: tst+1
2014-06-18 01:40:38 TRACE ClassMethod:39 - Method added: Main
2014-06-18 01:40:38 TRACE Variable:30 - Field/variable added: s
2014-06-18 01:40:38 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 01:40:38 TRACE Variable:30 - Field/variable added: a
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 5assignment_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 5conditional_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 5logical_or_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 5logical_and_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 5inclusive_or_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 5exclusive_or_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 5and_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 5equality_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 5relational_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 5shift_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 5additive_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 5multiplicative_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 5unary_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 5postfix_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 5primary_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 5constant
2014-06-18 01:40:38 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:40:38 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:40:38 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:40:38 TRACE Expression:45 - Expression text: 5
2014-06-18 01:40:38 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 01:40:38 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. newint[1,2][3]assignment_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. newint[1,2][3]conditional_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. newint[1,2][3]logical_or_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. newint[1,2][3]logical_and_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. newint[1,2][3]inclusive_or_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. newint[1,2][3]exclusive_or_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. newint[1,2][3]and_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. newint[1,2][3]equality_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. newint[1,2][3]relational_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. newint[1,2][3]shift_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. newint[1,2][3]additive_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. newint[1,2][3]multiplicative_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. newint[1,2][3]unary_expression
2014-06-18 01:40:38 TRACE ConstructorExpression:19 - Constructor call added: newint[1,2][3]
2014-06-18 01:40:38 TRACE Expression:42 - Expression added: NEW
2014-06-18 01:40:38 TRACE Expression:43 - Token: 'new'
2014-06-18 01:40:38 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 01:40:38 TRACE Expression:45 - Expression text: newint[1,2][3]
2014-06-18 01:40:38 TRACE CompoundStatement:49 - stmt in da block: System.Console.WriteLine("Hello, World!");
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")assignment_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")conditional_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")logical_or_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")logical_and_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")inclusive_or_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")exclusive_or_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")and_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")equality_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")relational_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")shift_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")additive_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")multiplicative_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")unary_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. Systemprimary_expression
2014-06-18 01:40:38 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:40:38 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:40:38 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:40:38 TRACE Expression:45 - Expression text: System
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. Consoleprimary_expression
2014-06-18 01:40:38 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:40:38 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:40:38 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:40:38 TRACE Expression:45 - Expression text: Console
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. WriteLineprimary_expression
2014-06-18 01:40:38 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:40:38 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:40:38 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:40:38 TRACE Expression:45 - Expression text: WriteLine
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. "Hello, World!"assignment_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. "Hello, World!"conditional_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. "Hello, World!"logical_or_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. "Hello, World!"logical_and_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. "Hello, World!"inclusive_or_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. "Hello, World!"exclusive_or_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. "Hello, World!"and_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. "Hello, World!"equality_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. "Hello, World!"relational_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. "Hello, World!"shift_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. "Hello, World!"additive_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. "Hello, World!"multiplicative_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. "Hello, World!"unary_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. "Hello, World!"postfix_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. "Hello, World!"primary_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. "Hello, World!"constant
2014-06-18 01:40:38 TRACE Expression:42 - Expression added: CHARACTER_LITERAL
2014-06-18 01:40:38 TRACE Expression:43 - Token: STRING_LITERAL
2014-06-18 01:40:38 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$1
2014-06-18 01:40:38 TRACE Expression:45 - Expression text: "Hello, World!"
2014-06-18 01:40:38 TRACE PostfixExpression:50 - Constructor call added: WriteLine("Hello, World!")
2014-06-18 01:40:38 TRACE Expression:42 - Expression added: DOT
2014-06-18 01:40:38 TRACE Expression:43 - Token: '.'
2014-06-18 01:40:38 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 01:40:38 TRACE Expression:45 - Expression text: WriteLine("Hello, World!")
2014-06-18 01:40:38 TRACE PostfixExpression:50 - Constructor call added: Console.WriteLine("Hello, World!")
2014-06-18 01:40:38 TRACE Expression:42 - Expression added: DOT
2014-06-18 01:40:38 TRACE Expression:43 - Token: '.'
2014-06-18 01:40:38 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 01:40:38 TRACE Expression:45 - Expression text: Console.WriteLine("Hello, World!")
2014-06-18 01:40:38 TRACE PostfixExpression:50 - Constructor call added: System.Console.WriteLine("Hello, World!")
2014-06-18 01:40:38 TRACE Expression:42 - Expression added: DOT
2014-06-18 01:40:38 TRACE Expression:43 - Token: '.'
2014-06-18 01:40:38 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 01:40:38 TRACE Expression:45 - Expression text: System.Console.WriteLine("Hello, World!")
2014-06-18 01:40:38 TRACE CompoundStatement:49 - stmt in da block: a=6;
2014-06-18 01:40:38 TRACE Expression:42 - Expression added: ASSIGN
2014-06-18 01:40:38 TRACE Expression:43 - Token: '='
2014-06-18 01:40:38 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 01:40:38 TRACE Expression:45 - Expression text: a=6
2014-06-18 01:40:38 TRACE Expression:241 - int_visitLdcInsn: 555
2014-06-18 01:40:38 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. tstmultiplicative_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. tstunary_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. tstpostfix_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. tstprimary_expression
2014-06-18 01:40:38 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:40:38 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:40:38 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:40:38 TRACE Expression:45 - Expression text: tst
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 01:40:38 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 01:40:38 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:40:38 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:40:38 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:40:38 TRACE Expression:45 - Expression text: 1
2014-06-18 01:40:38 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 01:40:38 TRACE ClassMethod:95 - Compiling method Main w. args I. Is constructor: false
2014-06-18 01:44:05 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 01:44:05 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 01:44:05 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 01:44:05 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 01:44:06 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 01:44:06 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst+1;publicstaticintMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 01:44:06 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@68,297:297='}',<40>,15:0]}
2014-06-18 01:44:06 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 01:44:06 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 01:44:06 TRACE ClassDef:55 - Class name: Test
2014-06-18 01:44:06 TRACE Variable:30 - Field/variable added: tst
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 555assignment_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 555conditional_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 555logical_or_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 555logical_and_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 555inclusive_or_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 555exclusive_or_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 555and_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 555equality_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 555relational_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 555shift_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 555additive_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 555multiplicative_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 555unary_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 555postfix_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 555primary_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 555constant
2014-06-18 01:44:06 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:44:06 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:44:06 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:44:06 TRACE Expression:45 - Expression text: 555
2014-06-18 01:44:06 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 1assignment_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 1conditional_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 1logical_or_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 1logical_and_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 1inclusive_or_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 1exclusive_or_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 1and_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 1equality_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 1relational_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 1shift_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 01:44:06 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:44:06 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:44:06 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:44:06 TRACE Expression:45 - Expression text: 1
2014-06-18 01:44:06 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. tst+1assignment_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. tst+1conditional_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. tst+1logical_or_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. tst+1logical_and_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. tst+1inclusive_or_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. tst+1exclusive_or_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. tst+1and_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. tst+1equality_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. tst+1relational_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. tst+1shift_expression
2014-06-18 01:44:06 TRACE Expression:42 - Expression added: PLUS
2014-06-18 01:44:06 TRACE Expression:43 - Token: '+'
2014-06-18 01:44:06 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 01:44:06 TRACE Expression:45 - Expression text: tst+1
2014-06-18 01:44:06 TRACE ClassMethod:39 - Method added: Main
2014-06-18 01:44:06 TRACE Variable:30 - Field/variable added: s
2014-06-18 01:44:06 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 01:44:06 TRACE Variable:30 - Field/variable added: a
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 5assignment_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 5conditional_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 5logical_or_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 5logical_and_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 5inclusive_or_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 5exclusive_or_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 5and_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 5equality_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 5relational_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 5shift_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 5additive_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 5multiplicative_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 5unary_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 5postfix_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 5primary_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 5constant
2014-06-18 01:44:06 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:44:06 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:44:06 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:44:06 TRACE Expression:45 - Expression text: 5
2014-06-18 01:44:06 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 01:44:06 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. newint[1,2][3]assignment_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. newint[1,2][3]conditional_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. newint[1,2][3]logical_or_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. newint[1,2][3]logical_and_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. newint[1,2][3]inclusive_or_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. newint[1,2][3]exclusive_or_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. newint[1,2][3]and_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. newint[1,2][3]equality_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. newint[1,2][3]relational_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. newint[1,2][3]shift_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. newint[1,2][3]additive_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. newint[1,2][3]multiplicative_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. newint[1,2][3]unary_expression
2014-06-18 01:44:06 TRACE ConstructorExpression:19 - Constructor call added: newint[1,2][3]
2014-06-18 01:44:06 TRACE Expression:42 - Expression added: NEW
2014-06-18 01:44:06 TRACE Expression:43 - Token: 'new'
2014-06-18 01:44:06 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 01:44:06 TRACE Expression:45 - Expression text: newint[1,2][3]
2014-06-18 01:44:06 TRACE CompoundStatement:49 - stmt in da block: System.Console.WriteLine("Hello, World!");
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")assignment_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")conditional_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")logical_or_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")logical_and_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")inclusive_or_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")exclusive_or_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")and_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")equality_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")relational_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")shift_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")additive_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")multiplicative_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")unary_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. Systemprimary_expression
2014-06-18 01:44:06 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:44:06 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:44:06 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:44:06 TRACE Expression:45 - Expression text: System
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. Consoleprimary_expression
2014-06-18 01:44:06 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:44:06 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:44:06 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:44:06 TRACE Expression:45 - Expression text: Console
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. WriteLineprimary_expression
2014-06-18 01:44:06 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:44:06 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:44:06 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:44:06 TRACE Expression:45 - Expression text: WriteLine
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. "Hello, World!"assignment_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. "Hello, World!"conditional_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. "Hello, World!"logical_or_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. "Hello, World!"logical_and_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. "Hello, World!"inclusive_or_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. "Hello, World!"exclusive_or_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. "Hello, World!"and_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. "Hello, World!"equality_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. "Hello, World!"relational_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. "Hello, World!"shift_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. "Hello, World!"additive_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. "Hello, World!"multiplicative_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. "Hello, World!"unary_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. "Hello, World!"postfix_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. "Hello, World!"primary_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. "Hello, World!"constant
2014-06-18 01:44:06 TRACE Expression:42 - Expression added: CHARACTER_LITERAL
2014-06-18 01:44:06 TRACE Expression:43 - Token: STRING_LITERAL
2014-06-18 01:44:06 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$1
2014-06-18 01:44:06 TRACE Expression:45 - Expression text: "Hello, World!"
2014-06-18 01:44:06 TRACE PostfixExpression:50 - Constructor call added: WriteLine("Hello, World!")
2014-06-18 01:44:06 TRACE Expression:42 - Expression added: DOT
2014-06-18 01:44:06 TRACE Expression:43 - Token: '.'
2014-06-18 01:44:06 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 01:44:06 TRACE Expression:45 - Expression text: WriteLine("Hello, World!")
2014-06-18 01:44:06 TRACE PostfixExpression:50 - Constructor call added: Console.WriteLine("Hello, World!")
2014-06-18 01:44:06 TRACE Expression:42 - Expression added: DOT
2014-06-18 01:44:06 TRACE Expression:43 - Token: '.'
2014-06-18 01:44:06 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 01:44:06 TRACE Expression:45 - Expression text: Console.WriteLine("Hello, World!")
2014-06-18 01:44:06 TRACE PostfixExpression:50 - Constructor call added: System.Console.WriteLine("Hello, World!")
2014-06-18 01:44:06 TRACE Expression:42 - Expression added: DOT
2014-06-18 01:44:06 TRACE Expression:43 - Token: '.'
2014-06-18 01:44:06 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 01:44:06 TRACE Expression:45 - Expression text: System.Console.WriteLine("Hello, World!")
2014-06-18 01:44:06 TRACE CompoundStatement:49 - stmt in da block: a=6;
2014-06-18 01:44:06 TRACE Expression:42 - Expression added: ASSIGN
2014-06-18 01:44:06 TRACE Expression:43 - Token: '='
2014-06-18 01:44:06 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 01:44:06 TRACE Expression:45 - Expression text: a=6
2014-06-18 01:44:06 TRACE Expression:241 - int_visitLdcInsn: 555
2014-06-18 01:44:06 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. tstmultiplicative_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. tstunary_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. tstpostfix_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. tstprimary_expression
2014-06-18 01:44:06 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:44:06 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:44:06 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:44:06 TRACE Expression:45 - Expression text: tst
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 01:44:06 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:44:06 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:44:06 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:44:06 TRACE Expression:45 - Expression text: 1
2014-06-18 01:44:06 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 01:44:06 TRACE ClassMethod:95 - Compiling method Main w. args I. Is constructor: false
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. aunary_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. apostfix_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. aprimary_expression
2014-06-18 01:44:06 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:44:06 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:44:06 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:44:06 TRACE Expression:45 - Expression text: a
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 6assignment_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 6conditional_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 6logical_or_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 6logical_and_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 6inclusive_or_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 6exclusive_or_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 6and_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 6equality_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 6relational_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 6shift_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 6additive_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 6multiplicative_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 6unary_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 6postfix_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 6primary_expression
2014-06-18 01:44:06 WARN  Expression:121 - OneChild tree. 6constant
2014-06-18 01:44:06 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:44:06 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:44:06 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:44:06 TRACE Expression:45 - Expression text: 6
2014-06-18 01:44:06 TRACE Expression:241 - int_visitLdcInsn: 6
2014-06-18 01:47:39 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 01:47:39 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 01:47:39 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 01:47:39 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 01:47:39 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 01:47:39 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst+1;publicstaticintMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 01:47:39 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@68,297:297='}',<40>,15:0]}
2014-06-18 01:47:39 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 01:47:39 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 01:47:39 TRACE ClassDef:55 - Class name: Test
2014-06-18 01:47:39 TRACE Variable:30 - Field/variable added: tst
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 555assignment_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 555conditional_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 555logical_or_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 555logical_and_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 555inclusive_or_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 555exclusive_or_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 555and_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 555equality_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 555relational_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 555shift_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 555additive_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 555multiplicative_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 555unary_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 555postfix_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 555primary_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 555constant
2014-06-18 01:47:39 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:47:39 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:47:39 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:47:39 TRACE Expression:45 - Expression text: 555
2014-06-18 01:47:39 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 1assignment_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 1conditional_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 1logical_or_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 1logical_and_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 1inclusive_or_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 1exclusive_or_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 1and_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 1equality_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 1relational_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 1shift_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 01:47:39 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:47:39 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:47:39 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:47:39 TRACE Expression:45 - Expression text: 1
2014-06-18 01:47:39 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. tst+1assignment_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. tst+1conditional_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. tst+1logical_or_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. tst+1logical_and_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. tst+1inclusive_or_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. tst+1exclusive_or_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. tst+1and_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. tst+1equality_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. tst+1relational_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. tst+1shift_expression
2014-06-18 01:47:39 TRACE Expression:42 - Expression added: PLUS
2014-06-18 01:47:39 TRACE Expression:43 - Token: '+'
2014-06-18 01:47:39 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 01:47:39 TRACE Expression:45 - Expression text: tst+1
2014-06-18 01:47:39 TRACE ClassMethod:39 - Method added: Main
2014-06-18 01:47:39 TRACE Variable:30 - Field/variable added: s
2014-06-18 01:47:39 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 01:47:39 TRACE Variable:30 - Field/variable added: a
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 5assignment_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 5conditional_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 5logical_or_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 5logical_and_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 5inclusive_or_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 5exclusive_or_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 5and_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 5equality_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 5relational_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 5shift_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 5additive_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 5multiplicative_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 5unary_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 5postfix_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 5primary_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 5constant
2014-06-18 01:47:39 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:47:39 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:47:39 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:47:39 TRACE Expression:45 - Expression text: 5
2014-06-18 01:47:39 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 01:47:39 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. newint[1,2][3]assignment_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. newint[1,2][3]conditional_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. newint[1,2][3]logical_or_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. newint[1,2][3]logical_and_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. newint[1,2][3]inclusive_or_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. newint[1,2][3]exclusive_or_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. newint[1,2][3]and_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. newint[1,2][3]equality_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. newint[1,2][3]relational_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. newint[1,2][3]shift_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. newint[1,2][3]additive_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. newint[1,2][3]multiplicative_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. newint[1,2][3]unary_expression
2014-06-18 01:47:39 TRACE ConstructorExpression:19 - Constructor call added: newint[1,2][3]
2014-06-18 01:47:39 TRACE Expression:42 - Expression added: NEW
2014-06-18 01:47:39 TRACE Expression:43 - Token: 'new'
2014-06-18 01:47:39 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 01:47:39 TRACE Expression:45 - Expression text: newint[1,2][3]
2014-06-18 01:47:39 TRACE CompoundStatement:49 - stmt in da block: System.Console.WriteLine("Hello, World!");
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")assignment_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")conditional_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")logical_or_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")logical_and_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")inclusive_or_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")exclusive_or_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")and_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")equality_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")relational_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")shift_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")additive_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")multiplicative_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")unary_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. Systemprimary_expression
2014-06-18 01:47:39 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:47:39 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:47:39 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:47:39 TRACE Expression:45 - Expression text: System
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. Consoleprimary_expression
2014-06-18 01:47:39 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:47:39 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:47:39 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:47:39 TRACE Expression:45 - Expression text: Console
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. WriteLineprimary_expression
2014-06-18 01:47:39 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:47:39 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:47:39 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:47:39 TRACE Expression:45 - Expression text: WriteLine
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. "Hello, World!"assignment_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. "Hello, World!"conditional_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. "Hello, World!"logical_or_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. "Hello, World!"logical_and_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. "Hello, World!"inclusive_or_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. "Hello, World!"exclusive_or_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. "Hello, World!"and_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. "Hello, World!"equality_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. "Hello, World!"relational_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. "Hello, World!"shift_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. "Hello, World!"additive_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. "Hello, World!"multiplicative_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. "Hello, World!"unary_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. "Hello, World!"postfix_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. "Hello, World!"primary_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. "Hello, World!"constant
2014-06-18 01:47:39 TRACE Expression:42 - Expression added: CHARACTER_LITERAL
2014-06-18 01:47:39 TRACE Expression:43 - Token: STRING_LITERAL
2014-06-18 01:47:39 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$1
2014-06-18 01:47:39 TRACE Expression:45 - Expression text: "Hello, World!"
2014-06-18 01:47:39 TRACE PostfixExpression:50 - Constructor call added: WriteLine("Hello, World!")
2014-06-18 01:47:39 TRACE Expression:42 - Expression added: DOT
2014-06-18 01:47:39 TRACE Expression:43 - Token: '.'
2014-06-18 01:47:39 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 01:47:39 TRACE Expression:45 - Expression text: WriteLine("Hello, World!")
2014-06-18 01:47:39 TRACE PostfixExpression:50 - Constructor call added: Console.WriteLine("Hello, World!")
2014-06-18 01:47:39 TRACE Expression:42 - Expression added: DOT
2014-06-18 01:47:39 TRACE Expression:43 - Token: '.'
2014-06-18 01:47:39 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 01:47:39 TRACE Expression:45 - Expression text: Console.WriteLine("Hello, World!")
2014-06-18 01:47:39 TRACE PostfixExpression:50 - Constructor call added: System.Console.WriteLine("Hello, World!")
2014-06-18 01:47:39 TRACE Expression:42 - Expression added: DOT
2014-06-18 01:47:39 TRACE Expression:43 - Token: '.'
2014-06-18 01:47:39 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 01:47:39 TRACE Expression:45 - Expression text: System.Console.WriteLine("Hello, World!")
2014-06-18 01:47:39 TRACE CompoundStatement:49 - stmt in da block: a=6;
2014-06-18 01:47:39 TRACE Expression:42 - Expression added: ASSIGN
2014-06-18 01:47:39 TRACE Expression:43 - Token: '='
2014-06-18 01:47:39 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 01:47:39 TRACE Expression:45 - Expression text: a=6
2014-06-18 01:47:39 TRACE Expression:241 - int_visitLdcInsn: 555
2014-06-18 01:47:39 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. tstmultiplicative_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. tstunary_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. tstpostfix_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. tstprimary_expression
2014-06-18 01:47:39 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:47:39 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:47:39 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:47:39 TRACE Expression:45 - Expression text: tst
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 01:47:39 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:47:39 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:47:39 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:47:39 TRACE Expression:45 - Expression text: 1
2014-06-18 01:47:39 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 01:47:39 TRACE ClassMethod:95 - Compiling method Main w. args I. Is constructor: false
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. aunary_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. apostfix_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. aprimary_expression
2014-06-18 01:47:39 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:47:39 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:47:39 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:47:39 TRACE Expression:45 - Expression text: a
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 6assignment_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 6conditional_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 6logical_or_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 6logical_and_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 6inclusive_or_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 6exclusive_or_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 6and_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 6equality_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 6relational_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 6shift_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 6additive_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 6multiplicative_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 6unary_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 6postfix_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 6primary_expression
2014-06-18 01:47:39 WARN  Expression:121 - OneChild tree. 6constant
2014-06-18 01:47:39 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:47:39 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:47:39 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:47:39 TRACE Expression:45 - Expression text: 6
2014-06-18 01:47:39 TRACE Expression:241 - int_visitLdcInsn: 6
2014-06-18 01:48:28 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 01:48:28 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 01:48:28 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 01:48:28 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 01:48:29 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 01:48:29 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst+1;publicstaticintMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 01:48:29 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@68,297:297='}',<40>,15:0]}
2014-06-18 01:48:29 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 01:48:29 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 01:48:29 TRACE ClassDef:55 - Class name: Test
2014-06-18 01:48:29 TRACE Variable:30 - Field/variable added: tst
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 555assignment_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 555conditional_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 555logical_or_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 555logical_and_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 555inclusive_or_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 555exclusive_or_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 555and_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 555equality_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 555relational_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 555shift_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 555additive_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 555multiplicative_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 555unary_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 555postfix_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 555primary_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 555constant
2014-06-18 01:48:29 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:48:29 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:48:29 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:48:29 TRACE Expression:45 - Expression text: 555
2014-06-18 01:48:29 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 1assignment_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 1conditional_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 1logical_or_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 1logical_and_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 1inclusive_or_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 1exclusive_or_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 1and_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 1equality_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 1relational_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 1shift_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 01:48:29 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:48:29 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:48:29 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:48:29 TRACE Expression:45 - Expression text: 1
2014-06-18 01:48:29 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. tst+1assignment_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. tst+1conditional_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. tst+1logical_or_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. tst+1logical_and_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. tst+1inclusive_or_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. tst+1exclusive_or_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. tst+1and_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. tst+1equality_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. tst+1relational_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. tst+1shift_expression
2014-06-18 01:48:29 TRACE Expression:42 - Expression added: PLUS
2014-06-18 01:48:29 TRACE Expression:43 - Token: '+'
2014-06-18 01:48:29 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 01:48:29 TRACE Expression:45 - Expression text: tst+1
2014-06-18 01:48:29 TRACE ClassMethod:39 - Method added: Main
2014-06-18 01:48:29 TRACE Variable:30 - Field/variable added: s
2014-06-18 01:48:29 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 01:48:29 TRACE Variable:30 - Field/variable added: a
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 5assignment_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 5conditional_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 5logical_or_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 5logical_and_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 5inclusive_or_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 5exclusive_or_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 5and_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 5equality_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 5relational_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 5shift_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 5additive_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 5multiplicative_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 5unary_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 5postfix_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 5primary_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 5constant
2014-06-18 01:48:29 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:48:29 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:48:29 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:48:29 TRACE Expression:45 - Expression text: 5
2014-06-18 01:48:29 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 01:48:29 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. newint[1,2][3]assignment_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. newint[1,2][3]conditional_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. newint[1,2][3]logical_or_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. newint[1,2][3]logical_and_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. newint[1,2][3]inclusive_or_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. newint[1,2][3]exclusive_or_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. newint[1,2][3]and_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. newint[1,2][3]equality_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. newint[1,2][3]relational_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. newint[1,2][3]shift_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. newint[1,2][3]additive_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. newint[1,2][3]multiplicative_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. newint[1,2][3]unary_expression
2014-06-18 01:48:29 TRACE ConstructorExpression:19 - Constructor call added: newint[1,2][3]
2014-06-18 01:48:29 TRACE Expression:42 - Expression added: NEW
2014-06-18 01:48:29 TRACE Expression:43 - Token: 'new'
2014-06-18 01:48:29 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 01:48:29 TRACE Expression:45 - Expression text: newint[1,2][3]
2014-06-18 01:48:29 TRACE CompoundStatement:49 - stmt in da block: System.Console.WriteLine("Hello, World!");
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")assignment_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")conditional_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")logical_or_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")logical_and_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")inclusive_or_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")exclusive_or_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")and_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")equality_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")relational_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")shift_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")additive_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")multiplicative_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")unary_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. Systemprimary_expression
2014-06-18 01:48:29 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:48:29 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:48:29 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:48:29 TRACE Expression:45 - Expression text: System
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. Consoleprimary_expression
2014-06-18 01:48:29 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:48:29 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:48:29 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:48:29 TRACE Expression:45 - Expression text: Console
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. WriteLineprimary_expression
2014-06-18 01:48:29 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:48:29 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:48:29 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:48:29 TRACE Expression:45 - Expression text: WriteLine
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. "Hello, World!"assignment_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. "Hello, World!"conditional_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. "Hello, World!"logical_or_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. "Hello, World!"logical_and_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. "Hello, World!"inclusive_or_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. "Hello, World!"exclusive_or_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. "Hello, World!"and_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. "Hello, World!"equality_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. "Hello, World!"relational_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. "Hello, World!"shift_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. "Hello, World!"additive_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. "Hello, World!"multiplicative_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. "Hello, World!"unary_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. "Hello, World!"postfix_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. "Hello, World!"primary_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. "Hello, World!"constant
2014-06-18 01:48:29 TRACE Expression:42 - Expression added: CHARACTER_LITERAL
2014-06-18 01:48:29 TRACE Expression:43 - Token: STRING_LITERAL
2014-06-18 01:48:29 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$1
2014-06-18 01:48:29 TRACE Expression:45 - Expression text: "Hello, World!"
2014-06-18 01:48:29 TRACE PostfixExpression:50 - Constructor call added: WriteLine("Hello, World!")
2014-06-18 01:48:29 TRACE Expression:42 - Expression added: DOT
2014-06-18 01:48:29 TRACE Expression:43 - Token: '.'
2014-06-18 01:48:29 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 01:48:29 TRACE Expression:45 - Expression text: WriteLine("Hello, World!")
2014-06-18 01:48:29 TRACE PostfixExpression:50 - Constructor call added: Console.WriteLine("Hello, World!")
2014-06-18 01:48:29 TRACE Expression:42 - Expression added: DOT
2014-06-18 01:48:29 TRACE Expression:43 - Token: '.'
2014-06-18 01:48:29 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 01:48:29 TRACE Expression:45 - Expression text: Console.WriteLine("Hello, World!")
2014-06-18 01:48:29 TRACE PostfixExpression:50 - Constructor call added: System.Console.WriteLine("Hello, World!")
2014-06-18 01:48:29 TRACE Expression:42 - Expression added: DOT
2014-06-18 01:48:29 TRACE Expression:43 - Token: '.'
2014-06-18 01:48:29 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 01:48:29 TRACE Expression:45 - Expression text: System.Console.WriteLine("Hello, World!")
2014-06-18 01:48:29 TRACE CompoundStatement:49 - stmt in da block: a=6;
2014-06-18 01:48:29 TRACE Expression:42 - Expression added: ASSIGN
2014-06-18 01:48:29 TRACE Expression:43 - Token: '='
2014-06-18 01:48:29 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 01:48:29 TRACE Expression:45 - Expression text: a=6
2014-06-18 01:48:29 TRACE Expression:241 - int_visitLdcInsn: 555
2014-06-18 01:48:29 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. tstmultiplicative_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. tstunary_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. tstpostfix_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. tstprimary_expression
2014-06-18 01:48:29 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:48:29 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:48:29 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:48:29 TRACE Expression:45 - Expression text: tst
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 01:48:29 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:48:29 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:48:29 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:48:29 TRACE Expression:45 - Expression text: 1
2014-06-18 01:48:29 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 01:48:29 TRACE ClassMethod:95 - Compiling method Main w. args I. Is constructor: false
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. aunary_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. apostfix_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. aprimary_expression
2014-06-18 01:48:29 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:48:29 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:48:29 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:48:29 TRACE Expression:45 - Expression text: a
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 6assignment_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 6conditional_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 6logical_or_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 6logical_and_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 6inclusive_or_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 6exclusive_or_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 6and_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 6equality_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 6relational_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 6shift_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 6additive_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 6multiplicative_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 6unary_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 6postfix_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 6primary_expression
2014-06-18 01:48:29 WARN  Expression:121 - OneChild tree. 6constant
2014-06-18 01:48:29 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:48:29 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:48:29 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:48:29 TRACE Expression:45 - Expression text: 6
2014-06-18 01:48:29 TRACE Expression:241 - int_visitLdcInsn: 6
2014-06-18 01:48:42 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 01:48:42 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 01:48:42 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 01:48:42 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 01:48:43 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 01:48:43 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst+1;publicstaticvoidMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 01:48:43 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@68,298:298='}',<40>,15:0]}
2014-06-18 01:48:43 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 01:48:43 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 01:48:43 TRACE ClassDef:55 - Class name: Test
2014-06-18 01:48:43 TRACE Variable:30 - Field/variable added: tst
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 555assignment_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 555conditional_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 555logical_or_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 555logical_and_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 555inclusive_or_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 555exclusive_or_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 555and_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 555equality_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 555relational_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 555shift_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 555additive_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 555multiplicative_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 555unary_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 555postfix_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 555primary_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 555constant
2014-06-18 01:48:43 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:48:43 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:48:43 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:48:43 TRACE Expression:45 - Expression text: 555
2014-06-18 01:48:43 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 1assignment_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 1conditional_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 1logical_or_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 1logical_and_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 1inclusive_or_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 1exclusive_or_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 1and_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 1equality_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 1relational_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 1shift_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 01:48:43 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:48:43 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:48:43 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:48:43 TRACE Expression:45 - Expression text: 1
2014-06-18 01:48:43 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. tst+1assignment_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. tst+1conditional_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. tst+1logical_or_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. tst+1logical_and_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. tst+1inclusive_or_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. tst+1exclusive_or_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. tst+1and_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. tst+1equality_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. tst+1relational_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. tst+1shift_expression
2014-06-18 01:48:43 TRACE Expression:42 - Expression added: PLUS
2014-06-18 01:48:43 TRACE Expression:43 - Token: '+'
2014-06-18 01:48:43 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 01:48:43 TRACE Expression:45 - Expression text: tst+1
2014-06-18 01:48:43 TRACE ClassMethod:39 - Method added: Main
2014-06-18 01:48:43 TRACE Variable:30 - Field/variable added: s
2014-06-18 01:48:43 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 01:48:43 TRACE Variable:30 - Field/variable added: a
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 5assignment_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 5conditional_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 5logical_or_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 5logical_and_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 5inclusive_or_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 5exclusive_or_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 5and_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 5equality_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 5relational_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 5shift_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 5additive_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 5multiplicative_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 5unary_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 5postfix_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 5primary_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 5constant
2014-06-18 01:48:43 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:48:43 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:48:43 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:48:43 TRACE Expression:45 - Expression text: 5
2014-06-18 01:48:43 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 01:48:43 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. newint[1,2][3]assignment_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. newint[1,2][3]conditional_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. newint[1,2][3]logical_or_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. newint[1,2][3]logical_and_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. newint[1,2][3]inclusive_or_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. newint[1,2][3]exclusive_or_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. newint[1,2][3]and_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. newint[1,2][3]equality_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. newint[1,2][3]relational_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. newint[1,2][3]shift_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. newint[1,2][3]additive_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. newint[1,2][3]multiplicative_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. newint[1,2][3]unary_expression
2014-06-18 01:48:43 TRACE ConstructorExpression:19 - Constructor call added: newint[1,2][3]
2014-06-18 01:48:43 TRACE Expression:42 - Expression added: NEW
2014-06-18 01:48:43 TRACE Expression:43 - Token: 'new'
2014-06-18 01:48:43 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 01:48:43 TRACE Expression:45 - Expression text: newint[1,2][3]
2014-06-18 01:48:43 TRACE CompoundStatement:49 - stmt in da block: System.Console.WriteLine("Hello, World!");
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")assignment_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")conditional_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")logical_or_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")logical_and_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")inclusive_or_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")exclusive_or_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")and_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")equality_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")relational_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")shift_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")additive_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")multiplicative_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")unary_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. Systemprimary_expression
2014-06-18 01:48:43 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:48:43 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:48:43 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:48:43 TRACE Expression:45 - Expression text: System
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. Consoleprimary_expression
2014-06-18 01:48:43 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:48:43 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:48:43 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:48:43 TRACE Expression:45 - Expression text: Console
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. WriteLineprimary_expression
2014-06-18 01:48:43 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:48:43 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:48:43 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:48:43 TRACE Expression:45 - Expression text: WriteLine
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. "Hello, World!"assignment_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. "Hello, World!"conditional_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. "Hello, World!"logical_or_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. "Hello, World!"logical_and_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. "Hello, World!"inclusive_or_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. "Hello, World!"exclusive_or_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. "Hello, World!"and_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. "Hello, World!"equality_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. "Hello, World!"relational_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. "Hello, World!"shift_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. "Hello, World!"additive_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. "Hello, World!"multiplicative_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. "Hello, World!"unary_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. "Hello, World!"postfix_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. "Hello, World!"primary_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. "Hello, World!"constant
2014-06-18 01:48:43 TRACE Expression:42 - Expression added: CHARACTER_LITERAL
2014-06-18 01:48:43 TRACE Expression:43 - Token: STRING_LITERAL
2014-06-18 01:48:43 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$1
2014-06-18 01:48:43 TRACE Expression:45 - Expression text: "Hello, World!"
2014-06-18 01:48:43 TRACE PostfixExpression:50 - Constructor call added: WriteLine("Hello, World!")
2014-06-18 01:48:43 TRACE Expression:42 - Expression added: DOT
2014-06-18 01:48:43 TRACE Expression:43 - Token: '.'
2014-06-18 01:48:43 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 01:48:43 TRACE Expression:45 - Expression text: WriteLine("Hello, World!")
2014-06-18 01:48:43 TRACE PostfixExpression:50 - Constructor call added: Console.WriteLine("Hello, World!")
2014-06-18 01:48:43 TRACE Expression:42 - Expression added: DOT
2014-06-18 01:48:43 TRACE Expression:43 - Token: '.'
2014-06-18 01:48:43 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 01:48:43 TRACE Expression:45 - Expression text: Console.WriteLine("Hello, World!")
2014-06-18 01:48:43 TRACE PostfixExpression:50 - Constructor call added: System.Console.WriteLine("Hello, World!")
2014-06-18 01:48:43 TRACE Expression:42 - Expression added: DOT
2014-06-18 01:48:43 TRACE Expression:43 - Token: '.'
2014-06-18 01:48:43 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 01:48:43 TRACE Expression:45 - Expression text: System.Console.WriteLine("Hello, World!")
2014-06-18 01:48:43 TRACE CompoundStatement:49 - stmt in da block: a=6;
2014-06-18 01:48:43 TRACE Expression:42 - Expression added: ASSIGN
2014-06-18 01:48:43 TRACE Expression:43 - Token: '='
2014-06-18 01:48:43 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 01:48:43 TRACE Expression:45 - Expression text: a=6
2014-06-18 01:48:43 TRACE Expression:241 - int_visitLdcInsn: 555
2014-06-18 01:48:43 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. tstmultiplicative_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. tstunary_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. tstpostfix_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. tstprimary_expression
2014-06-18 01:48:43 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:48:43 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:48:43 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:48:43 TRACE Expression:45 - Expression text: tst
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 01:48:43 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:48:43 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:48:43 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:48:43 TRACE Expression:45 - Expression text: 1
2014-06-18 01:48:43 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 01:48:43 TRACE ClassMethod:95 - Compiling method Main w. args V. Is constructor: false
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. aunary_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. apostfix_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. aprimary_expression
2014-06-18 01:48:43 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:48:43 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:48:43 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:48:43 TRACE Expression:45 - Expression text: a
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 6assignment_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 6conditional_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 6logical_or_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 6logical_and_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 6inclusive_or_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 6exclusive_or_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 6and_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 6equality_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 6relational_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 6shift_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 6additive_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 6multiplicative_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 6unary_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 6postfix_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 6primary_expression
2014-06-18 01:48:43 WARN  Expression:121 - OneChild tree. 6constant
2014-06-18 01:48:43 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:48:43 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:48:43 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:48:43 TRACE Expression:45 - Expression text: 6
2014-06-18 01:48:43 TRACE Expression:241 - int_visitLdcInsn: 6
2014-06-18 01:57:31 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 01:57:31 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 01:57:31 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 01:57:31 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 01:57:31 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 01:57:31 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst+1;publicstaticvoidMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 01:57:31 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@68,298:298='}',<40>,15:0]}
2014-06-18 01:57:31 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 01:57:31 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 01:57:31 TRACE ClassDef:55 - Class name: Test
2014-06-18 01:57:31 TRACE Variable:30 - Field/variable added: tst
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 555assignment_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 555conditional_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 555logical_or_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 555logical_and_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 555inclusive_or_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 555exclusive_or_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 555and_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 555equality_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 555relational_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 555shift_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 555additive_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 555multiplicative_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 555unary_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 555postfix_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 555primary_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 555constant
2014-06-18 01:57:31 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:57:31 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:57:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:57:31 TRACE Expression:45 - Expression text: 555
2014-06-18 01:57:31 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 1assignment_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 1conditional_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 1logical_or_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 1logical_and_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 1inclusive_or_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 1exclusive_or_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 1and_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 1equality_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 1relational_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 1shift_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 01:57:31 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:57:31 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:57:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:57:31 TRACE Expression:45 - Expression text: 1
2014-06-18 01:57:31 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. tst+1assignment_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. tst+1conditional_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. tst+1logical_or_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. tst+1logical_and_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. tst+1inclusive_or_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. tst+1exclusive_or_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. tst+1and_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. tst+1equality_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. tst+1relational_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. tst+1shift_expression
2014-06-18 01:57:31 TRACE Expression:42 - Expression added: PLUS
2014-06-18 01:57:31 TRACE Expression:43 - Token: '+'
2014-06-18 01:57:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 01:57:31 TRACE Expression:45 - Expression text: tst+1
2014-06-18 01:57:31 TRACE ClassMethod:39 - Method added: Main
2014-06-18 01:57:31 TRACE Variable:30 - Field/variable added: s
2014-06-18 01:57:31 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 01:57:31 TRACE Variable:30 - Field/variable added: a
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 5assignment_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 5conditional_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 5logical_or_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 5logical_and_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 5inclusive_or_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 5exclusive_or_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 5and_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 5equality_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 5relational_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 5shift_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 5additive_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 5multiplicative_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 5unary_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 5postfix_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 5primary_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 5constant
2014-06-18 01:57:31 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:57:31 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:57:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:57:31 TRACE Expression:45 - Expression text: 5
2014-06-18 01:57:31 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 01:57:31 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. newint[1,2][3]assignment_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. newint[1,2][3]conditional_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. newint[1,2][3]logical_or_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. newint[1,2][3]logical_and_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. newint[1,2][3]inclusive_or_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. newint[1,2][3]exclusive_or_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. newint[1,2][3]and_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. newint[1,2][3]equality_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. newint[1,2][3]relational_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. newint[1,2][3]shift_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. newint[1,2][3]additive_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. newint[1,2][3]multiplicative_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. newint[1,2][3]unary_expression
2014-06-18 01:57:31 TRACE ConstructorExpression:19 - Constructor call added: newint[1,2][3]
2014-06-18 01:57:31 TRACE Expression:42 - Expression added: NEW
2014-06-18 01:57:31 TRACE Expression:43 - Token: 'new'
2014-06-18 01:57:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 01:57:31 TRACE Expression:45 - Expression text: newint[1,2][3]
2014-06-18 01:57:31 TRACE CompoundStatement:49 - stmt in da block: System.Console.WriteLine("Hello, World!");
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")assignment_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")conditional_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")logical_or_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")logical_and_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")inclusive_or_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")exclusive_or_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")and_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")equality_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")relational_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")shift_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")additive_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")multiplicative_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")unary_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. Systemprimary_expression
2014-06-18 01:57:31 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:57:31 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:57:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:57:31 TRACE Expression:45 - Expression text: System
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. Consoleprimary_expression
2014-06-18 01:57:31 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:57:31 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:57:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:57:31 TRACE Expression:45 - Expression text: Console
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. WriteLineprimary_expression
2014-06-18 01:57:31 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:57:31 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:57:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:57:31 TRACE Expression:45 - Expression text: WriteLine
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. "Hello, World!"assignment_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. "Hello, World!"conditional_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. "Hello, World!"logical_or_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. "Hello, World!"logical_and_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. "Hello, World!"inclusive_or_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. "Hello, World!"exclusive_or_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. "Hello, World!"and_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. "Hello, World!"equality_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. "Hello, World!"relational_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. "Hello, World!"shift_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. "Hello, World!"additive_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. "Hello, World!"multiplicative_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. "Hello, World!"unary_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. "Hello, World!"postfix_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. "Hello, World!"primary_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. "Hello, World!"constant
2014-06-18 01:57:31 TRACE Expression:42 - Expression added: CHARACTER_LITERAL
2014-06-18 01:57:31 TRACE Expression:43 - Token: STRING_LITERAL
2014-06-18 01:57:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$1
2014-06-18 01:57:31 TRACE Expression:45 - Expression text: "Hello, World!"
2014-06-18 01:57:31 TRACE PostfixExpression:50 - Constructor call added: WriteLine("Hello, World!")
2014-06-18 01:57:31 TRACE Expression:42 - Expression added: DOT
2014-06-18 01:57:31 TRACE Expression:43 - Token: '.'
2014-06-18 01:57:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 01:57:31 TRACE Expression:45 - Expression text: WriteLine("Hello, World!")
2014-06-18 01:57:31 TRACE PostfixExpression:50 - Constructor call added: Console.WriteLine("Hello, World!")
2014-06-18 01:57:31 TRACE Expression:42 - Expression added: DOT
2014-06-18 01:57:31 TRACE Expression:43 - Token: '.'
2014-06-18 01:57:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 01:57:31 TRACE Expression:45 - Expression text: Console.WriteLine("Hello, World!")
2014-06-18 01:57:31 TRACE PostfixExpression:50 - Constructor call added: System.Console.WriteLine("Hello, World!")
2014-06-18 01:57:31 TRACE Expression:42 - Expression added: DOT
2014-06-18 01:57:31 TRACE Expression:43 - Token: '.'
2014-06-18 01:57:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 01:57:31 TRACE Expression:45 - Expression text: System.Console.WriteLine("Hello, World!")
2014-06-18 01:57:31 TRACE CompoundStatement:49 - stmt in da block: a=6;
2014-06-18 01:57:31 TRACE Expression:42 - Expression added: ASSIGN
2014-06-18 01:57:31 TRACE Expression:43 - Token: '='
2014-06-18 01:57:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 01:57:31 TRACE Expression:45 - Expression text: a=6
2014-06-18 01:57:31 TRACE Expression:241 - int_visitLdcInsn: 555
2014-06-18 01:57:31 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. tstmultiplicative_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. tstunary_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. tstpostfix_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. tstprimary_expression
2014-06-18 01:57:31 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:57:31 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:57:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:57:31 TRACE Expression:45 - Expression text: tst
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 01:57:31 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:57:31 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:57:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:57:31 TRACE Expression:45 - Expression text: 1
2014-06-18 01:57:31 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 01:57:31 TRACE ClassMethod:95 - Compiling method Main w. args V. Is constructor: false
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. aunary_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. apostfix_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. aprimary_expression
2014-06-18 01:57:31 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:57:31 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:57:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:57:31 TRACE Expression:45 - Expression text: a
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 6assignment_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 6conditional_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 6logical_or_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 6logical_and_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 6inclusive_or_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 6exclusive_or_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 6and_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 6equality_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 6relational_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 6shift_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 6additive_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 6multiplicative_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 6unary_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 6postfix_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 6primary_expression
2014-06-18 01:57:31 WARN  Expression:121 - OneChild tree. 6constant
2014-06-18 01:57:31 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:57:31 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:57:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:57:31 TRACE Expression:45 - Expression text: 6
2014-06-18 01:57:31 TRACE Expression:241 - int_visitLdcInsn: 6
2014-06-18 01:58:11 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 01:58:11 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 01:58:11 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 01:58:11 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 01:58:12 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 01:58:12 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst+1;publicstaticvoidMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 01:58:12 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@68,298:298='}',<40>,15:0]}
2014-06-18 01:58:12 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 01:58:12 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 01:58:12 TRACE ClassDef:55 - Class name: Test
2014-06-18 01:58:12 TRACE Variable:30 - Field/variable added: tst
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 555assignment_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 555conditional_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 555logical_or_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 555logical_and_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 555inclusive_or_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 555exclusive_or_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 555and_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 555equality_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 555relational_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 555shift_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 555additive_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 555multiplicative_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 555unary_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 555postfix_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 555primary_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 555constant
2014-06-18 01:58:12 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:58:12 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:58:12 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:58:12 TRACE Expression:45 - Expression text: 555
2014-06-18 01:58:12 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 1assignment_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 1conditional_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 1logical_or_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 1logical_and_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 1inclusive_or_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 1exclusive_or_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 1and_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 1equality_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 1relational_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 1shift_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 01:58:12 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:58:12 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:58:12 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:58:12 TRACE Expression:45 - Expression text: 1
2014-06-18 01:58:12 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. tst+1assignment_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. tst+1conditional_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. tst+1logical_or_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. tst+1logical_and_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. tst+1inclusive_or_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. tst+1exclusive_or_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. tst+1and_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. tst+1equality_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. tst+1relational_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. tst+1shift_expression
2014-06-18 01:58:12 TRACE Expression:42 - Expression added: PLUS
2014-06-18 01:58:12 TRACE Expression:43 - Token: '+'
2014-06-18 01:58:12 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 01:58:12 TRACE Expression:45 - Expression text: tst+1
2014-06-18 01:58:12 TRACE ClassMethod:39 - Method added: Main
2014-06-18 01:58:12 TRACE Variable:30 - Field/variable added: s
2014-06-18 01:58:12 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 01:58:12 TRACE Variable:30 - Field/variable added: a
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 5assignment_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 5conditional_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 5logical_or_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 5logical_and_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 5inclusive_or_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 5exclusive_or_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 5and_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 5equality_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 5relational_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 5shift_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 5additive_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 5multiplicative_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 5unary_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 5postfix_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 5primary_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 5constant
2014-06-18 01:58:12 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:58:12 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:58:12 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:58:12 TRACE Expression:45 - Expression text: 5
2014-06-18 01:58:12 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 01:58:12 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. newint[1,2][3]assignment_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. newint[1,2][3]conditional_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. newint[1,2][3]logical_or_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. newint[1,2][3]logical_and_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. newint[1,2][3]inclusive_or_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. newint[1,2][3]exclusive_or_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. newint[1,2][3]and_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. newint[1,2][3]equality_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. newint[1,2][3]relational_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. newint[1,2][3]shift_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. newint[1,2][3]additive_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. newint[1,2][3]multiplicative_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. newint[1,2][3]unary_expression
2014-06-18 01:58:12 TRACE ConstructorExpression:19 - Constructor call added: newint[1,2][3]
2014-06-18 01:58:12 TRACE Expression:42 - Expression added: NEW
2014-06-18 01:58:12 TRACE Expression:43 - Token: 'new'
2014-06-18 01:58:12 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 01:58:12 TRACE Expression:45 - Expression text: newint[1,2][3]
2014-06-18 01:58:12 TRACE CompoundStatement:49 - stmt in da block: System.Console.WriteLine("Hello, World!");
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")assignment_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")conditional_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")logical_or_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")logical_and_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")inclusive_or_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")exclusive_or_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")and_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")equality_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")relational_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")shift_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")additive_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")multiplicative_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")unary_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. Systemprimary_expression
2014-06-18 01:58:12 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:58:12 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:58:12 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:58:12 TRACE Expression:45 - Expression text: System
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. Consoleprimary_expression
2014-06-18 01:58:12 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:58:12 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:58:12 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:58:12 TRACE Expression:45 - Expression text: Console
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. WriteLineprimary_expression
2014-06-18 01:58:12 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:58:12 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:58:12 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:58:12 TRACE Expression:45 - Expression text: WriteLine
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. "Hello, World!"assignment_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. "Hello, World!"conditional_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. "Hello, World!"logical_or_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. "Hello, World!"logical_and_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. "Hello, World!"inclusive_or_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. "Hello, World!"exclusive_or_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. "Hello, World!"and_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. "Hello, World!"equality_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. "Hello, World!"relational_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. "Hello, World!"shift_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. "Hello, World!"additive_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. "Hello, World!"multiplicative_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. "Hello, World!"unary_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. "Hello, World!"postfix_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. "Hello, World!"primary_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. "Hello, World!"constant
2014-06-18 01:58:12 TRACE Expression:42 - Expression added: CHARACTER_LITERAL
2014-06-18 01:58:12 TRACE Expression:43 - Token: STRING_LITERAL
2014-06-18 01:58:12 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$1
2014-06-18 01:58:12 TRACE Expression:45 - Expression text: "Hello, World!"
2014-06-18 01:58:12 TRACE PostfixExpression:50 - Constructor call added: WriteLine("Hello, World!")
2014-06-18 01:58:12 TRACE Expression:42 - Expression added: DOT
2014-06-18 01:58:12 TRACE Expression:43 - Token: '.'
2014-06-18 01:58:12 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 01:58:12 TRACE Expression:45 - Expression text: WriteLine("Hello, World!")
2014-06-18 01:58:12 TRACE PostfixExpression:50 - Constructor call added: Console.WriteLine("Hello, World!")
2014-06-18 01:58:12 TRACE Expression:42 - Expression added: DOT
2014-06-18 01:58:12 TRACE Expression:43 - Token: '.'
2014-06-18 01:58:12 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 01:58:12 TRACE Expression:45 - Expression text: Console.WriteLine("Hello, World!")
2014-06-18 01:58:12 TRACE PostfixExpression:50 - Constructor call added: System.Console.WriteLine("Hello, World!")
2014-06-18 01:58:12 TRACE Expression:42 - Expression added: DOT
2014-06-18 01:58:12 TRACE Expression:43 - Token: '.'
2014-06-18 01:58:12 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 01:58:12 TRACE Expression:45 - Expression text: System.Console.WriteLine("Hello, World!")
2014-06-18 01:58:12 TRACE CompoundStatement:49 - stmt in da block: a=6;
2014-06-18 01:58:12 TRACE Expression:42 - Expression added: ASSIGN
2014-06-18 01:58:12 TRACE Expression:43 - Token: '='
2014-06-18 01:58:12 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 01:58:12 TRACE Expression:45 - Expression text: a=6
2014-06-18 01:58:12 TRACE Expression:241 - int_visitLdcInsn: 555
2014-06-18 01:58:12 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. tstmultiplicative_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. tstunary_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. tstpostfix_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. tstprimary_expression
2014-06-18 01:58:12 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:58:12 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:58:12 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:58:12 TRACE Expression:45 - Expression text: tst
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 01:58:12 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:58:12 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:58:12 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:58:12 TRACE Expression:45 - Expression text: 1
2014-06-18 01:58:12 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 01:58:12 TRACE ClassMethod:95 - Compiling method Main w. args V. Is constructor: false
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. aunary_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. apostfix_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. aprimary_expression
2014-06-18 01:58:12 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 01:58:12 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 01:58:12 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 01:58:12 TRACE Expression:45 - Expression text: a
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 6assignment_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 6conditional_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 6logical_or_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 6logical_and_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 6inclusive_or_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 6exclusive_or_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 6and_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 6equality_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 6relational_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 6shift_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 6additive_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 6multiplicative_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 6unary_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 6postfix_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 6primary_expression
2014-06-18 01:58:12 WARN  Expression:121 - OneChild tree. 6constant
2014-06-18 01:58:12 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 01:58:12 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 01:58:12 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 01:58:12 TRACE Expression:45 - Expression text: 6
2014-06-18 01:58:12 TRACE Expression:241 - int_visitLdcInsn: 6
2014-06-18 02:03:25 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 02:03:25 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 02:03:25 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 02:03:25 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 02:03:26 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 02:03:26 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst+1;publicstaticvoidMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 02:03:26 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@68,298:298='}',<40>,15:0]}
2014-06-18 02:03:26 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 02:03:26 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 02:03:26 TRACE ClassDef:55 - Class name: Test
2014-06-18 02:03:26 TRACE Variable:30 - Field/variable added: tst
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 555assignment_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 555conditional_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 555logical_or_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 555logical_and_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 555inclusive_or_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 555exclusive_or_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 555and_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 555equality_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 555relational_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 555shift_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 555additive_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 555multiplicative_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 555unary_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 555postfix_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 555primary_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 555constant
2014-06-18 02:03:26 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:03:26 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:03:26 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:03:26 TRACE Expression:45 - Expression text: 555
2014-06-18 02:03:26 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 1assignment_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 1conditional_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 1logical_or_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 1logical_and_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 1inclusive_or_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 1exclusive_or_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 1and_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 1equality_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 1relational_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 1shift_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 02:03:26 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:03:26 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:03:26 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:03:26 TRACE Expression:45 - Expression text: 1
2014-06-18 02:03:26 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. tst+1assignment_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. tst+1conditional_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. tst+1logical_or_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. tst+1logical_and_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. tst+1inclusive_or_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. tst+1exclusive_or_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. tst+1and_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. tst+1equality_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. tst+1relational_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. tst+1shift_expression
2014-06-18 02:03:26 TRACE Expression:42 - Expression added: PLUS
2014-06-18 02:03:26 TRACE Expression:43 - Token: '+'
2014-06-18 02:03:26 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 02:03:26 TRACE Expression:45 - Expression text: tst+1
2014-06-18 02:03:26 TRACE ClassMethod:39 - Method added: Main
2014-06-18 02:03:26 TRACE Variable:30 - Field/variable added: s
2014-06-18 02:03:26 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 02:03:26 TRACE Variable:30 - Field/variable added: a
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 5assignment_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 5conditional_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 5logical_or_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 5logical_and_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 5inclusive_or_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 5exclusive_or_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 5and_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 5equality_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 5relational_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 5shift_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 5additive_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 5multiplicative_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 5unary_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 5postfix_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 5primary_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 5constant
2014-06-18 02:03:26 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:03:26 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:03:26 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:03:26 TRACE Expression:45 - Expression text: 5
2014-06-18 02:03:26 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 02:03:26 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. newint[1,2][3]assignment_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. newint[1,2][3]conditional_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. newint[1,2][3]logical_or_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. newint[1,2][3]logical_and_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. newint[1,2][3]inclusive_or_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. newint[1,2][3]exclusive_or_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. newint[1,2][3]and_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. newint[1,2][3]equality_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. newint[1,2][3]relational_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. newint[1,2][3]shift_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. newint[1,2][3]additive_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. newint[1,2][3]multiplicative_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. newint[1,2][3]unary_expression
2014-06-18 02:03:26 TRACE ConstructorExpression:19 - Constructor call added: newint[1,2][3]
2014-06-18 02:03:26 TRACE Expression:42 - Expression added: NEW
2014-06-18 02:03:26 TRACE Expression:43 - Token: 'new'
2014-06-18 02:03:26 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 02:03:26 TRACE Expression:45 - Expression text: newint[1,2][3]
2014-06-18 02:03:26 TRACE CompoundStatement:49 - stmt in da block: System.Console.WriteLine("Hello, World!");
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")assignment_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")conditional_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")logical_or_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")logical_and_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")inclusive_or_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")exclusive_or_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")and_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")equality_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")relational_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")shift_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")additive_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")multiplicative_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")unary_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. Systemprimary_expression
2014-06-18 02:03:26 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:03:26 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:03:26 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:03:26 TRACE Expression:45 - Expression text: System
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. Consoleprimary_expression
2014-06-18 02:03:26 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:03:26 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:03:26 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:03:26 TRACE Expression:45 - Expression text: Console
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. WriteLineprimary_expression
2014-06-18 02:03:26 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:03:26 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:03:26 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:03:26 TRACE Expression:45 - Expression text: WriteLine
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. "Hello, World!"assignment_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. "Hello, World!"conditional_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. "Hello, World!"logical_or_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. "Hello, World!"logical_and_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. "Hello, World!"inclusive_or_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. "Hello, World!"exclusive_or_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. "Hello, World!"and_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. "Hello, World!"equality_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. "Hello, World!"relational_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. "Hello, World!"shift_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. "Hello, World!"additive_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. "Hello, World!"multiplicative_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. "Hello, World!"unary_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. "Hello, World!"postfix_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. "Hello, World!"primary_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. "Hello, World!"constant
2014-06-18 02:03:26 TRACE Expression:42 - Expression added: CHARACTER_LITERAL
2014-06-18 02:03:26 TRACE Expression:43 - Token: STRING_LITERAL
2014-06-18 02:03:26 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$1
2014-06-18 02:03:26 TRACE Expression:45 - Expression text: "Hello, World!"
2014-06-18 02:03:26 TRACE PostfixExpression:50 - Constructor call added: WriteLine("Hello, World!")
2014-06-18 02:03:26 TRACE Expression:42 - Expression added: DOT
2014-06-18 02:03:26 TRACE Expression:43 - Token: '.'
2014-06-18 02:03:26 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 02:03:26 TRACE Expression:45 - Expression text: WriteLine("Hello, World!")
2014-06-18 02:03:26 TRACE PostfixExpression:50 - Constructor call added: Console.WriteLine("Hello, World!")
2014-06-18 02:03:26 TRACE Expression:42 - Expression added: DOT
2014-06-18 02:03:26 TRACE Expression:43 - Token: '.'
2014-06-18 02:03:26 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 02:03:26 TRACE Expression:45 - Expression text: Console.WriteLine("Hello, World!")
2014-06-18 02:03:26 TRACE PostfixExpression:50 - Constructor call added: System.Console.WriteLine("Hello, World!")
2014-06-18 02:03:26 TRACE Expression:42 - Expression added: DOT
2014-06-18 02:03:26 TRACE Expression:43 - Token: '.'
2014-06-18 02:03:26 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 02:03:26 TRACE Expression:45 - Expression text: System.Console.WriteLine("Hello, World!")
2014-06-18 02:03:26 TRACE CompoundStatement:49 - stmt in da block: a=6;
2014-06-18 02:03:26 TRACE Expression:42 - Expression added: ASSIGN
2014-06-18 02:03:26 TRACE Expression:43 - Token: '='
2014-06-18 02:03:26 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 02:03:26 TRACE Expression:45 - Expression text: a=6
2014-06-18 02:03:26 TRACE Expression:241 - int_visitLdcInsn: 555
2014-06-18 02:03:26 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. tstmultiplicative_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. tstunary_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. tstpostfix_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. tstprimary_expression
2014-06-18 02:03:26 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:03:26 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:03:26 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:03:26 TRACE Expression:45 - Expression text: tst
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 02:03:26 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:03:26 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:03:26 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:03:26 TRACE Expression:45 - Expression text: 1
2014-06-18 02:03:26 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 02:03:26 TRACE ClassMethod:95 - Compiling method Main w. args V. Is constructor: false
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. aunary_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. apostfix_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. aprimary_expression
2014-06-18 02:03:26 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:03:26 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:03:26 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:03:26 TRACE Expression:45 - Expression text: a
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 6assignment_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 6conditional_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 6logical_or_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 6logical_and_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 6inclusive_or_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 6exclusive_or_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 6and_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 6equality_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 6relational_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 6shift_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 6additive_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 6multiplicative_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 6unary_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 6postfix_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 6primary_expression
2014-06-18 02:03:26 WARN  Expression:121 - OneChild tree. 6constant
2014-06-18 02:03:26 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:03:26 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:03:26 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:03:26 TRACE Expression:45 - Expression text: 6
2014-06-18 02:03:26 TRACE Expression:241 - int_visitLdcInsn: 6
2014-06-18 02:03:38 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 02:03:38 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 02:03:38 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 02:03:38 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 02:03:39 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 02:03:39 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst+1;publicstaticvoidMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 02:03:39 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@68,298:298='}',<40>,15:0]}
2014-06-18 02:03:39 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 02:03:39 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 02:03:39 TRACE ClassDef:55 - Class name: Test
2014-06-18 02:03:39 TRACE Variable:30 - Field/variable added: tst
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 555assignment_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 555conditional_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 555logical_or_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 555logical_and_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 555inclusive_or_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 555exclusive_or_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 555and_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 555equality_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 555relational_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 555shift_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 555additive_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 555multiplicative_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 555unary_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 555postfix_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 555primary_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 555constant
2014-06-18 02:03:39 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:03:39 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:03:39 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:03:39 TRACE Expression:45 - Expression text: 555
2014-06-18 02:03:39 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 1assignment_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 1conditional_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 1logical_or_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 1logical_and_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 1inclusive_or_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 1exclusive_or_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 1and_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 1equality_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 1relational_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 1shift_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 02:03:39 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:03:39 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:03:39 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:03:39 TRACE Expression:45 - Expression text: 1
2014-06-18 02:03:39 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. tst+1assignment_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. tst+1conditional_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. tst+1logical_or_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. tst+1logical_and_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. tst+1inclusive_or_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. tst+1exclusive_or_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. tst+1and_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. tst+1equality_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. tst+1relational_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. tst+1shift_expression
2014-06-18 02:03:39 TRACE Expression:42 - Expression added: PLUS
2014-06-18 02:03:39 TRACE Expression:43 - Token: '+'
2014-06-18 02:03:39 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 02:03:39 TRACE Expression:45 - Expression text: tst+1
2014-06-18 02:03:39 TRACE ClassMethod:39 - Method added: Main
2014-06-18 02:03:39 TRACE Variable:30 - Field/variable added: s
2014-06-18 02:03:39 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 02:03:39 TRACE Variable:30 - Field/variable added: a
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 5assignment_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 5conditional_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 5logical_or_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 5logical_and_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 5inclusive_or_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 5exclusive_or_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 5and_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 5equality_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 5relational_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 5shift_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 5additive_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 5multiplicative_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 5unary_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 5postfix_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 5primary_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 5constant
2014-06-18 02:03:39 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:03:39 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:03:39 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:03:39 TRACE Expression:45 - Expression text: 5
2014-06-18 02:03:39 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 02:03:39 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. newint[1,2][3]assignment_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. newint[1,2][3]conditional_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. newint[1,2][3]logical_or_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. newint[1,2][3]logical_and_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. newint[1,2][3]inclusive_or_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. newint[1,2][3]exclusive_or_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. newint[1,2][3]and_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. newint[1,2][3]equality_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. newint[1,2][3]relational_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. newint[1,2][3]shift_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. newint[1,2][3]additive_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. newint[1,2][3]multiplicative_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. newint[1,2][3]unary_expression
2014-06-18 02:03:39 TRACE ConstructorExpression:19 - Constructor call added: newint[1,2][3]
2014-06-18 02:03:39 TRACE Expression:42 - Expression added: NEW
2014-06-18 02:03:39 TRACE Expression:43 - Token: 'new'
2014-06-18 02:03:39 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 02:03:39 TRACE Expression:45 - Expression text: newint[1,2][3]
2014-06-18 02:03:39 TRACE CompoundStatement:49 - stmt in da block: System.Console.WriteLine("Hello, World!");
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")assignment_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")conditional_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")logical_or_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")logical_and_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")inclusive_or_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")exclusive_or_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")and_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")equality_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")relational_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")shift_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")additive_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")multiplicative_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")unary_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. Systemprimary_expression
2014-06-18 02:03:39 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:03:39 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:03:39 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:03:39 TRACE Expression:45 - Expression text: System
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. Consoleprimary_expression
2014-06-18 02:03:39 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:03:39 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:03:39 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:03:39 TRACE Expression:45 - Expression text: Console
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. WriteLineprimary_expression
2014-06-18 02:03:39 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:03:39 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:03:39 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:03:39 TRACE Expression:45 - Expression text: WriteLine
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. "Hello, World!"assignment_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. "Hello, World!"conditional_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. "Hello, World!"logical_or_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. "Hello, World!"logical_and_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. "Hello, World!"inclusive_or_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. "Hello, World!"exclusive_or_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. "Hello, World!"and_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. "Hello, World!"equality_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. "Hello, World!"relational_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. "Hello, World!"shift_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. "Hello, World!"additive_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. "Hello, World!"multiplicative_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. "Hello, World!"unary_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. "Hello, World!"postfix_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. "Hello, World!"primary_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. "Hello, World!"constant
2014-06-18 02:03:39 TRACE Expression:42 - Expression added: CHARACTER_LITERAL
2014-06-18 02:03:39 TRACE Expression:43 - Token: STRING_LITERAL
2014-06-18 02:03:39 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$1
2014-06-18 02:03:39 TRACE Expression:45 - Expression text: "Hello, World!"
2014-06-18 02:03:39 TRACE PostfixExpression:50 - Constructor call added: WriteLine("Hello, World!")
2014-06-18 02:03:39 TRACE Expression:42 - Expression added: DOT
2014-06-18 02:03:39 TRACE Expression:43 - Token: '.'
2014-06-18 02:03:39 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 02:03:39 TRACE Expression:45 - Expression text: WriteLine("Hello, World!")
2014-06-18 02:03:39 TRACE PostfixExpression:50 - Constructor call added: Console.WriteLine("Hello, World!")
2014-06-18 02:03:39 TRACE Expression:42 - Expression added: DOT
2014-06-18 02:03:39 TRACE Expression:43 - Token: '.'
2014-06-18 02:03:39 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 02:03:39 TRACE Expression:45 - Expression text: Console.WriteLine("Hello, World!")
2014-06-18 02:03:39 TRACE PostfixExpression:50 - Constructor call added: System.Console.WriteLine("Hello, World!")
2014-06-18 02:03:39 TRACE Expression:42 - Expression added: DOT
2014-06-18 02:03:39 TRACE Expression:43 - Token: '.'
2014-06-18 02:03:39 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 02:03:39 TRACE Expression:45 - Expression text: System.Console.WriteLine("Hello, World!")
2014-06-18 02:03:39 TRACE CompoundStatement:49 - stmt in da block: a=6;
2014-06-18 02:03:39 TRACE Expression:42 - Expression added: ASSIGN
2014-06-18 02:03:39 TRACE Expression:43 - Token: '='
2014-06-18 02:03:39 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 02:03:39 TRACE Expression:45 - Expression text: a=6
2014-06-18 02:03:39 TRACE Expression:241 - int_visitLdcInsn: 555
2014-06-18 02:03:39 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. tstmultiplicative_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. tstunary_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. tstpostfix_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. tstprimary_expression
2014-06-18 02:03:39 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:03:39 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:03:39 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:03:39 TRACE Expression:45 - Expression text: tst
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 02:03:39 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:03:39 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:03:39 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:03:39 TRACE Expression:45 - Expression text: 1
2014-06-18 02:03:39 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 02:03:39 TRACE ClassMethod:95 - Compiling method Main w. args V. Is constructor: false
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. aunary_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. apostfix_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. aprimary_expression
2014-06-18 02:03:39 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:03:39 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:03:39 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:03:39 TRACE Expression:45 - Expression text: a
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 6assignment_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 6conditional_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 6logical_or_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 6logical_and_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 6inclusive_or_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 6exclusive_or_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 6and_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 6equality_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 6relational_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 6shift_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 6additive_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 6multiplicative_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 6unary_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 6postfix_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 6primary_expression
2014-06-18 02:03:39 WARN  Expression:121 - OneChild tree. 6constant
2014-06-18 02:03:39 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:03:39 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:03:39 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:03:39 TRACE Expression:45 - Expression text: 6
2014-06-18 02:03:39 TRACE Expression:241 - int_visitLdcInsn: 6
2014-06-18 02:03:54 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 02:03:54 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 02:03:54 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 02:03:54 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 02:03:55 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 02:03:55 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst+1;publicstaticvoidMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 02:03:55 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@68,298:298='}',<40>,15:0]}
2014-06-18 02:03:55 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 02:03:55 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 02:03:55 TRACE ClassDef:55 - Class name: Test
2014-06-18 02:03:55 TRACE Variable:30 - Field/variable added: tst
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 555assignment_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 555conditional_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 555logical_or_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 555logical_and_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 555inclusive_or_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 555exclusive_or_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 555and_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 555equality_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 555relational_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 555shift_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 555additive_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 555multiplicative_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 555unary_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 555postfix_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 555primary_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 555constant
2014-06-18 02:03:55 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:03:55 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:03:55 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:03:55 TRACE Expression:45 - Expression text: 555
2014-06-18 02:03:55 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 1assignment_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 1conditional_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 1logical_or_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 1logical_and_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 1inclusive_or_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 1exclusive_or_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 1and_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 1equality_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 1relational_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 1shift_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 02:03:55 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:03:55 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:03:55 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:03:55 TRACE Expression:45 - Expression text: 1
2014-06-18 02:03:55 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. tst+1assignment_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. tst+1conditional_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. tst+1logical_or_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. tst+1logical_and_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. tst+1inclusive_or_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. tst+1exclusive_or_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. tst+1and_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. tst+1equality_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. tst+1relational_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. tst+1shift_expression
2014-06-18 02:03:55 TRACE Expression:42 - Expression added: PLUS
2014-06-18 02:03:55 TRACE Expression:43 - Token: '+'
2014-06-18 02:03:55 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 02:03:55 TRACE Expression:45 - Expression text: tst+1
2014-06-18 02:03:55 TRACE ClassMethod:39 - Method added: Main
2014-06-18 02:03:55 TRACE Variable:30 - Field/variable added: s
2014-06-18 02:03:55 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 02:03:55 TRACE Variable:30 - Field/variable added: a
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 5assignment_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 5conditional_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 5logical_or_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 5logical_and_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 5inclusive_or_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 5exclusive_or_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 5and_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 5equality_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 5relational_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 5shift_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 5additive_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 5multiplicative_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 5unary_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 5postfix_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 5primary_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 5constant
2014-06-18 02:03:55 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:03:55 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:03:55 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:03:55 TRACE Expression:45 - Expression text: 5
2014-06-18 02:03:55 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 02:03:55 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. newint[1,2][3]assignment_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. newint[1,2][3]conditional_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. newint[1,2][3]logical_or_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. newint[1,2][3]logical_and_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. newint[1,2][3]inclusive_or_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. newint[1,2][3]exclusive_or_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. newint[1,2][3]and_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. newint[1,2][3]equality_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. newint[1,2][3]relational_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. newint[1,2][3]shift_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. newint[1,2][3]additive_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. newint[1,2][3]multiplicative_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. newint[1,2][3]unary_expression
2014-06-18 02:03:55 TRACE ConstructorExpression:19 - Constructor call added: newint[1,2][3]
2014-06-18 02:03:55 TRACE Expression:42 - Expression added: NEW
2014-06-18 02:03:55 TRACE Expression:43 - Token: 'new'
2014-06-18 02:03:55 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 02:03:55 TRACE Expression:45 - Expression text: newint[1,2][3]
2014-06-18 02:03:55 TRACE CompoundStatement:49 - stmt in da block: System.Console.WriteLine("Hello, World!");
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")assignment_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")conditional_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")logical_or_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")logical_and_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")inclusive_or_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")exclusive_or_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")and_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")equality_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")relational_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")shift_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")additive_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")multiplicative_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")unary_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. Systemprimary_expression
2014-06-18 02:03:55 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:03:55 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:03:55 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:03:55 TRACE Expression:45 - Expression text: System
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. Consoleprimary_expression
2014-06-18 02:03:55 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:03:55 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:03:55 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:03:55 TRACE Expression:45 - Expression text: Console
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. WriteLineprimary_expression
2014-06-18 02:03:55 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:03:55 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:03:55 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:03:55 TRACE Expression:45 - Expression text: WriteLine
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. "Hello, World!"assignment_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. "Hello, World!"conditional_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. "Hello, World!"logical_or_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. "Hello, World!"logical_and_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. "Hello, World!"inclusive_or_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. "Hello, World!"exclusive_or_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. "Hello, World!"and_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. "Hello, World!"equality_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. "Hello, World!"relational_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. "Hello, World!"shift_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. "Hello, World!"additive_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. "Hello, World!"multiplicative_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. "Hello, World!"unary_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. "Hello, World!"postfix_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. "Hello, World!"primary_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. "Hello, World!"constant
2014-06-18 02:03:55 TRACE Expression:42 - Expression added: CHARACTER_LITERAL
2014-06-18 02:03:55 TRACE Expression:43 - Token: STRING_LITERAL
2014-06-18 02:03:55 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$1
2014-06-18 02:03:55 TRACE Expression:45 - Expression text: "Hello, World!"
2014-06-18 02:03:55 TRACE PostfixExpression:50 - Constructor call added: WriteLine("Hello, World!")
2014-06-18 02:03:55 TRACE Expression:42 - Expression added: DOT
2014-06-18 02:03:55 TRACE Expression:43 - Token: '.'
2014-06-18 02:03:55 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 02:03:55 TRACE Expression:45 - Expression text: WriteLine("Hello, World!")
2014-06-18 02:03:55 TRACE PostfixExpression:50 - Constructor call added: Console.WriteLine("Hello, World!")
2014-06-18 02:03:55 TRACE Expression:42 - Expression added: DOT
2014-06-18 02:03:55 TRACE Expression:43 - Token: '.'
2014-06-18 02:03:55 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 02:03:55 TRACE Expression:45 - Expression text: Console.WriteLine("Hello, World!")
2014-06-18 02:03:55 TRACE PostfixExpression:50 - Constructor call added: System.Console.WriteLine("Hello, World!")
2014-06-18 02:03:55 TRACE Expression:42 - Expression added: DOT
2014-06-18 02:03:55 TRACE Expression:43 - Token: '.'
2014-06-18 02:03:55 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 02:03:55 TRACE Expression:45 - Expression text: System.Console.WriteLine("Hello, World!")
2014-06-18 02:03:55 TRACE CompoundStatement:49 - stmt in da block: a=6;
2014-06-18 02:03:55 TRACE Expression:42 - Expression added: ASSIGN
2014-06-18 02:03:55 TRACE Expression:43 - Token: '='
2014-06-18 02:03:55 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 02:03:55 TRACE Expression:45 - Expression text: a=6
2014-06-18 02:03:55 TRACE Expression:241 - int_visitLdcInsn: 555
2014-06-18 02:03:55 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. tstmultiplicative_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. tstunary_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. tstpostfix_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. tstprimary_expression
2014-06-18 02:03:55 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:03:55 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:03:55 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:03:55 TRACE Expression:45 - Expression text: tst
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 02:03:55 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:03:55 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:03:55 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:03:55 TRACE Expression:45 - Expression text: 1
2014-06-18 02:03:55 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 02:03:55 TRACE ClassMethod:95 - Compiling method Main w. args V. Is constructor: false
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. aunary_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. apostfix_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. aprimary_expression
2014-06-18 02:03:55 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:03:55 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:03:55 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:03:55 TRACE Expression:45 - Expression text: a
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 6assignment_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 6conditional_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 6logical_or_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 6logical_and_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 6inclusive_or_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 6exclusive_or_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 6and_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 6equality_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 6relational_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 6shift_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 6additive_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 6multiplicative_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 6unary_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 6postfix_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 6primary_expression
2014-06-18 02:03:55 WARN  Expression:121 - OneChild tree. 6constant
2014-06-18 02:03:55 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:03:55 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:03:55 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:03:55 TRACE Expression:45 - Expression text: 6
2014-06-18 02:03:55 TRACE Expression:241 - int_visitLdcInsn: 6
2014-06-18 02:08:42 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 02:08:42 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 02:08:42 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 02:08:42 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 02:08:42 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 02:08:42 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst+1;publicstaticvoidMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 02:08:42 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@68,298:298='}',<40>,15:0]}
2014-06-18 02:08:42 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 02:08:42 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 02:08:42 TRACE ClassDef:55 - Class name: Test
2014-06-18 02:08:42 TRACE Variable:30 - Field/variable added: tst
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 555assignment_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 555conditional_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 555logical_or_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 555logical_and_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 555inclusive_or_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 555exclusive_or_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 555and_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 555equality_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 555relational_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 555shift_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 555additive_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 555multiplicative_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 555unary_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 555postfix_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 555primary_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 555constant
2014-06-18 02:08:42 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:08:42 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:08:42 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:08:42 TRACE Expression:45 - Expression text: 555
2014-06-18 02:08:42 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 1assignment_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 1conditional_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 1logical_or_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 1logical_and_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 1inclusive_or_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 1exclusive_or_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 1and_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 1equality_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 1relational_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 1shift_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 02:08:42 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:08:42 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:08:42 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:08:42 TRACE Expression:45 - Expression text: 1
2014-06-18 02:08:42 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. tst+1assignment_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. tst+1conditional_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. tst+1logical_or_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. tst+1logical_and_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. tst+1inclusive_or_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. tst+1exclusive_or_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. tst+1and_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. tst+1equality_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. tst+1relational_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. tst+1shift_expression
2014-06-18 02:08:42 TRACE Expression:42 - Expression added: PLUS
2014-06-18 02:08:42 TRACE Expression:43 - Token: '+'
2014-06-18 02:08:42 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 02:08:42 TRACE Expression:45 - Expression text: tst+1
2014-06-18 02:08:42 TRACE ClassMethod:39 - Method added: Main
2014-06-18 02:08:42 TRACE Variable:30 - Field/variable added: s
2014-06-18 02:08:42 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 02:08:42 TRACE Variable:30 - Field/variable added: a
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 5assignment_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 5conditional_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 5logical_or_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 5logical_and_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 5inclusive_or_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 5exclusive_or_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 5and_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 5equality_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 5relational_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 5shift_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 5additive_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 5multiplicative_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 5unary_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 5postfix_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 5primary_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 5constant
2014-06-18 02:08:42 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:08:42 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:08:42 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:08:42 TRACE Expression:45 - Expression text: 5
2014-06-18 02:08:42 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 02:08:42 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. newint[1,2][3]assignment_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. newint[1,2][3]conditional_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. newint[1,2][3]logical_or_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. newint[1,2][3]logical_and_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. newint[1,2][3]inclusive_or_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. newint[1,2][3]exclusive_or_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. newint[1,2][3]and_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. newint[1,2][3]equality_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. newint[1,2][3]relational_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. newint[1,2][3]shift_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. newint[1,2][3]additive_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. newint[1,2][3]multiplicative_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. newint[1,2][3]unary_expression
2014-06-18 02:08:42 TRACE ConstructorExpression:19 - Constructor call added: newint[1,2][3]
2014-06-18 02:08:42 TRACE Expression:42 - Expression added: NEW
2014-06-18 02:08:42 TRACE Expression:43 - Token: 'new'
2014-06-18 02:08:42 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 02:08:42 TRACE Expression:45 - Expression text: newint[1,2][3]
2014-06-18 02:08:42 TRACE CompoundStatement:49 - stmt in da block: System.Console.WriteLine("Hello, World!");
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")assignment_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")conditional_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")logical_or_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")logical_and_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")inclusive_or_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")exclusive_or_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")and_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")equality_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")relational_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")shift_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")additive_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")multiplicative_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")unary_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. Systemprimary_expression
2014-06-18 02:08:42 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:08:42 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:08:42 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:08:42 TRACE Expression:45 - Expression text: System
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. Consoleprimary_expression
2014-06-18 02:08:42 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:08:42 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:08:42 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:08:42 TRACE Expression:45 - Expression text: Console
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. WriteLineprimary_expression
2014-06-18 02:08:42 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:08:42 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:08:42 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:08:42 TRACE Expression:45 - Expression text: WriteLine
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. "Hello, World!"assignment_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. "Hello, World!"conditional_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. "Hello, World!"logical_or_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. "Hello, World!"logical_and_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. "Hello, World!"inclusive_or_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. "Hello, World!"exclusive_or_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. "Hello, World!"and_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. "Hello, World!"equality_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. "Hello, World!"relational_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. "Hello, World!"shift_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. "Hello, World!"additive_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. "Hello, World!"multiplicative_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. "Hello, World!"unary_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. "Hello, World!"postfix_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. "Hello, World!"primary_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. "Hello, World!"constant
2014-06-18 02:08:42 TRACE Expression:42 - Expression added: CHARACTER_LITERAL
2014-06-18 02:08:42 TRACE Expression:43 - Token: STRING_LITERAL
2014-06-18 02:08:42 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$1
2014-06-18 02:08:42 TRACE Expression:45 - Expression text: "Hello, World!"
2014-06-18 02:08:42 TRACE PostfixExpression:50 - Constructor call added: WriteLine("Hello, World!")
2014-06-18 02:08:42 TRACE Expression:42 - Expression added: DOT
2014-06-18 02:08:42 TRACE Expression:43 - Token: '.'
2014-06-18 02:08:42 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 02:08:42 TRACE Expression:45 - Expression text: WriteLine("Hello, World!")
2014-06-18 02:08:42 TRACE PostfixExpression:50 - Constructor call added: Console.WriteLine("Hello, World!")
2014-06-18 02:08:42 TRACE Expression:42 - Expression added: DOT
2014-06-18 02:08:42 TRACE Expression:43 - Token: '.'
2014-06-18 02:08:42 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 02:08:42 TRACE Expression:45 - Expression text: Console.WriteLine("Hello, World!")
2014-06-18 02:08:42 TRACE PostfixExpression:50 - Constructor call added: System.Console.WriteLine("Hello, World!")
2014-06-18 02:08:42 TRACE Expression:42 - Expression added: DOT
2014-06-18 02:08:42 TRACE Expression:43 - Token: '.'
2014-06-18 02:08:42 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 02:08:42 TRACE Expression:45 - Expression text: System.Console.WriteLine("Hello, World!")
2014-06-18 02:08:42 TRACE CompoundStatement:49 - stmt in da block: a=6;
2014-06-18 02:08:42 TRACE Expression:42 - Expression added: ASSIGN
2014-06-18 02:08:42 TRACE Expression:43 - Token: '='
2014-06-18 02:08:42 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 02:08:42 TRACE Expression:45 - Expression text: a=6
2014-06-18 02:08:42 TRACE Expression:241 - int_visitLdcInsn: 555
2014-06-18 02:08:42 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. tstmultiplicative_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. tstunary_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. tstpostfix_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. tstprimary_expression
2014-06-18 02:08:42 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:08:42 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:08:42 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:08:42 TRACE Expression:45 - Expression text: tst
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 02:08:42 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:08:42 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:08:42 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:08:42 TRACE Expression:45 - Expression text: 1
2014-06-18 02:08:42 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 02:08:42 TRACE ClassMethod:95 - Compiling method Main w. args V. Is constructor: false
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. aunary_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. apostfix_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. aprimary_expression
2014-06-18 02:08:42 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:08:42 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:08:42 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:08:42 TRACE Expression:45 - Expression text: a
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 6assignment_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 6conditional_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 6logical_or_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 6logical_and_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 6inclusive_or_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 6exclusive_or_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 6and_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 6equality_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 6relational_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 6shift_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 6additive_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 6multiplicative_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 6unary_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 6postfix_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 6primary_expression
2014-06-18 02:08:42 WARN  Expression:121 - OneChild tree. 6constant
2014-06-18 02:08:42 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:08:42 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:08:42 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:08:42 TRACE Expression:45 - Expression text: 6
2014-06-18 02:08:42 TRACE Expression:241 - int_visitLdcInsn: 6
2014-06-18 02:09:40 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 02:09:40 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 02:09:40 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 02:09:40 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 02:09:41 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 02:09:41 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst+1;publicstaticvoidMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 02:09:41 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@68,298:298='}',<40>,15:0]}
2014-06-18 02:09:41 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 02:09:41 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 02:09:41 TRACE ClassDef:55 - Class name: Test
2014-06-18 02:09:41 TRACE Variable:30 - Field/variable added: tst
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 555assignment_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 555conditional_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 555logical_or_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 555logical_and_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 555inclusive_or_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 555exclusive_or_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 555and_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 555equality_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 555relational_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 555shift_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 555additive_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 555multiplicative_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 555unary_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 555postfix_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 555primary_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 555constant
2014-06-18 02:09:41 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:09:41 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:09:41 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:09:41 TRACE Expression:45 - Expression text: 555
2014-06-18 02:09:41 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 1assignment_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 1conditional_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 1logical_or_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 1logical_and_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 1inclusive_or_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 1exclusive_or_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 1and_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 1equality_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 1relational_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 1shift_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 02:09:41 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:09:41 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:09:41 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:09:41 TRACE Expression:45 - Expression text: 1
2014-06-18 02:09:41 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. tst+1assignment_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. tst+1conditional_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. tst+1logical_or_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. tst+1logical_and_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. tst+1inclusive_or_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. tst+1exclusive_or_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. tst+1and_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. tst+1equality_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. tst+1relational_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. tst+1shift_expression
2014-06-18 02:09:41 TRACE Expression:42 - Expression added: PLUS
2014-06-18 02:09:41 TRACE Expression:43 - Token: '+'
2014-06-18 02:09:41 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 02:09:41 TRACE Expression:45 - Expression text: tst+1
2014-06-18 02:09:41 TRACE ClassMethod:39 - Method added: Main
2014-06-18 02:09:41 TRACE Variable:30 - Field/variable added: s
2014-06-18 02:09:41 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 02:09:41 TRACE Variable:30 - Field/variable added: a
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 5assignment_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 5conditional_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 5logical_or_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 5logical_and_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 5inclusive_or_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 5exclusive_or_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 5and_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 5equality_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 5relational_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 5shift_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 5additive_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 5multiplicative_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 5unary_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 5postfix_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 5primary_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 5constant
2014-06-18 02:09:41 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:09:41 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:09:41 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:09:41 TRACE Expression:45 - Expression text: 5
2014-06-18 02:09:41 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 02:09:41 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. newint[1,2][3]assignment_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. newint[1,2][3]conditional_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. newint[1,2][3]logical_or_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. newint[1,2][3]logical_and_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. newint[1,2][3]inclusive_or_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. newint[1,2][3]exclusive_or_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. newint[1,2][3]and_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. newint[1,2][3]equality_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. newint[1,2][3]relational_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. newint[1,2][3]shift_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. newint[1,2][3]additive_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. newint[1,2][3]multiplicative_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. newint[1,2][3]unary_expression
2014-06-18 02:09:41 TRACE ConstructorExpression:19 - Constructor call added: newint[1,2][3]
2014-06-18 02:09:41 TRACE Expression:42 - Expression added: NEW
2014-06-18 02:09:41 TRACE Expression:43 - Token: 'new'
2014-06-18 02:09:41 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 02:09:41 TRACE Expression:45 - Expression text: newint[1,2][3]
2014-06-18 02:09:41 TRACE CompoundStatement:49 - stmt in da block: System.Console.WriteLine("Hello, World!");
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")assignment_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")conditional_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")logical_or_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")logical_and_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")inclusive_or_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")exclusive_or_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")and_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")equality_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")relational_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")shift_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")additive_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")multiplicative_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")unary_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. Systemprimary_expression
2014-06-18 02:09:41 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:09:41 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:09:41 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:09:41 TRACE Expression:45 - Expression text: System
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. Consoleprimary_expression
2014-06-18 02:09:41 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:09:41 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:09:41 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:09:41 TRACE Expression:45 - Expression text: Console
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. WriteLineprimary_expression
2014-06-18 02:09:41 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:09:41 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:09:41 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:09:41 TRACE Expression:45 - Expression text: WriteLine
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. "Hello, World!"assignment_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. "Hello, World!"conditional_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. "Hello, World!"logical_or_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. "Hello, World!"logical_and_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. "Hello, World!"inclusive_or_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. "Hello, World!"exclusive_or_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. "Hello, World!"and_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. "Hello, World!"equality_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. "Hello, World!"relational_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. "Hello, World!"shift_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. "Hello, World!"additive_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. "Hello, World!"multiplicative_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. "Hello, World!"unary_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. "Hello, World!"postfix_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. "Hello, World!"primary_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. "Hello, World!"constant
2014-06-18 02:09:41 TRACE Expression:42 - Expression added: CHARACTER_LITERAL
2014-06-18 02:09:41 TRACE Expression:43 - Token: STRING_LITERAL
2014-06-18 02:09:41 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$1
2014-06-18 02:09:41 TRACE Expression:45 - Expression text: "Hello, World!"
2014-06-18 02:09:41 TRACE PostfixExpression:50 - Constructor call added: WriteLine("Hello, World!")
2014-06-18 02:09:41 TRACE Expression:42 - Expression added: DOT
2014-06-18 02:09:41 TRACE Expression:43 - Token: '.'
2014-06-18 02:09:41 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 02:09:41 TRACE Expression:45 - Expression text: WriteLine("Hello, World!")
2014-06-18 02:09:41 TRACE PostfixExpression:50 - Constructor call added: Console.WriteLine("Hello, World!")
2014-06-18 02:09:41 TRACE Expression:42 - Expression added: DOT
2014-06-18 02:09:41 TRACE Expression:43 - Token: '.'
2014-06-18 02:09:41 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 02:09:41 TRACE Expression:45 - Expression text: Console.WriteLine("Hello, World!")
2014-06-18 02:09:41 TRACE PostfixExpression:50 - Constructor call added: System.Console.WriteLine("Hello, World!")
2014-06-18 02:09:41 TRACE Expression:42 - Expression added: DOT
2014-06-18 02:09:41 TRACE Expression:43 - Token: '.'
2014-06-18 02:09:41 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 02:09:41 TRACE Expression:45 - Expression text: System.Console.WriteLine("Hello, World!")
2014-06-18 02:09:41 TRACE CompoundStatement:49 - stmt in da block: a=6;
2014-06-18 02:09:41 TRACE Expression:42 - Expression added: ASSIGN
2014-06-18 02:09:41 TRACE Expression:43 - Token: '='
2014-06-18 02:09:41 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 02:09:41 TRACE Expression:45 - Expression text: a=6
2014-06-18 02:09:41 TRACE Expression:241 - int_visitLdcInsn: 555
2014-06-18 02:09:41 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. tstmultiplicative_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. tstunary_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. tstpostfix_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. tstprimary_expression
2014-06-18 02:09:41 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:09:41 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:09:41 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:09:41 TRACE Expression:45 - Expression text: tst
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 02:09:41 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:09:41 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:09:41 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:09:41 TRACE Expression:45 - Expression text: 1
2014-06-18 02:09:41 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 02:09:41 TRACE ClassMethod:95 - Compiling method Main w. args V. Is constructor: false
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. aunary_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. apostfix_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. aprimary_expression
2014-06-18 02:09:41 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:09:41 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:09:41 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:09:41 TRACE Expression:45 - Expression text: a
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 6assignment_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 6conditional_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 6logical_or_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 6logical_and_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 6inclusive_or_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 6exclusive_or_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 6and_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 6equality_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 6relational_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 6shift_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 6additive_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 6multiplicative_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 6unary_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 6postfix_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 6primary_expression
2014-06-18 02:09:41 WARN  Expression:121 - OneChild tree. 6constant
2014-06-18 02:09:41 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:09:41 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:09:41 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:09:41 TRACE Expression:45 - Expression text: 6
2014-06-18 02:09:41 TRACE Expression:241 - int_visitLdcInsn: 6
2014-06-18 02:09:53 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 02:09:53 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 02:09:53 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 02:09:53 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) })
2014-06-18 02:09:53 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 02:09:53 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst+1;}
2014-06-18 02:09:53 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@21,307:307='}',<40>,16:0]}
2014-06-18 02:09:53 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 02:09:53 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 02:09:53 TRACE ClassDef:55 - Class name: Test
2014-06-18 02:09:53 TRACE Variable:30 - Field/variable added: tst
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. 555assignment_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. 555conditional_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. 555logical_or_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. 555logical_and_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. 555inclusive_or_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. 555exclusive_or_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. 555and_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. 555equality_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. 555relational_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. 555shift_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. 555additive_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. 555multiplicative_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. 555unary_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. 555postfix_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. 555primary_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. 555constant
2014-06-18 02:09:53 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:09:53 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:09:53 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:09:53 TRACE Expression:45 - Expression text: 555
2014-06-18 02:09:53 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. 1assignment_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. 1conditional_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. 1logical_or_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. 1logical_and_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. 1inclusive_or_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. 1exclusive_or_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. 1and_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. 1equality_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. 1relational_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. 1shift_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 02:09:53 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:09:53 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:09:53 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:09:53 TRACE Expression:45 - Expression text: 1
2014-06-18 02:09:53 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. tst+1assignment_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. tst+1conditional_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. tst+1logical_or_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. tst+1logical_and_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. tst+1inclusive_or_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. tst+1exclusive_or_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. tst+1and_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. tst+1equality_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. tst+1relational_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. tst+1shift_expression
2014-06-18 02:09:53 TRACE Expression:42 - Expression added: PLUS
2014-06-18 02:09:53 TRACE Expression:43 - Token: '+'
2014-06-18 02:09:53 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 02:09:53 TRACE Expression:45 - Expression text: tst+1
2014-06-18 02:09:53 TRACE Expression:241 - int_visitLdcInsn: 555
2014-06-18 02:09:53 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. tstmultiplicative_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. tstunary_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. tstpostfix_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. tstprimary_expression
2014-06-18 02:09:53 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:09:53 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:09:53 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:09:53 TRACE Expression:45 - Expression text: tst
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 02:09:53 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 02:09:53 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:09:53 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:09:53 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:09:53 TRACE Expression:45 - Expression text: 1
2014-06-18 02:09:53 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 02:11:27 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 02:11:27 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 02:11:27 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 02:11:27 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) })
2014-06-18 02:11:27 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 02:11:27 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst+1;}
2014-06-18 02:11:27 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@21,307:307='}',<40>,16:0]}
2014-06-18 02:11:27 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 02:11:27 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 02:11:27 TRACE ClassDef:55 - Class name: Test
2014-06-18 02:11:27 TRACE Variable:30 - Field/variable added: tst
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. 555assignment_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. 555conditional_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. 555logical_or_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. 555logical_and_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. 555inclusive_or_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. 555exclusive_or_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. 555and_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. 555equality_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. 555relational_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. 555shift_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. 555additive_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. 555multiplicative_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. 555unary_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. 555postfix_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. 555primary_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. 555constant
2014-06-18 02:11:27 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:11:27 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:11:27 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:11:27 TRACE Expression:45 - Expression text: 555
2014-06-18 02:11:27 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. 1assignment_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. 1conditional_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. 1logical_or_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. 1logical_and_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. 1inclusive_or_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. 1exclusive_or_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. 1and_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. 1equality_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. 1relational_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. 1shift_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 02:11:27 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:11:27 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:11:27 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:11:27 TRACE Expression:45 - Expression text: 1
2014-06-18 02:11:27 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. tst+1assignment_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. tst+1conditional_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. tst+1logical_or_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. tst+1logical_and_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. tst+1inclusive_or_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. tst+1exclusive_or_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. tst+1and_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. tst+1equality_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. tst+1relational_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. tst+1shift_expression
2014-06-18 02:11:27 TRACE Expression:42 - Expression added: PLUS
2014-06-18 02:11:27 TRACE Expression:43 - Token: '+'
2014-06-18 02:11:27 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 02:11:27 TRACE Expression:45 - Expression text: tst+1
2014-06-18 02:11:27 TRACE Expression:241 - int_visitLdcInsn: 555
2014-06-18 02:11:27 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. tstmultiplicative_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. tstunary_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. tstpostfix_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. tstprimary_expression
2014-06-18 02:11:27 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:11:27 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:11:27 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:11:27 TRACE Expression:45 - Expression text: tst
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 02:11:27 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 02:11:27 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:11:27 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:11:27 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:11:27 TRACE Expression:45 - Expression text: 1
2014-06-18 02:11:27 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 02:13:08 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 02:13:08 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 02:13:08 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 02:13:08 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) })
2014-06-18 02:13:08 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 02:13:08 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;}
2014-06-18 02:13:08 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@9,309:309='}',<40>,16:0]}
2014-06-18 02:13:08 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 02:13:08 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 02:13:08 TRACE ClassDef:55 - Class name: Test
2014-06-18 02:13:08 TRACE Variable:30 - Field/variable added: tst
2014-06-18 02:13:08 WARN  Expression:121 - OneChild tree. 555assignment_expression
2014-06-18 02:13:08 WARN  Expression:121 - OneChild tree. 555conditional_expression
2014-06-18 02:13:08 WARN  Expression:121 - OneChild tree. 555logical_or_expression
2014-06-18 02:13:08 WARN  Expression:121 - OneChild tree. 555logical_and_expression
2014-06-18 02:13:08 WARN  Expression:121 - OneChild tree. 555inclusive_or_expression
2014-06-18 02:13:08 WARN  Expression:121 - OneChild tree. 555exclusive_or_expression
2014-06-18 02:13:08 WARN  Expression:121 - OneChild tree. 555and_expression
2014-06-18 02:13:08 WARN  Expression:121 - OneChild tree. 555equality_expression
2014-06-18 02:13:08 WARN  Expression:121 - OneChild tree. 555relational_expression
2014-06-18 02:13:08 WARN  Expression:121 - OneChild tree. 555shift_expression
2014-06-18 02:13:08 WARN  Expression:121 - OneChild tree. 555additive_expression
2014-06-18 02:13:08 WARN  Expression:121 - OneChild tree. 555multiplicative_expression
2014-06-18 02:13:08 WARN  Expression:121 - OneChild tree. 555unary_expression
2014-06-18 02:13:08 WARN  Expression:121 - OneChild tree. 555postfix_expression
2014-06-18 02:13:08 WARN  Expression:121 - OneChild tree. 555primary_expression
2014-06-18 02:13:08 WARN  Expression:121 - OneChild tree. 555constant
2014-06-18 02:13:08 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:13:08 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:13:08 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:13:08 TRACE Expression:45 - Expression text: 555
2014-06-18 02:13:08 TRACE Expression:241 - int_visitLdcInsn: 555
2014-06-18 02:13:37 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 02:13:37 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 02:13:37 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 02:13:37 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) })
2014-06-18 02:13:37 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 02:13:37 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;}
2014-06-18 02:13:37 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@9,309:309='}',<40>,16:0]}
2014-06-18 02:13:37 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 02:13:37 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 02:13:37 TRACE ClassDef:55 - Class name: Test
2014-06-18 02:13:37 TRACE Variable:30 - Field/variable added: tst
2014-06-18 02:13:37 WARN  Expression:121 - OneChild tree. 555assignment_expression
2014-06-18 02:13:37 WARN  Expression:121 - OneChild tree. 555conditional_expression
2014-06-18 02:13:37 WARN  Expression:121 - OneChild tree. 555logical_or_expression
2014-06-18 02:13:37 WARN  Expression:121 - OneChild tree. 555logical_and_expression
2014-06-18 02:13:37 WARN  Expression:121 - OneChild tree. 555inclusive_or_expression
2014-06-18 02:13:37 WARN  Expression:121 - OneChild tree. 555exclusive_or_expression
2014-06-18 02:13:37 WARN  Expression:121 - OneChild tree. 555and_expression
2014-06-18 02:13:37 WARN  Expression:121 - OneChild tree. 555equality_expression
2014-06-18 02:13:37 WARN  Expression:121 - OneChild tree. 555relational_expression
2014-06-18 02:13:37 WARN  Expression:121 - OneChild tree. 555shift_expression
2014-06-18 02:13:37 WARN  Expression:121 - OneChild tree. 555additive_expression
2014-06-18 02:13:37 WARN  Expression:121 - OneChild tree. 555multiplicative_expression
2014-06-18 02:13:37 WARN  Expression:121 - OneChild tree. 555unary_expression
2014-06-18 02:13:37 WARN  Expression:121 - OneChild tree. 555postfix_expression
2014-06-18 02:13:37 WARN  Expression:121 - OneChild tree. 555primary_expression
2014-06-18 02:13:37 WARN  Expression:121 - OneChild tree. 555constant
2014-06-18 02:13:37 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:13:37 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:13:37 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:13:37 TRACE Expression:45 - Expression text: 555
2014-06-18 02:13:37 TRACE Expression:241 - int_visitLdcInsn: 555
2014-06-18 02:13:52 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 02:13:52 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 02:13:52 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 02:13:52 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) })
2014-06-18 02:13:52 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 02:13:52 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;}
2014-06-18 02:13:52 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@9,309:309='}',<40>,16:0]}
2014-06-18 02:13:52 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 02:13:52 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 02:13:52 TRACE ClassDef:55 - Class name: Test
2014-06-18 02:13:52 TRACE Variable:30 - Field/variable added: tst
2014-06-18 02:13:52 WARN  Expression:121 - OneChild tree. 555assignment_expression
2014-06-18 02:13:52 WARN  Expression:121 - OneChild tree. 555conditional_expression
2014-06-18 02:13:52 WARN  Expression:121 - OneChild tree. 555logical_or_expression
2014-06-18 02:13:52 WARN  Expression:121 - OneChild tree. 555logical_and_expression
2014-06-18 02:13:52 WARN  Expression:121 - OneChild tree. 555inclusive_or_expression
2014-06-18 02:13:52 WARN  Expression:121 - OneChild tree. 555exclusive_or_expression
2014-06-18 02:13:52 WARN  Expression:121 - OneChild tree. 555and_expression
2014-06-18 02:13:52 WARN  Expression:121 - OneChild tree. 555equality_expression
2014-06-18 02:13:52 WARN  Expression:121 - OneChild tree. 555relational_expression
2014-06-18 02:13:52 WARN  Expression:121 - OneChild tree. 555shift_expression
2014-06-18 02:13:52 WARN  Expression:121 - OneChild tree. 555additive_expression
2014-06-18 02:13:52 WARN  Expression:121 - OneChild tree. 555multiplicative_expression
2014-06-18 02:13:52 WARN  Expression:121 - OneChild tree. 555unary_expression
2014-06-18 02:13:52 WARN  Expression:121 - OneChild tree. 555postfix_expression
2014-06-18 02:13:52 WARN  Expression:121 - OneChild tree. 555primary_expression
2014-06-18 02:13:52 WARN  Expression:121 - OneChild tree. 555constant
2014-06-18 02:13:52 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:13:52 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:13:52 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:13:52 TRACE Expression:45 - Expression text: 555
2014-06-18 02:13:52 TRACE Expression:241 - int_visitLdcInsn: 555
2014-06-18 02:13:52 INFO  CsCompiler:69 - 1; declaration; inttst=555;
2014-06-18 02:13:52 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def, declaration]{start=[@4,27:29='int',<14>,4:3], stop=[@8,40:40=';',<45>,4:16]}
2014-06-18 02:16:31 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 02:16:31 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 02:16:31 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 02:16:31 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) })
2014-06-18 02:16:32 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 02:16:32 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;}
2014-06-18 02:16:32 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@9,309:309='}',<40>,16:0]}
2014-06-18 02:16:32 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 02:16:32 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 02:16:32 TRACE ClassDef:55 - Class name: Test
2014-06-18 02:16:32 TRACE Variable:30 - Field/variable added: tst
2014-06-18 02:16:32 WARN  Expression:121 - OneChild tree. 555assignment_expression
2014-06-18 02:16:32 WARN  Expression:121 - OneChild tree. 555conditional_expression
2014-06-18 02:16:32 WARN  Expression:121 - OneChild tree. 555logical_or_expression
2014-06-18 02:16:32 WARN  Expression:121 - OneChild tree. 555logical_and_expression
2014-06-18 02:16:32 WARN  Expression:121 - OneChild tree. 555inclusive_or_expression
2014-06-18 02:16:32 WARN  Expression:121 - OneChild tree. 555exclusive_or_expression
2014-06-18 02:16:32 WARN  Expression:121 - OneChild tree. 555and_expression
2014-06-18 02:16:32 WARN  Expression:121 - OneChild tree. 555equality_expression
2014-06-18 02:16:32 WARN  Expression:121 - OneChild tree. 555relational_expression
2014-06-18 02:16:32 WARN  Expression:121 - OneChild tree. 555shift_expression
2014-06-18 02:16:32 WARN  Expression:121 - OneChild tree. 555additive_expression
2014-06-18 02:16:32 WARN  Expression:121 - OneChild tree. 555multiplicative_expression
2014-06-18 02:16:32 WARN  Expression:121 - OneChild tree. 555unary_expression
2014-06-18 02:16:32 WARN  Expression:121 - OneChild tree. 555postfix_expression
2014-06-18 02:16:32 WARN  Expression:121 - OneChild tree. 555primary_expression
2014-06-18 02:16:32 WARN  Expression:121 - OneChild tree. 555constant
2014-06-18 02:16:32 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:16:32 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:16:32 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:16:32 TRACE Expression:45 - Expression text: 555
2014-06-18 02:16:32 TRACE Expression:241 - int_visitLdcInsn: 555
2014-06-18 02:16:32 INFO  CsCompiler:69 - 1; declaration; inttst=555;
2014-06-18 02:16:32 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def, declaration]{start=[@4,27:29='int',<14>,4:3], stop=[@8,40:40=';',<45>,4:16]}
2014-06-18 02:16:42 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 02:16:42 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 02:16:42 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 02:16:42 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) })
2014-06-18 02:16:42 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 02:16:42 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;}
2014-06-18 02:16:42 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@9,309:309='}',<40>,16:0]}
2014-06-18 02:16:42 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 02:16:42 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 02:16:42 TRACE ClassDef:55 - Class name: Test
2014-06-18 02:16:42 TRACE Variable:30 - Field/variable added: tst
2014-06-18 02:16:42 WARN  Expression:121 - OneChild tree. 555assignment_expression
2014-06-18 02:16:42 WARN  Expression:121 - OneChild tree. 555conditional_expression
2014-06-18 02:16:42 WARN  Expression:121 - OneChild tree. 555logical_or_expression
2014-06-18 02:16:42 WARN  Expression:121 - OneChild tree. 555logical_and_expression
2014-06-18 02:16:42 WARN  Expression:121 - OneChild tree. 555inclusive_or_expression
2014-06-18 02:16:42 WARN  Expression:121 - OneChild tree. 555exclusive_or_expression
2014-06-18 02:16:42 WARN  Expression:121 - OneChild tree. 555and_expression
2014-06-18 02:16:42 WARN  Expression:121 - OneChild tree. 555equality_expression
2014-06-18 02:16:42 WARN  Expression:121 - OneChild tree. 555relational_expression
2014-06-18 02:16:42 WARN  Expression:121 - OneChild tree. 555shift_expression
2014-06-18 02:16:42 WARN  Expression:121 - OneChild tree. 555additive_expression
2014-06-18 02:16:42 WARN  Expression:121 - OneChild tree. 555multiplicative_expression
2014-06-18 02:16:42 WARN  Expression:121 - OneChild tree. 555unary_expression
2014-06-18 02:16:42 WARN  Expression:121 - OneChild tree. 555postfix_expression
2014-06-18 02:16:42 WARN  Expression:121 - OneChild tree. 555primary_expression
2014-06-18 02:16:42 WARN  Expression:121 - OneChild tree. 555constant
2014-06-18 02:16:42 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:16:42 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:16:42 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:16:42 TRACE Expression:45 - Expression text: 555
2014-06-18 02:16:42 TRACE Expression:241 - int_visitLdcInsn: 555
2014-06-18 02:16:48 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 02:16:48 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 02:16:48 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 02:16:48 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) })
2014-06-18 02:16:48 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 02:16:48 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;}
2014-06-18 02:16:48 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@9,309:309='}',<40>,16:0]}
2014-06-18 02:16:48 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 02:16:48 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 02:16:48 TRACE ClassDef:55 - Class name: Test
2014-06-18 02:16:48 TRACE Variable:30 - Field/variable added: tst
2014-06-18 02:16:48 WARN  Expression:121 - OneChild tree. 555assignment_expression
2014-06-18 02:16:48 WARN  Expression:121 - OneChild tree. 555conditional_expression
2014-06-18 02:16:48 WARN  Expression:121 - OneChild tree. 555logical_or_expression
2014-06-18 02:16:48 WARN  Expression:121 - OneChild tree. 555logical_and_expression
2014-06-18 02:16:48 WARN  Expression:121 - OneChild tree. 555inclusive_or_expression
2014-06-18 02:16:48 WARN  Expression:121 - OneChild tree. 555exclusive_or_expression
2014-06-18 02:16:48 WARN  Expression:121 - OneChild tree. 555and_expression
2014-06-18 02:16:48 WARN  Expression:121 - OneChild tree. 555equality_expression
2014-06-18 02:16:48 WARN  Expression:121 - OneChild tree. 555relational_expression
2014-06-18 02:16:48 WARN  Expression:121 - OneChild tree. 555shift_expression
2014-06-18 02:16:48 WARN  Expression:121 - OneChild tree. 555additive_expression
2014-06-18 02:16:48 WARN  Expression:121 - OneChild tree. 555multiplicative_expression
2014-06-18 02:16:48 WARN  Expression:121 - OneChild tree. 555unary_expression
2014-06-18 02:16:48 WARN  Expression:121 - OneChild tree. 555postfix_expression
2014-06-18 02:16:48 WARN  Expression:121 - OneChild tree. 555primary_expression
2014-06-18 02:16:48 WARN  Expression:121 - OneChild tree. 555constant
2014-06-18 02:16:48 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:16:48 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:16:48 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:16:48 TRACE Expression:45 - Expression text: 555
2014-06-18 02:16:48 TRACE Expression:241 - int_visitLdcInsn: 555
2014-06-18 02:16:48 INFO  CsCompiler:69 - 1; declaration; inttst=555;
2014-06-18 02:16:48 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def, declaration]{start=[@4,27:29='int',<14>,4:3], stop=[@8,40:40=';',<45>,4:16]}
2014-06-18 02:17:36 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 02:17:36 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 02:17:36 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 02:17:36 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (unary_expression (postfix_expression (primary_expression yyy))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123))))))))))))))))))) ;) })
2014-06-18 02:17:37 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 02:17:37 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst+1;privateintzzz=yyy=123;}
2014-06-18 02:17:37 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@29,305:305='}',<40>,16:0]}
2014-06-18 02:17:37 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 02:17:37 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 02:17:37 TRACE ClassDef:55 - Class name: Test
2014-06-18 02:17:37 TRACE Variable:30 - Field/variable added: tst
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 555assignment_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 555conditional_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 555logical_or_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 555logical_and_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 555inclusive_or_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 555exclusive_or_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 555and_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 555equality_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 555relational_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 555shift_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 555additive_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 555multiplicative_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 555unary_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 555postfix_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 555primary_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 555constant
2014-06-18 02:17:37 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:17:37 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:17:37 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:17:37 TRACE Expression:45 - Expression text: 555
2014-06-18 02:17:37 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 1assignment_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 1conditional_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 1logical_or_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 1logical_and_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 1inclusive_or_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 1exclusive_or_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 1and_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 1equality_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 1relational_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 1shift_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 02:17:37 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:17:37 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:17:37 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:17:37 TRACE Expression:45 - Expression text: 1
2014-06-18 02:17:37 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. tst+1assignment_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. tst+1conditional_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. tst+1logical_or_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. tst+1logical_and_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. tst+1inclusive_or_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. tst+1exclusive_or_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. tst+1and_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. tst+1equality_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. tst+1relational_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. tst+1shift_expression
2014-06-18 02:17:37 TRACE Expression:42 - Expression added: PLUS
2014-06-18 02:17:37 TRACE Expression:43 - Token: '+'
2014-06-18 02:17:37 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 02:17:37 TRACE Expression:45 - Expression text: tst+1
2014-06-18 02:17:37 TRACE Variable:30 - Field/variable added: zzz
2014-06-18 02:17:37 TRACE Expression:42 - Expression added: ASSIGN
2014-06-18 02:17:37 TRACE Expression:43 - Token: '='
2014-06-18 02:17:37 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 02:17:37 TRACE Expression:45 - Expression text: yyy=123
2014-06-18 02:17:37 TRACE Expression:241 - int_visitLdcInsn: 555
2014-06-18 02:17:37 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. tstmultiplicative_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. tstunary_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. tstpostfix_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. tstprimary_expression
2014-06-18 02:17:37 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:17:37 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:17:37 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:17:37 TRACE Expression:45 - Expression text: tst
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 02:17:37 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:17:37 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:17:37 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:17:37 TRACE Expression:45 - Expression text: 1
2014-06-18 02:17:37 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. yyyunary_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. yyypostfix_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. yyyprimary_expression
2014-06-18 02:17:37 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:17:37 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:17:37 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:17:37 TRACE Expression:45 - Expression text: yyy
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 123assignment_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 123conditional_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 123logical_or_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 123logical_and_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 123inclusive_or_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 123exclusive_or_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 123and_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 123equality_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 123relational_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 123shift_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 123additive_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 123multiplicative_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 123unary_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 123postfix_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 123primary_expression
2014-06-18 02:17:37 WARN  Expression:121 - OneChild tree. 123constant
2014-06-18 02:17:37 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:17:37 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:17:37 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:17:37 TRACE Expression:45 - Expression text: 123
2014-06-18 02:17:37 TRACE Expression:241 - int_visitLdcInsn: 123
2014-06-18 02:18:30 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 02:18:30 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 02:18:30 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 02:18:30 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) })
2014-06-18 02:18:31 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 02:18:31 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst+1;}
2014-06-18 02:18:31 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@21,307:307='}',<40>,16:0]}
2014-06-18 02:18:31 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 02:18:31 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 02:18:31 TRACE ClassDef:55 - Class name: Test
2014-06-18 02:18:31 TRACE Variable:30 - Field/variable added: tst
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. 555assignment_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. 555conditional_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. 555logical_or_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. 555logical_and_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. 555inclusive_or_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. 555exclusive_or_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. 555and_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. 555equality_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. 555relational_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. 555shift_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. 555additive_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. 555multiplicative_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. 555unary_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. 555postfix_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. 555primary_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. 555constant
2014-06-18 02:18:31 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:18:31 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:18:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:18:31 TRACE Expression:45 - Expression text: 555
2014-06-18 02:18:31 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. 1assignment_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. 1conditional_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. 1logical_or_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. 1logical_and_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. 1inclusive_or_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. 1exclusive_or_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. 1and_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. 1equality_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. 1relational_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. 1shift_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 02:18:31 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:18:31 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:18:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:18:31 TRACE Expression:45 - Expression text: 1
2014-06-18 02:18:31 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. tst+1assignment_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. tst+1conditional_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. tst+1logical_or_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. tst+1logical_and_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. tst+1inclusive_or_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. tst+1exclusive_or_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. tst+1and_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. tst+1equality_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. tst+1relational_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. tst+1shift_expression
2014-06-18 02:18:31 TRACE Expression:42 - Expression added: PLUS
2014-06-18 02:18:31 TRACE Expression:43 - Token: '+'
2014-06-18 02:18:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 02:18:31 TRACE Expression:45 - Expression text: tst+1
2014-06-18 02:18:31 TRACE Expression:241 - int_visitLdcInsn: 555
2014-06-18 02:18:31 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. tstmultiplicative_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. tstunary_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. tstpostfix_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. tstprimary_expression
2014-06-18 02:18:31 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:18:31 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:18:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:18:31 TRACE Expression:45 - Expression text: tst
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 02:18:31 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 02:18:31 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:18:31 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:18:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:18:31 TRACE Expression:45 - Expression text: 1
2014-06-18 02:18:31 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 02:18:41 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 02:18:41 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 02:18:41 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 02:18:41 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (unary_expression (postfix_expression (primary_expression yyy))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123))))))))))))))))))) ;) })
2014-06-18 02:18:41 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 02:18:41 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintzzz=yyy=123;}
2014-06-18 02:18:41 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@17,307:307='}',<40>,16:0]}
2014-06-18 02:18:41 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 02:18:41 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 02:18:41 TRACE ClassDef:55 - Class name: Test
2014-06-18 02:18:41 TRACE Variable:30 - Field/variable added: tst
2014-06-18 02:18:41 WARN  Expression:121 - OneChild tree. 555assignment_expression
2014-06-18 02:18:41 WARN  Expression:121 - OneChild tree. 555conditional_expression
2014-06-18 02:18:41 WARN  Expression:121 - OneChild tree. 555logical_or_expression
2014-06-18 02:18:41 WARN  Expression:121 - OneChild tree. 555logical_and_expression
2014-06-18 02:18:41 WARN  Expression:121 - OneChild tree. 555inclusive_or_expression
2014-06-18 02:18:41 WARN  Expression:121 - OneChild tree. 555exclusive_or_expression
2014-06-18 02:18:41 WARN  Expression:121 - OneChild tree. 555and_expression
2014-06-18 02:18:41 WARN  Expression:121 - OneChild tree. 555equality_expression
2014-06-18 02:18:41 WARN  Expression:121 - OneChild tree. 555relational_expression
2014-06-18 02:18:41 WARN  Expression:121 - OneChild tree. 555shift_expression
2014-06-18 02:18:41 WARN  Expression:121 - OneChild tree. 555additive_expression
2014-06-18 02:18:41 WARN  Expression:121 - OneChild tree. 555multiplicative_expression
2014-06-18 02:18:41 WARN  Expression:121 - OneChild tree. 555unary_expression
2014-06-18 02:18:41 WARN  Expression:121 - OneChild tree. 555postfix_expression
2014-06-18 02:18:41 WARN  Expression:121 - OneChild tree. 555primary_expression
2014-06-18 02:18:41 WARN  Expression:121 - OneChild tree. 555constant
2014-06-18 02:18:41 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:18:41 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:18:41 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:18:41 TRACE Expression:45 - Expression text: 555
2014-06-18 02:18:41 TRACE Variable:30 - Field/variable added: zzz
2014-06-18 02:18:41 TRACE Expression:42 - Expression added: ASSIGN
2014-06-18 02:18:41 TRACE Expression:43 - Token: '='
2014-06-18 02:18:41 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 02:18:41 TRACE Expression:45 - Expression text: yyy=123
2014-06-18 02:18:41 TRACE Expression:241 - int_visitLdcInsn: 555
2014-06-18 02:18:41 WARN  Expression:121 - OneChild tree. yyyunary_expression
2014-06-18 02:18:41 WARN  Expression:121 - OneChild tree. yyypostfix_expression
2014-06-18 02:18:41 WARN  Expression:121 - OneChild tree. yyyprimary_expression
2014-06-18 02:18:41 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:18:41 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:18:41 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:18:41 TRACE Expression:45 - Expression text: yyy
2014-06-18 02:18:41 WARN  Expression:121 - OneChild tree. 123assignment_expression
2014-06-18 02:18:41 WARN  Expression:121 - OneChild tree. 123conditional_expression
2014-06-18 02:18:41 WARN  Expression:121 - OneChild tree. 123logical_or_expression
2014-06-18 02:18:41 WARN  Expression:121 - OneChild tree. 123logical_and_expression
2014-06-18 02:18:41 WARN  Expression:121 - OneChild tree. 123inclusive_or_expression
2014-06-18 02:18:41 WARN  Expression:121 - OneChild tree. 123exclusive_or_expression
2014-06-18 02:18:41 WARN  Expression:121 - OneChild tree. 123and_expression
2014-06-18 02:18:41 WARN  Expression:121 - OneChild tree. 123equality_expression
2014-06-18 02:18:41 WARN  Expression:121 - OneChild tree. 123relational_expression
2014-06-18 02:18:41 WARN  Expression:121 - OneChild tree. 123shift_expression
2014-06-18 02:18:41 WARN  Expression:121 - OneChild tree. 123additive_expression
2014-06-18 02:18:41 WARN  Expression:121 - OneChild tree. 123multiplicative_expression
2014-06-18 02:18:41 WARN  Expression:121 - OneChild tree. 123unary_expression
2014-06-18 02:18:41 WARN  Expression:121 - OneChild tree. 123postfix_expression
2014-06-18 02:18:41 WARN  Expression:121 - OneChild tree. 123primary_expression
2014-06-18 02:18:41 WARN  Expression:121 - OneChild tree. 123constant
2014-06-18 02:18:41 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:18:41 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:18:41 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:18:41 TRACE Expression:45 - Expression text: 123
2014-06-18 02:18:41 TRACE Expression:241 - int_visitLdcInsn: 123
2014-06-18 02:18:54 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 02:18:54 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 02:18:54 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 02:18:54 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) })
2014-06-18 02:18:55 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 02:18:55 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst+1;}
2014-06-18 02:18:55 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@21,307:307='}',<40>,16:0]}
2014-06-18 02:18:55 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 02:18:55 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 02:18:55 TRACE ClassDef:55 - Class name: Test
2014-06-18 02:18:55 TRACE Variable:30 - Field/variable added: tst
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. 555assignment_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. 555conditional_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. 555logical_or_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. 555logical_and_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. 555inclusive_or_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. 555exclusive_or_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. 555and_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. 555equality_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. 555relational_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. 555shift_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. 555additive_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. 555multiplicative_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. 555unary_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. 555postfix_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. 555primary_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. 555constant
2014-06-18 02:18:55 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:18:55 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:18:55 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:18:55 TRACE Expression:45 - Expression text: 555
2014-06-18 02:18:55 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. 1assignment_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. 1conditional_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. 1logical_or_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. 1logical_and_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. 1inclusive_or_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. 1exclusive_or_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. 1and_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. 1equality_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. 1relational_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. 1shift_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 02:18:55 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:18:55 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:18:55 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:18:55 TRACE Expression:45 - Expression text: 1
2014-06-18 02:18:55 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. tst+1assignment_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. tst+1conditional_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. tst+1logical_or_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. tst+1logical_and_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. tst+1inclusive_or_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. tst+1exclusive_or_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. tst+1and_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. tst+1equality_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. tst+1relational_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. tst+1shift_expression
2014-06-18 02:18:55 TRACE Expression:42 - Expression added: PLUS
2014-06-18 02:18:55 TRACE Expression:43 - Token: '+'
2014-06-18 02:18:55 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 02:18:55 TRACE Expression:45 - Expression text: tst+1
2014-06-18 02:18:55 TRACE Expression:241 - int_visitLdcInsn: 555
2014-06-18 02:18:55 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. tstmultiplicative_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. tstunary_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. tstpostfix_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. tstprimary_expression
2014-06-18 02:18:55 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:18:55 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:18:55 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:18:55 TRACE Expression:45 - Expression text: tst
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 02:18:55 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 02:18:55 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:18:55 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:18:55 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:18:55 TRACE Expression:45 - Expression text: 1
2014-06-18 02:18:55 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 02:20:53 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 02:20:53 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 02:20:53 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 02:20:53 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) , (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) })
2014-06-18 02:20:53 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 02:20:53 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;privateintxxx=1,yyy=tst+1;}
2014-06-18 02:20:53 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@21,307:307='}',<40>,16:0]}
2014-06-18 02:20:53 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 02:20:53 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 02:20:53 TRACE ClassDef:55 - Class name: Test
2014-06-18 02:20:53 TRACE Variable:30 - Field/variable added: tst
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. 555assignment_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. 555conditional_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. 555logical_or_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. 555logical_and_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. 555inclusive_or_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. 555exclusive_or_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. 555and_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. 555equality_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. 555relational_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. 555shift_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. 555additive_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. 555multiplicative_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. 555unary_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. 555postfix_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. 555primary_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. 555constant
2014-06-18 02:20:53 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:20:53 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:20:53 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:20:53 TRACE Expression:45 - Expression text: 555
2014-06-18 02:20:53 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. 1assignment_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. 1conditional_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. 1logical_or_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. 1logical_and_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. 1inclusive_or_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. 1exclusive_or_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. 1and_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. 1equality_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. 1relational_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. 1shift_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 02:20:53 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:20:53 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:20:53 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:20:53 TRACE Expression:45 - Expression text: 1
2014-06-18 02:20:53 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. tst+1assignment_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. tst+1conditional_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. tst+1logical_or_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. tst+1logical_and_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. tst+1inclusive_or_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. tst+1exclusive_or_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. tst+1and_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. tst+1equality_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. tst+1relational_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. tst+1shift_expression
2014-06-18 02:20:53 TRACE Expression:42 - Expression added: PLUS
2014-06-18 02:20:53 TRACE Expression:43 - Token: '+'
2014-06-18 02:20:53 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 02:20:53 TRACE Expression:45 - Expression text: tst+1
2014-06-18 02:20:53 TRACE Expression:241 - int_visitLdcInsn: 555
2014-06-18 02:20:53 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. tstmultiplicative_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. tstunary_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. tstpostfix_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. tstprimary_expression
2014-06-18 02:20:53 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:20:53 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:20:53 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:20:53 TRACE Expression:45 - Expression text: tst
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 02:20:53 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 02:20:53 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:20:53 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:20:53 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:20:53 TRACE Expression:45 - Expression text: 1
2014-06-18 02:20:53 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 02:21:47 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 02:21:47 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 02:21:47 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 02:21:47 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) })
2014-06-18 02:21:48 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 02:21:48 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;}
2014-06-18 02:21:48 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@21,352:352='}',<40>,18:0]}
2014-06-18 02:21:48 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 02:21:48 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 02:21:48 TRACE ClassDef:55 - Class name: Test
2014-06-18 02:21:48 TRACE Variable:30 - Field/variable added: tst
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. 555assignment_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. 555conditional_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. 555logical_or_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. 555logical_and_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. 555inclusive_or_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. 555exclusive_or_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. 555and_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. 555equality_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. 555relational_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. 555shift_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. 555additive_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. 555multiplicative_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. 555unary_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. 555postfix_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. 555primary_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. 555constant
2014-06-18 02:21:48 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:21:48 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:21:48 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:21:48 TRACE Expression:45 - Expression text: 555
2014-06-18 02:21:48 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. 1assignment_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. 1conditional_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. 1logical_or_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. 1logical_and_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. 1inclusive_or_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. 1exclusive_or_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. 1and_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. 1equality_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. 1relational_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. 1shift_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 02:21:48 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:21:48 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:21:48 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:21:48 TRACE Expression:45 - Expression text: 1
2014-06-18 02:21:48 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. tst+1assignment_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. tst+1conditional_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. tst+1logical_or_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. tst+1logical_and_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. tst+1inclusive_or_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. tst+1exclusive_or_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. tst+1and_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. tst+1equality_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. tst+1relational_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. tst+1shift_expression
2014-06-18 02:21:48 TRACE Expression:42 - Expression added: PLUS
2014-06-18 02:21:48 TRACE Expression:43 - Token: '+'
2014-06-18 02:21:48 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 02:21:48 TRACE Expression:45 - Expression text: tst+1
2014-06-18 02:21:48 TRACE Expression:241 - int_visitLdcInsn: 555
2014-06-18 02:21:48 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. tstmultiplicative_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. tstunary_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. tstpostfix_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. tstprimary_expression
2014-06-18 02:21:48 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:21:48 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:21:48 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:21:48 TRACE Expression:45 - Expression text: tst
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 02:21:48 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 02:21:48 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:21:48 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:21:48 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:21:48 TRACE Expression:45 - Expression text: 1
2014-06-18 02:21:48 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 02:40:10 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 02:40:10 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 02:40:10 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 02:40:10 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) })
2014-06-18 02:40:11 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 02:40:11 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;}
2014-06-18 02:40:11 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@21,352:352='}',<40>,18:0]}
2014-06-18 02:40:11 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 02:40:11 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 02:40:11 TRACE ClassDef:55 - Class name: Test
2014-06-18 02:40:11 TRACE Variable:30 - Field/variable added: tst
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. 555assignment_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. 555conditional_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. 555logical_or_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. 555logical_and_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. 555inclusive_or_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. 555exclusive_or_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. 555and_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. 555equality_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. 555relational_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. 555shift_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. 555additive_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. 555multiplicative_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. 555unary_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. 555postfix_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. 555primary_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. 555constant
2014-06-18 02:40:11 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:40:11 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:40:11 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:40:11 TRACE Expression:45 - Expression text: 555
2014-06-18 02:40:11 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. 1assignment_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. 1conditional_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. 1logical_or_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. 1logical_and_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. 1inclusive_or_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. 1exclusive_or_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. 1and_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. 1equality_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. 1relational_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. 1shift_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 02:40:11 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:40:11 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:40:11 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:40:11 TRACE Expression:45 - Expression text: 1
2014-06-18 02:40:11 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. tst+1assignment_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. tst+1conditional_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. tst+1logical_or_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. tst+1logical_and_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. tst+1inclusive_or_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. tst+1exclusive_or_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. tst+1and_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. tst+1equality_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. tst+1relational_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. tst+1shift_expression
2014-06-18 02:40:11 TRACE Expression:42 - Expression added: PLUS
2014-06-18 02:40:11 TRACE Expression:43 - Token: '+'
2014-06-18 02:40:11 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 02:40:11 TRACE Expression:45 - Expression text: tst+1
2014-06-18 02:40:11 TRACE Expression:241 - int_visitLdcInsn: 555
2014-06-18 02:40:11 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. tstmultiplicative_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. tstunary_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. tstpostfix_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. tstprimary_expression
2014-06-18 02:40:11 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:40:11 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:40:11 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:40:11 TRACE Expression:45 - Expression text: tst
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 02:40:11 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 02:40:11 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:40:11 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:40:11 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:40:11 TRACE Expression:45 - Expression text: 1
2014-06-18 02:40:11 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 02:46:17 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 02:46:17 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 02:46:17 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 02:46:17 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) })
2014-06-18 02:46:18 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 02:46:18 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;}
2014-06-18 02:46:18 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@21,352:352='}',<40>,18:0]}
2014-06-18 02:46:18 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 02:46:18 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 02:46:18 TRACE ClassDef:55 - Class name: Test
2014-06-18 02:46:18 TRACE Variable:30 - Field/variable added: tst
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. 555assignment_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. 555conditional_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. 555logical_or_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. 555logical_and_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. 555inclusive_or_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. 555exclusive_or_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. 555and_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. 555equality_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. 555relational_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. 555shift_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. 555additive_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. 555multiplicative_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. 555unary_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. 555postfix_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. 555primary_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. 555constant
2014-06-18 02:46:18 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:46:18 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:46:18 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:46:18 TRACE Expression:45 - Expression text: 555
2014-06-18 02:46:18 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. 1assignment_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. 1conditional_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. 1logical_or_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. 1logical_and_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. 1inclusive_or_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. 1exclusive_or_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. 1and_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. 1equality_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. 1relational_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. 1shift_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. 1additive_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. 1multiplicative_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. 1unary_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. 1postfix_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. 1primary_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. 1constant
2014-06-18 02:46:18 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:46:18 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:46:18 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:46:18 TRACE Expression:45 - Expression text: 1
2014-06-18 02:46:18 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. tst+1assignment_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. tst+1conditional_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. tst+1logical_or_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. tst+1logical_and_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. tst+1inclusive_or_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. tst+1exclusive_or_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. tst+1and_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. tst+1equality_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. tst+1relational_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. tst+1shift_expression
2014-06-18 02:46:18 TRACE Expression:42 - Expression added: PLUS
2014-06-18 02:46:18 TRACE Expression:43 - Token: '+'
2014-06-18 02:46:18 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 02:46:18 TRACE Expression:45 - Expression text: tst+1
2014-06-18 02:46:18 TRACE Expression:242 - int_visitLdcInsn: 555
2014-06-18 02:46:18 TRACE Expression:242 - int_visitLdcInsn: 1
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. tstmultiplicative_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. tstunary_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. tstpostfix_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. tstprimary_expression
2014-06-18 02:46:18 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:46:18 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:46:18 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:46:18 TRACE Expression:45 - Expression text: tst
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. 1additive_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. 1multiplicative_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. 1unary_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. 1postfix_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. 1primary_expression
2014-06-18 02:46:18 WARN  Expression:122 - OneChild tree. 1constant
2014-06-18 02:46:18 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:46:18 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:46:18 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:46:18 TRACE Expression:45 - Expression text: 1
2014-06-18 02:46:18 TRACE Expression:242 - int_visitLdcInsn: 1
2014-06-18 02:46:49 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 02:46:49 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 02:46:49 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 02:46:49 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) })
2014-06-18 02:46:49 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 02:46:49 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;}
2014-06-18 02:46:49 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@21,352:352='}',<40>,18:0]}
2014-06-18 02:46:49 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 02:46:49 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 02:46:49 TRACE ClassDef:55 - Class name: Test
2014-06-18 02:46:49 TRACE Variable:30 - Field/variable added: tst
2014-06-18 02:46:49 WARN  Expression:122 - OneChild tree. 555assignment_expression
2014-06-18 02:46:49 WARN  Expression:122 - OneChild tree. 555conditional_expression
2014-06-18 02:46:49 WARN  Expression:122 - OneChild tree. 555logical_or_expression
2014-06-18 02:46:49 WARN  Expression:122 - OneChild tree. 555logical_and_expression
2014-06-18 02:46:49 WARN  Expression:122 - OneChild tree. 555inclusive_or_expression
2014-06-18 02:46:49 WARN  Expression:122 - OneChild tree. 555exclusive_or_expression
2014-06-18 02:46:49 WARN  Expression:122 - OneChild tree. 555and_expression
2014-06-18 02:46:49 WARN  Expression:122 - OneChild tree. 555equality_expression
2014-06-18 02:46:49 WARN  Expression:122 - OneChild tree. 555relational_expression
2014-06-18 02:46:49 WARN  Expression:122 - OneChild tree. 555shift_expression
2014-06-18 02:46:49 WARN  Expression:122 - OneChild tree. 555additive_expression
2014-06-18 02:46:49 WARN  Expression:122 - OneChild tree. 555multiplicative_expression
2014-06-18 02:46:49 WARN  Expression:122 - OneChild tree. 555unary_expression
2014-06-18 02:46:49 WARN  Expression:122 - OneChild tree. 555postfix_expression
2014-06-18 02:46:49 WARN  Expression:122 - OneChild tree. 555primary_expression
2014-06-18 02:46:49 WARN  Expression:122 - OneChild tree. 555constant
2014-06-18 02:46:49 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:46:49 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:46:49 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:46:49 TRACE Expression:45 - Expression text: 555
2014-06-18 02:46:49 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 02:46:49 WARN  Expression:122 - OneChild tree. 1assignment_expression
2014-06-18 02:46:49 WARN  Expression:122 - OneChild tree. 1conditional_expression
2014-06-18 02:46:49 WARN  Expression:122 - OneChild tree. 1logical_or_expression
2014-06-18 02:46:49 WARN  Expression:122 - OneChild tree. 1logical_and_expression
2014-06-18 02:46:49 WARN  Expression:122 - OneChild tree. 1inclusive_or_expression
2014-06-18 02:46:49 WARN  Expression:122 - OneChild tree. 1exclusive_or_expression
2014-06-18 02:46:49 WARN  Expression:122 - OneChild tree. 1and_expression
2014-06-18 02:46:49 WARN  Expression:122 - OneChild tree. 1equality_expression
2014-06-18 02:46:49 WARN  Expression:122 - OneChild tree. 1relational_expression
2014-06-18 02:46:49 WARN  Expression:122 - OneChild tree. 1shift_expression
2014-06-18 02:46:49 WARN  Expression:122 - OneChild tree. 1additive_expression
2014-06-18 02:46:49 WARN  Expression:122 - OneChild tree. 1multiplicative_expression
2014-06-18 02:46:49 WARN  Expression:122 - OneChild tree. 1unary_expression
2014-06-18 02:46:49 WARN  Expression:122 - OneChild tree. 1postfix_expression
2014-06-18 02:46:49 WARN  Expression:122 - OneChild tree. 1primary_expression
2014-06-18 02:46:49 WARN  Expression:122 - OneChild tree. 1constant
2014-06-18 02:46:49 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:46:49 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:46:49 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:46:49 TRACE Expression:45 - Expression text: 1
2014-06-18 02:46:49 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 02:46:49 WARN  Expression:122 - OneChild tree. tst+1assignment_expression
2014-06-18 02:46:49 WARN  Expression:122 - OneChild tree. tst+1conditional_expression
2014-06-18 02:46:49 WARN  Expression:122 - OneChild tree. tst+1logical_or_expression
2014-06-18 02:46:49 WARN  Expression:122 - OneChild tree. tst+1logical_and_expression
2014-06-18 02:46:49 WARN  Expression:122 - OneChild tree. tst+1inclusive_or_expression
2014-06-18 02:46:49 WARN  Expression:122 - OneChild tree. tst+1exclusive_or_expression
2014-06-18 02:46:49 WARN  Expression:122 - OneChild tree. tst+1and_expression
2014-06-18 02:46:49 WARN  Expression:122 - OneChild tree. tst+1equality_expression
2014-06-18 02:46:49 WARN  Expression:122 - OneChild tree. tst+1relational_expression
2014-06-18 02:46:49 WARN  Expression:122 - OneChild tree. tst+1shift_expression
2014-06-18 02:46:49 TRACE Expression:42 - Expression added: PLUS
2014-06-18 02:46:49 TRACE Expression:43 - Token: '+'
2014-06-18 02:46:49 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 02:46:49 TRACE Expression:45 - Expression text: tst+1
2014-06-18 02:46:49 TRACE Expression:242 - int_visitLdcInsn: 555
2014-06-18 02:46:49 TRACE Expression:242 - int_visitLdcInsn: 1
2014-06-18 02:46:49 WARN  Expression:122 - OneChild tree. tstmultiplicative_expression
2014-06-18 02:46:50 WARN  Expression:122 - OneChild tree. tstunary_expression
2014-06-18 02:46:50 WARN  Expression:122 - OneChild tree. tstpostfix_expression
2014-06-18 02:46:50 WARN  Expression:122 - OneChild tree. tstprimary_expression
2014-06-18 02:46:50 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:46:50 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:46:50 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:46:50 TRACE Expression:45 - Expression text: tst
2014-06-18 02:46:50 WARN  Expression:122 - OneChild tree. 1additive_expression
2014-06-18 02:46:50 WARN  Expression:122 - OneChild tree. 1multiplicative_expression
2014-06-18 02:46:50 WARN  Expression:122 - OneChild tree. 1unary_expression
2014-06-18 02:46:50 WARN  Expression:122 - OneChild tree. 1postfix_expression
2014-06-18 02:46:50 WARN  Expression:122 - OneChild tree. 1primary_expression
2014-06-18 02:46:50 WARN  Expression:122 - OneChild tree. 1constant
2014-06-18 02:46:50 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:46:50 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:46:50 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:46:50 TRACE Expression:45 - Expression text: 1
2014-06-18 02:46:50 TRACE Expression:242 - int_visitLdcInsn: 1
2014-06-18 02:47:18 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 02:47:18 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 02:47:18 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 02:47:18 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) })
2014-06-18 02:47:18 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 02:47:18 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;}
2014-06-18 02:47:18 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@21,352:352='}',<40>,18:0]}
2014-06-18 02:47:18 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 02:47:18 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 02:47:18 TRACE ClassDef:55 - Class name: Test
2014-06-18 02:47:18 TRACE Variable:30 - Field/variable added: tst
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. 555assignment_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. 555conditional_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. 555logical_or_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. 555logical_and_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. 555inclusive_or_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. 555exclusive_or_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. 555and_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. 555equality_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. 555relational_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. 555shift_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. 555additive_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. 555multiplicative_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. 555unary_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. 555postfix_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. 555primary_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. 555constant
2014-06-18 02:47:18 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:47:18 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:47:18 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:47:18 TRACE Expression:45 - Expression text: 555
2014-06-18 02:47:18 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. 1assignment_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. 1conditional_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. 1logical_or_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. 1logical_and_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. 1inclusive_or_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. 1exclusive_or_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. 1and_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. 1equality_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. 1relational_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. 1shift_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. 1additive_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. 1multiplicative_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. 1unary_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. 1postfix_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. 1primary_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. 1constant
2014-06-18 02:47:18 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:47:18 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:47:18 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:47:18 TRACE Expression:45 - Expression text: 1
2014-06-18 02:47:18 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. tst+1assignment_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. tst+1conditional_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. tst+1logical_or_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. tst+1logical_and_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. tst+1inclusive_or_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. tst+1exclusive_or_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. tst+1and_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. tst+1equality_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. tst+1relational_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. tst+1shift_expression
2014-06-18 02:47:18 TRACE Expression:42 - Expression added: PLUS
2014-06-18 02:47:18 TRACE Expression:43 - Token: '+'
2014-06-18 02:47:18 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 02:47:18 TRACE Expression:45 - Expression text: tst+1
2014-06-18 02:47:18 TRACE Expression:242 - int_visitLdcInsn: 555
2014-06-18 02:47:18 TRACE Expression:242 - int_visitLdcInsn: 1
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. tstmultiplicative_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. tstunary_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. tstpostfix_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. tstprimary_expression
2014-06-18 02:47:18 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:47:18 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:47:18 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:47:18 TRACE Expression:45 - Expression text: tst
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. 1additive_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. 1multiplicative_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. 1unary_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. 1postfix_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. 1primary_expression
2014-06-18 02:47:18 WARN  Expression:122 - OneChild tree. 1constant
2014-06-18 02:47:18 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:47:18 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:47:18 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:47:18 TRACE Expression:45 - Expression text: 1
2014-06-18 02:47:18 TRACE Expression:242 - int_visitLdcInsn: 1
2014-06-18 02:49:17 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 02:49:17 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 02:49:17 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 02:49:17 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) })
2014-06-18 02:49:17 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 02:49:17 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;}
2014-06-18 02:49:17 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@21,352:352='}',<40>,18:0]}
2014-06-18 02:49:17 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 02:49:17 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 02:49:17 TRACE ClassDef:55 - Class name: Test
2014-06-18 02:49:17 TRACE Variable:30 - Field/variable added: tst
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. 555assignment_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. 555conditional_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. 555logical_or_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. 555logical_and_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. 555inclusive_or_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. 555exclusive_or_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. 555and_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. 555equality_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. 555relational_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. 555shift_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. 555additive_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. 555multiplicative_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. 555unary_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. 555postfix_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. 555primary_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. 555constant
2014-06-18 02:49:17 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:49:17 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:49:17 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:49:17 TRACE Expression:45 - Expression text: 555
2014-06-18 02:49:17 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. 1assignment_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. 1conditional_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. 1logical_or_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. 1logical_and_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. 1inclusive_or_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. 1exclusive_or_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. 1and_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. 1equality_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. 1relational_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. 1shift_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 02:49:17 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:49:17 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:49:17 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:49:17 TRACE Expression:45 - Expression text: 1
2014-06-18 02:49:17 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. tst+1assignment_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. tst+1conditional_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. tst+1logical_or_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. tst+1logical_and_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. tst+1inclusive_or_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. tst+1exclusive_or_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. tst+1and_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. tst+1equality_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. tst+1relational_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. tst+1shift_expression
2014-06-18 02:49:17 TRACE Expression:42 - Expression added: PLUS
2014-06-18 02:49:17 TRACE Expression:43 - Token: '+'
2014-06-18 02:49:17 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 02:49:17 TRACE Expression:45 - Expression text: tst+1
2014-06-18 02:49:17 TRACE Expression:241 - int_visitLdcInsn: 555
2014-06-18 02:49:17 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. tstmultiplicative_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. tstunary_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. tstpostfix_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. tstprimary_expression
2014-06-18 02:49:17 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:49:17 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:49:17 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:49:17 TRACE Expression:45 - Expression text: tst
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 02:49:17 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 02:49:17 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:49:17 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:49:17 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:49:17 TRACE Expression:45 - Expression text: 1
2014-06-18 02:49:17 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 02:49:17 INFO  CsCompiler:69 - 1; declaration; inttst=555;
2014-06-18 02:49:17 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def, declaration]{start=[@4,25:27='int',<14>,3:3], stop=[@8,38:38=';',<45>,3:16]}
2014-06-18 02:50:39 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 02:50:39 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 02:50:39 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 02:50:39 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) })
2014-06-18 02:50:40 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 02:50:40 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;}
2014-06-18 02:50:40 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@21,352:352='}',<40>,18:0]}
2014-06-18 02:50:40 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 02:50:40 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 02:50:40 TRACE ClassDef:55 - Class name: Test
2014-06-18 02:50:40 TRACE Variable:30 - Field/variable added: tst
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. 555assignment_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. 555conditional_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. 555logical_or_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. 555logical_and_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. 555inclusive_or_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. 555exclusive_or_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. 555and_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. 555equality_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. 555relational_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. 555shift_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. 555additive_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. 555multiplicative_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. 555unary_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. 555postfix_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. 555primary_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. 555constant
2014-06-18 02:50:40 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:50:40 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:50:40 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:50:40 TRACE Expression:45 - Expression text: 555
2014-06-18 02:50:40 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. 1assignment_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. 1conditional_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. 1logical_or_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. 1logical_and_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. 1inclusive_or_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. 1exclusive_or_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. 1and_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. 1equality_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. 1relational_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. 1shift_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 02:50:40 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:50:40 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:50:40 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:50:40 TRACE Expression:45 - Expression text: 1
2014-06-18 02:50:40 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. tst+1assignment_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. tst+1conditional_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. tst+1logical_or_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. tst+1logical_and_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. tst+1inclusive_or_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. tst+1exclusive_or_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. tst+1and_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. tst+1equality_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. tst+1relational_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. tst+1shift_expression
2014-06-18 02:50:40 TRACE Expression:42 - Expression added: PLUS
2014-06-18 02:50:40 TRACE Expression:43 - Token: '+'
2014-06-18 02:50:40 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 02:50:40 TRACE Expression:45 - Expression text: tst+1
2014-06-18 02:50:40 TRACE Expression:241 - int_visitLdcInsn: 555
2014-06-18 02:50:40 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. tstmultiplicative_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. tstunary_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. tstpostfix_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. tstprimary_expression
2014-06-18 02:50:40 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:50:40 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:50:40 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:50:40 TRACE Expression:45 - Expression text: tst
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 02:50:40 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 02:50:40 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:50:40 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:50:40 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:50:40 TRACE Expression:45 - Expression text: 1
2014-06-18 02:50:40 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 02:50:40 INFO  CsCompiler:69 - 1; declaration; inttst=555;
2014-06-18 02:50:40 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def, declaration]{start=[@4,25:27='int',<14>,3:3], stop=[@8,38:38=';',<45>,3:16]}
2014-06-18 02:51:01 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 02:51:01 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 02:51:01 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 02:51:01 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (unary_expression (postfix_expression (primary_expression yyy))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 02:51:01 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 02:51:01 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy=123;publicstaticvoidMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 02:51:01 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@76,299:299='}',<40>,16:0]}
2014-06-18 02:51:01 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 02:51:01 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 02:51:01 TRACE ClassDef:55 - Class name: Test
2014-06-18 02:51:01 TRACE Variable:30 - Field/variable added: tst
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 555assignment_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 555conditional_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 555logical_or_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 555logical_and_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 555inclusive_or_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 555exclusive_or_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 555and_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 555equality_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 555relational_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 555shift_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 555additive_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 555multiplicative_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 555unary_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 555postfix_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 555primary_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 555constant
2014-06-18 02:51:02 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:51:02 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:51:02 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:51:02 TRACE Expression:45 - Expression text: 555
2014-06-18 02:51:02 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 1assignment_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 1conditional_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 1logical_or_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 1logical_and_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 1inclusive_or_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 1exclusive_or_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 1and_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 1equality_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 1relational_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 1shift_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 02:51:02 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:51:02 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:51:02 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:51:02 TRACE Expression:45 - Expression text: 1
2014-06-18 02:51:02 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. tst+1assignment_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. tst+1conditional_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. tst+1logical_or_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. tst+1logical_and_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. tst+1inclusive_or_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. tst+1exclusive_or_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. tst+1and_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. tst+1equality_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. tst+1relational_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. tst+1shift_expression
2014-06-18 02:51:02 TRACE Expression:42 - Expression added: PLUS
2014-06-18 02:51:02 TRACE Expression:43 - Token: '+'
2014-06-18 02:51:02 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 02:51:02 TRACE Expression:45 - Expression text: tst+1
2014-06-18 02:51:02 TRACE Variable:30 - Field/variable added: zzz
2014-06-18 02:51:02 TRACE Expression:42 - Expression added: ASSIGN
2014-06-18 02:51:02 TRACE Expression:43 - Token: '='
2014-06-18 02:51:02 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 02:51:02 TRACE Expression:45 - Expression text: yyy=123
2014-06-18 02:51:02 TRACE ClassMethod:39 - Method added: Main
2014-06-18 02:51:02 TRACE Variable:30 - Field/variable added: s
2014-06-18 02:51:02 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 02:51:02 TRACE Variable:30 - Field/variable added: a
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 5assignment_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 5conditional_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 5logical_or_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 5logical_and_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 5inclusive_or_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 5exclusive_or_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 5and_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 5equality_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 5relational_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 5shift_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 5additive_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 5multiplicative_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 5unary_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 5postfix_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 5primary_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 5constant
2014-06-18 02:51:02 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:51:02 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:51:02 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:51:02 TRACE Expression:45 - Expression text: 5
2014-06-18 02:51:02 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 02:51:02 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. newint[1,2][3]assignment_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. newint[1,2][3]conditional_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. newint[1,2][3]logical_or_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. newint[1,2][3]logical_and_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. newint[1,2][3]inclusive_or_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. newint[1,2][3]exclusive_or_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. newint[1,2][3]and_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. newint[1,2][3]equality_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. newint[1,2][3]relational_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. newint[1,2][3]shift_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. newint[1,2][3]additive_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. newint[1,2][3]multiplicative_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. newint[1,2][3]unary_expression
2014-06-18 02:51:02 TRACE ConstructorExpression:19 - Constructor call added: newint[1,2][3]
2014-06-18 02:51:02 TRACE Expression:42 - Expression added: NEW
2014-06-18 02:51:02 TRACE Expression:43 - Token: 'new'
2014-06-18 02:51:02 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 02:51:02 TRACE Expression:45 - Expression text: newint[1,2][3]
2014-06-18 02:51:02 TRACE CompoundStatement:49 - stmt in da block: System.Console.WriteLine("Hello, World!");
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")assignment_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")conditional_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")logical_or_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")logical_and_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")inclusive_or_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")exclusive_or_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")and_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")equality_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")relational_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")shift_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")additive_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")multiplicative_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")unary_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. Systemprimary_expression
2014-06-18 02:51:02 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:51:02 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:51:02 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:51:02 TRACE Expression:45 - Expression text: System
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. Consoleprimary_expression
2014-06-18 02:51:02 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:51:02 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:51:02 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:51:02 TRACE Expression:45 - Expression text: Console
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. WriteLineprimary_expression
2014-06-18 02:51:02 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:51:02 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:51:02 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:51:02 TRACE Expression:45 - Expression text: WriteLine
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. "Hello, World!"assignment_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. "Hello, World!"conditional_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. "Hello, World!"logical_or_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. "Hello, World!"logical_and_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. "Hello, World!"inclusive_or_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. "Hello, World!"exclusive_or_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. "Hello, World!"and_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. "Hello, World!"equality_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. "Hello, World!"relational_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. "Hello, World!"shift_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. "Hello, World!"additive_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. "Hello, World!"multiplicative_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. "Hello, World!"unary_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. "Hello, World!"postfix_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. "Hello, World!"primary_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. "Hello, World!"constant
2014-06-18 02:51:02 TRACE Expression:42 - Expression added: CHARACTER_LITERAL
2014-06-18 02:51:02 TRACE Expression:43 - Token: STRING_LITERAL
2014-06-18 02:51:02 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$1
2014-06-18 02:51:02 TRACE Expression:45 - Expression text: "Hello, World!"
2014-06-18 02:51:02 TRACE PostfixExpression:50 - Constructor call added: WriteLine("Hello, World!")
2014-06-18 02:51:02 TRACE Expression:42 - Expression added: DOT
2014-06-18 02:51:02 TRACE Expression:43 - Token: '.'
2014-06-18 02:51:02 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 02:51:02 TRACE Expression:45 - Expression text: WriteLine("Hello, World!")
2014-06-18 02:51:02 TRACE PostfixExpression:50 - Constructor call added: Console.WriteLine("Hello, World!")
2014-06-18 02:51:02 TRACE Expression:42 - Expression added: DOT
2014-06-18 02:51:02 TRACE Expression:43 - Token: '.'
2014-06-18 02:51:02 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 02:51:02 TRACE Expression:45 - Expression text: Console.WriteLine("Hello, World!")
2014-06-18 02:51:02 TRACE PostfixExpression:50 - Constructor call added: System.Console.WriteLine("Hello, World!")
2014-06-18 02:51:02 TRACE Expression:42 - Expression added: DOT
2014-06-18 02:51:02 TRACE Expression:43 - Token: '.'
2014-06-18 02:51:02 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 02:51:02 TRACE Expression:45 - Expression text: System.Console.WriteLine("Hello, World!")
2014-06-18 02:51:02 TRACE CompoundStatement:49 - stmt in da block: a=6;
2014-06-18 02:51:02 TRACE Expression:42 - Expression added: ASSIGN
2014-06-18 02:51:02 TRACE Expression:43 - Token: '='
2014-06-18 02:51:02 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 02:51:02 TRACE Expression:45 - Expression text: a=6
2014-06-18 02:51:02 TRACE Expression:241 - int_visitLdcInsn: 555
2014-06-18 02:51:02 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. tstmultiplicative_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. tstunary_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. tstpostfix_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. tstprimary_expression
2014-06-18 02:51:02 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:51:02 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:51:02 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:51:02 TRACE Expression:45 - Expression text: tst
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 02:51:02 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:51:02 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:51:02 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:51:02 TRACE Expression:45 - Expression text: 1
2014-06-18 02:51:02 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. yyyunary_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. yyypostfix_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. yyyprimary_expression
2014-06-18 02:51:02 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:51:02 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:51:02 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:51:02 TRACE Expression:45 - Expression text: yyy
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 123assignment_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 123conditional_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 123logical_or_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 123logical_and_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 123inclusive_or_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 123exclusive_or_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 123and_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 123equality_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 123relational_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 123shift_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 123additive_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 123multiplicative_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 123unary_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 123postfix_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 123primary_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 123constant
2014-06-18 02:51:02 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:51:02 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:51:02 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:51:02 TRACE Expression:45 - Expression text: 123
2014-06-18 02:51:02 TRACE Expression:241 - int_visitLdcInsn: 123
2014-06-18 02:51:02 TRACE ClassMethod:95 - Compiling method Main w. args V. Is constructor: false
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. aunary_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. apostfix_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. aprimary_expression
2014-06-18 02:51:02 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:51:02 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:51:02 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:51:02 TRACE Expression:45 - Expression text: a
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 6assignment_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 6conditional_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 6logical_or_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 6logical_and_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 6inclusive_or_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 6exclusive_or_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 6and_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 6equality_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 6relational_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 6shift_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 6additive_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 6multiplicative_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 6unary_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 6postfix_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 6primary_expression
2014-06-18 02:51:02 WARN  Expression:121 - OneChild tree. 6constant
2014-06-18 02:51:02 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:51:02 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:51:02 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:51:02 TRACE Expression:45 - Expression text: 6
2014-06-18 02:51:02 TRACE Expression:241 - int_visitLdcInsn: 6
2014-06-18 02:51:02 INFO  CsCompiler:69 - 1; declaration; inttst=555;
2014-06-18 02:51:02 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def, declaration]{start=[@4,25:27='int',<14>,3:3], stop=[@8,38:38=';',<45>,3:16]}
2014-06-18 02:51:30 TRACE CsCompiler:40 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-18 02:51:30 TRACE CsCompiler:41 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-18 02:51:30 DEBUG CsCompiler:43 - Printing parse tree:
2014-06-18 02:51:30 DEBUG CsCompiler:44 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier void)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression System) . (postfix_expression (primary_expression Console) . (postfix_expression (primary_expression WriteLine) ( (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant "Hello, World!"))))))))))))))))) ))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6))))))))))))))))) ;)) })) })
2014-06-18 02:51:31 INFO  CsCompiler:54 - Parse of Test.cs completed successfully
2014-06-18 02:51:31 INFO  CsCompiler:69 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticvoidMain(Strings){inta=5;int[,][]testInt=newint[1,2][3];System.Console.WriteLine("Hello, World!");a=6;}}
2014-06-18 02:51:31 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@78,305:305='}',<40>,16:0]}
2014-06-18 02:51:31 TRACE ClassDef:46 - AccessModifiers#: 1
2014-06-18 02:51:31 TRACE ClassDef:48 - OtherModifiers#: 1
2014-06-18 02:51:31 TRACE ClassDef:55 - Class name: Test
2014-06-18 02:51:31 TRACE Variable:30 - Field/variable added: tst
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 555assignment_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 555conditional_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 555logical_or_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 555logical_and_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 555inclusive_or_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 555exclusive_or_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 555and_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 555equality_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 555relational_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 555shift_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 555additive_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 555multiplicative_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 555unary_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 555postfix_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 555primary_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 555constant
2014-06-18 02:51:31 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:51:31 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:51:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:51:31 TRACE Expression:45 - Expression text: 555
2014-06-18 02:51:31 TRACE Variable:30 - Field/variable added: xxx
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 1assignment_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 1conditional_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 1logical_or_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 1logical_and_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 1inclusive_or_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 1exclusive_or_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 1and_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 1equality_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 1relational_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 1shift_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 02:51:31 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:51:31 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:51:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:51:31 TRACE Expression:45 - Expression text: 1
2014-06-18 02:51:31 TRACE Variable:30 - Field/variable added: yyy
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. tst+1assignment_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. tst+1conditional_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. tst+1logical_or_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. tst+1logical_and_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. tst+1inclusive_or_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. tst+1exclusive_or_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. tst+1and_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. tst+1equality_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. tst+1relational_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. tst+1shift_expression
2014-06-18 02:51:31 TRACE Expression:42 - Expression added: PLUS
2014-06-18 02:51:31 TRACE Expression:43 - Token: '+'
2014-06-18 02:51:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 02:51:31 TRACE Expression:45 - Expression text: tst+1
2014-06-18 02:51:31 TRACE Variable:30 - Field/variable added: zzz
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. yyy+xxx+123assignment_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. yyy+xxx+123conditional_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. yyy+xxx+123logical_or_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. yyy+xxx+123logical_and_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. yyy+xxx+123inclusive_or_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. yyy+xxx+123exclusive_or_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. yyy+xxx+123and_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. yyy+xxx+123equality_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. yyy+xxx+123relational_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. yyy+xxx+123shift_expression
2014-06-18 02:51:31 TRACE Expression:42 - Expression added: PLUS
2014-06-18 02:51:31 TRACE Expression:43 - Token: '+'
2014-06-18 02:51:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 02:51:31 TRACE Expression:45 - Expression text: yyy+xxx+123
2014-06-18 02:51:31 TRACE ClassMethod:39 - Method added: Main
2014-06-18 02:51:31 TRACE Variable:30 - Field/variable added: s
2014-06-18 02:51:31 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-18 02:51:31 TRACE Variable:30 - Field/variable added: a
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 5assignment_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 5conditional_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 5logical_or_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 5logical_and_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 5inclusive_or_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 5exclusive_or_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 5and_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 5equality_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 5relational_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 5shift_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 5additive_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 5multiplicative_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 5unary_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 5postfix_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 5primary_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 5constant
2014-06-18 02:51:31 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:51:31 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:51:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:51:31 TRACE Expression:45 - Expression text: 5
2014-06-18 02:51:31 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-18 02:51:31 TRACE Variable:30 - Field/variable added: testInt
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. newint[1,2][3]assignment_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. newint[1,2][3]conditional_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. newint[1,2][3]logical_or_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. newint[1,2][3]logical_and_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. newint[1,2][3]inclusive_or_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. newint[1,2][3]exclusive_or_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. newint[1,2][3]and_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. newint[1,2][3]equality_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. newint[1,2][3]relational_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. newint[1,2][3]shift_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. newint[1,2][3]additive_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. newint[1,2][3]multiplicative_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. newint[1,2][3]unary_expression
2014-06-18 02:51:31 TRACE ConstructorExpression:19 - Constructor call added: newint[1,2][3]
2014-06-18 02:51:31 TRACE Expression:42 - Expression added: NEW
2014-06-18 02:51:31 TRACE Expression:43 - Token: 'new'
2014-06-18 02:51:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-18 02:51:31 TRACE Expression:45 - Expression text: newint[1,2][3]
2014-06-18 02:51:31 TRACE CompoundStatement:49 - stmt in da block: System.Console.WriteLine("Hello, World!");
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")assignment_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")conditional_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")logical_or_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")logical_and_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")inclusive_or_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")exclusive_or_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")and_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")equality_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")relational_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")shift_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")additive_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")multiplicative_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. System.Console.WriteLine("Hello, World!")unary_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. Systemprimary_expression
2014-06-18 02:51:31 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:51:31 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:51:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:51:31 TRACE Expression:45 - Expression text: System
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. Consoleprimary_expression
2014-06-18 02:51:31 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:51:31 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:51:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:51:31 TRACE Expression:45 - Expression text: Console
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. WriteLineprimary_expression
2014-06-18 02:51:31 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:51:31 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:51:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:51:31 TRACE Expression:45 - Expression text: WriteLine
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. "Hello, World!"assignment_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. "Hello, World!"conditional_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. "Hello, World!"logical_or_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. "Hello, World!"logical_and_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. "Hello, World!"inclusive_or_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. "Hello, World!"exclusive_or_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. "Hello, World!"and_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. "Hello, World!"equality_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. "Hello, World!"relational_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. "Hello, World!"shift_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. "Hello, World!"additive_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. "Hello, World!"multiplicative_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. "Hello, World!"unary_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. "Hello, World!"postfix_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. "Hello, World!"primary_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. "Hello, World!"constant
2014-06-18 02:51:31 TRACE Expression:42 - Expression added: CHARACTER_LITERAL
2014-06-18 02:51:31 TRACE Expression:43 - Token: STRING_LITERAL
2014-06-18 02:51:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$1
2014-06-18 02:51:31 TRACE Expression:45 - Expression text: "Hello, World!"
2014-06-18 02:51:31 TRACE PostfixExpression:50 - Constructor call added: WriteLine("Hello, World!")
2014-06-18 02:51:31 TRACE Expression:42 - Expression added: DOT
2014-06-18 02:51:31 TRACE Expression:43 - Token: '.'
2014-06-18 02:51:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 02:51:31 TRACE Expression:45 - Expression text: WriteLine("Hello, World!")
2014-06-18 02:51:31 TRACE PostfixExpression:50 - Constructor call added: Console.WriteLine("Hello, World!")
2014-06-18 02:51:31 TRACE Expression:42 - Expression added: DOT
2014-06-18 02:51:31 TRACE Expression:43 - Token: '.'
2014-06-18 02:51:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 02:51:31 TRACE Expression:45 - Expression text: Console.WriteLine("Hello, World!")
2014-06-18 02:51:31 TRACE PostfixExpression:50 - Constructor call added: System.Console.WriteLine("Hello, World!")
2014-06-18 02:51:31 TRACE Expression:42 - Expression added: DOT
2014-06-18 02:51:31 TRACE Expression:43 - Token: '.'
2014-06-18 02:51:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.PostfixExpression
2014-06-18 02:51:31 TRACE Expression:45 - Expression text: System.Console.WriteLine("Hello, World!")
2014-06-18 02:51:31 TRACE CompoundStatement:49 - stmt in da block: a=6;
2014-06-18 02:51:31 TRACE Expression:42 - Expression added: ASSIGN
2014-06-18 02:51:31 TRACE Expression:43 - Token: '='
2014-06-18 02:51:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-18 02:51:31 TRACE Expression:45 - Expression text: a=6
2014-06-18 02:51:31 TRACE Expression:241 - int_visitLdcInsn: 555
2014-06-18 02:51:31 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. tstmultiplicative_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. tstunary_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. tstpostfix_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. tstprimary_expression
2014-06-18 02:51:31 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:51:31 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:51:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:51:31 TRACE Expression:45 - Expression text: tst
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 1additive_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 1multiplicative_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 1unary_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 1postfix_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 1primary_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 1constant
2014-06-18 02:51:31 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:51:31 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:51:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:51:31 TRACE Expression:45 - Expression text: 1
2014-06-18 02:51:31 TRACE Expression:241 - int_visitLdcInsn: 1
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. yyymultiplicative_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. yyyunary_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. yyypostfix_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. yyyprimary_expression
2014-06-18 02:51:31 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:51:31 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:51:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:51:31 TRACE Expression:45 - Expression text: yyy
2014-06-18 02:51:31 TRACE Expression:42 - Expression added: PLUS
2014-06-18 02:51:31 TRACE Expression:43 - Token: '+'
2014-06-18 02:51:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-18 02:51:31 TRACE Expression:45 - Expression text: xxx+123
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. xxxmultiplicative_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. xxxunary_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. xxxpostfix_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. xxxprimary_expression
2014-06-18 02:51:31 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:51:31 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:51:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:51:31 TRACE Expression:45 - Expression text: xxx
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 123additive_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 123multiplicative_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 123unary_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 123postfix_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 123primary_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 123constant
2014-06-18 02:51:31 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:51:31 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:51:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:51:31 TRACE Expression:45 - Expression text: 123
2014-06-18 02:51:31 TRACE Expression:241 - int_visitLdcInsn: 123
2014-06-18 02:51:31 TRACE ClassMethod:95 - Compiling method Main w. args V. Is constructor: false
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. aunary_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. apostfix_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. aprimary_expression
2014-06-18 02:51:31 TRACE Expression:42 - Expression added: IDENTIFIER
2014-06-18 02:51:31 TRACE Expression:43 - Token: IDENTIFIER
2014-06-18 02:51:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-18 02:51:31 TRACE Expression:45 - Expression text: a
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 6assignment_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 6conditional_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 6logical_or_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 6logical_and_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 6inclusive_or_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 6exclusive_or_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 6and_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 6equality_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 6relational_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 6shift_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 6additive_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 6multiplicative_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 6unary_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 6postfix_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 6primary_expression
2014-06-18 02:51:31 WARN  Expression:121 - OneChild tree. 6constant
2014-06-18 02:51:31 TRACE Expression:42 - Expression added: HEX_LITERAL
2014-06-18 02:51:31 TRACE Expression:43 - Token: DECIMAL_LITERAL
2014-06-18 02:51:31 TRACE Expression:44 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-18 02:51:31 TRACE Expression:45 - Expression text: 6
2014-06-18 02:51:31 TRACE Expression:241 - int_visitLdcInsn: 6
2014-06-18 02:51:31 INFO  CsCompiler:69 - 1; declaration; inttst=555;
2014-06-18 02:51:31 INFO  CsCompiler:70 - 	 ParserRuleContext[cls_def, declaration]{start=[@4,25:27='int',<14>,3:3], stop=[@8,38:38=';',<45>,3:16]}
