2014-06-21 11:49:25 INFO  CsCompiler:55 - Parse of Test.cs completed successfully
2014-06-21 11:49:25 INFO  CsCompiler:70 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[0,0][0]=781;a+=xxx+6;xxx=yyy;returnxxx*(((a-7)*yyy));}}
2014-06-21 11:49:25 INFO  CsCompiler:71 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@107,491:491='}',<40>,22:0]}
2014-06-21 11:49:25 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-21 11:49:25 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-21 11:49:25 TRACE ClassDef:53 - Class name: Test
2014-06-21 11:49:25 TRACE Variable:30 - Field/variable added: tst
2014-06-21 11:49:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:49:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:49:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:49:25 TRACE Expression:41 - Expression text: 555
2014-06-21 11:49:25 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 11:49:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:49:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:49:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:49:25 TRACE Expression:41 - Expression text: 1
2014-06-21 11:49:25 TRACE Variable:30 - Field/variable added: yyy
2014-06-21 11:49:25 TRACE Expression:38 - Expression added: PLUS
2014-06-21 11:49:25 TRACE Expression:39 - Token: '+'
2014-06-21 11:49:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 11:49:25 TRACE Expression:41 - Expression text: tst+1
2014-06-21 11:49:25 TRACE Variable:30 - Field/variable added: zzz
2014-06-21 11:49:25 TRACE Expression:38 - Expression added: PLUS
2014-06-21 11:49:25 TRACE Expression:39 - Token: '+'
2014-06-21 11:49:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 11:49:25 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-21 11:49:25 TRACE ClassMethod:39 - Method added: Main
2014-06-21 11:49:25 TRACE Variable:30 - Field/variable added: s
2014-06-21 11:49:25 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-21 11:49:25 TRACE Variable:30 - Field/variable added: a
2014-06-21 11:49:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:49:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:49:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:49:25 TRACE Expression:41 - Expression text: 5
2014-06-21 11:49:25 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-21 11:49:25 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 11:49:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:49:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:49:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:49:25 TRACE Expression:41 - Expression text: 2
2014-06-21 11:49:25 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-21 11:49:25 TRACE Variable:30 - Field/variable added: testInt
2014-06-21 11:49:25 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-21 11:49:25 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-21 11:49:25 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 11:49:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:49:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:49:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:49:25 TRACE Expression:41 - Expression text: 1
2014-06-21 11:49:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:49:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:49:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:49:25 TRACE Expression:41 - Expression text: 2
2014-06-21 11:49:25 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 11:49:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:49:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:49:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:49:25 TRACE Expression:41 - Expression text: 3
2014-06-21 11:49:25 TRACE Expression:38 - Expression added: NEW
2014-06-21 11:49:25 TRACE Expression:39 - Token: 'new'
2014-06-21 11:49:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-21 11:49:25 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-21 11:49:25 TRACE CompoundStatement:49 - stmt in da block: testInt[0,0][0]=781;
2014-06-21 11:49:25 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 11:49:25 TRACE Expression:39 - Token: '='
2014-06-21 11:49:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 11:49:25 TRACE Expression:41 - Expression text: testInt[0,0][0]=781
2014-06-21 11:49:25 TRACE CompoundStatement:49 - stmt in da block: a+=xxx+6;
2014-06-21 11:49:25 TRACE Expression:38 - Expression added: ADD_ASS
2014-06-21 11:49:25 TRACE Expression:39 - Token: '+='
2014-06-21 11:49:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$10
2014-06-21 11:49:25 TRACE Expression:41 - Expression text: a+=xxx+6
2014-06-21 11:49:25 TRACE CompoundStatement:49 - stmt in da block: xxx=yyy;
2014-06-21 11:49:25 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 11:49:25 TRACE Expression:39 - Token: '='
2014-06-21 11:49:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 11:49:25 TRACE Expression:41 - Expression text: xxx=yyy
2014-06-21 11:49:25 TRACE CompoundStatement:49 - stmt in da block: returnxxx*(((a-7)*yyy));
2014-06-21 11:49:25 TRACE Expression:38 - Expression added: MUL
2014-06-21 11:49:25 TRACE Expression:39 - Token: '*'
2014-06-21 11:49:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 11:49:25 TRACE Expression:41 - Expression text: xxx*(((a-7)*yyy))
2014-06-21 11:49:25 TRACE Expression:243 - int_visitLdcInsn: 555
2014-06-21 11:49:25 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 11:49:25 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:49:25 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:49:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:49:25 TRACE Expression:41 - Expression text: tst
2014-06-21 11:49:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:49:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:49:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:49:25 TRACE Expression:41 - Expression text: 1
2014-06-21 11:49:25 TRACE IDExpressionType:63 - tst Test I
2014-06-21 11:49:25 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 11:49:25 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:49:25 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:49:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:49:25 TRACE Expression:41 - Expression text: yyy
2014-06-21 11:49:25 TRACE Expression:38 - Expression added: PLUS
2014-06-21 11:49:25 TRACE Expression:39 - Token: '+'
2014-06-21 11:49:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 11:49:25 TRACE Expression:41 - Expression text: xxx+123
2014-06-21 11:49:25 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 11:49:25 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:49:25 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:49:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:49:25 TRACE Expression:41 - Expression text: xxx
2014-06-21 11:49:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:49:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:49:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:49:25 TRACE Expression:41 - Expression text: 123
2014-06-21 11:49:25 TRACE IDExpressionType:63 - xxx Test I
2014-06-21 11:49:25 TRACE Expression:243 - int_visitLdcInsn: 123
2014-06-21 11:49:25 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-21 11:49:25 TRACE Expression:243 - int_visitLdcInsn: 5
2014-06-21 11:49:25 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = a, index = 1
2014-06-21 11:49:25 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 11:49:25 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-21 11:49:25 TRACE ConstructorExpression:85 - t= I
2014-06-21 11:49:25 TRACE ConstructorExpression:86 - #args= 3
2014-06-21 11:49:25 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 11:49:25 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 11:49:25 TRACE Expression:243 - int_visitLdcInsn: 3
2014-06-21 11:49:25 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-21 11:49:25 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 11:49:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:49:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:49:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:49:25 TRACE Expression:41 - Expression text: 0
2014-06-21 11:49:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:49:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:49:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:49:25 TRACE Expression:41 - Expression text: 0
2014-06-21 11:49:25 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 11:49:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:49:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:49:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:49:25 TRACE Expression:41 - Expression text: 0
2014-06-21 11:49:25 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:49:25 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:49:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-21 11:49:25 TRACE Expression:41 - Expression text: testInt[0,0][0]
2014-06-21 11:49:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:49:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:49:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:49:25 TRACE Expression:41 - Expression text: 781
2014-06-21 11:49:25 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 11:49:25 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 11:49:25 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 11:49:25 TRACE Expression:243 - int_visitLdcInsn: 781
2014-06-21 11:49:25 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:49:25 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:49:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:49:25 TRACE Expression:41 - Expression text: a
2014-06-21 11:49:25 TRACE Expression:38 - Expression added: PLUS
2014-06-21 11:49:25 TRACE Expression:39 - Token: '+'
2014-06-21 11:49:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 11:49:25 TRACE Expression:41 - Expression text: xxx+6
2014-06-21 11:49:25 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:49:25 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:49:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:49:25 TRACE Expression:41 - Expression text: xxx
2014-06-21 11:49:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:49:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:49:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:49:25 TRACE Expression:41 - Expression text: 6
2014-06-21 11:49:25 TRACE Expression:243 - int_visitLdcInsn: 6
2014-06-21 11:49:25 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:49:25 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:49:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:49:25 TRACE Expression:41 - Expression text: xxx
2014-06-21 11:49:25 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:49:25 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:49:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:49:25 TRACE Expression:41 - Expression text: yyy
2014-06-21 11:49:25 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 11:49:25 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:49:25 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:49:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:49:25 TRACE Expression:41 - Expression text: xxx
2014-06-21 11:49:25 TRACE Expression:38 - Expression added: MUL
2014-06-21 11:49:25 TRACE Expression:39 - Token: '*'
2014-06-21 11:49:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 11:49:25 TRACE Expression:41 - Expression text: (((a-7)*yyy))
2014-06-21 11:49:25 TRACE Expression:38 - Expression added: MINUS
2014-06-21 11:49:25 TRACE Expression:39 - Token: '-'
2014-06-21 11:49:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$22
2014-06-21 11:49:25 TRACE Expression:41 - Expression text: (a-7)
2014-06-21 11:49:25 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:49:25 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:49:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:49:25 TRACE Expression:41 - Expression text: yyy
2014-06-21 11:49:25 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:49:25 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:49:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:49:25 TRACE Expression:41 - Expression text: a
2014-06-21 11:49:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:49:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:49:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:49:25 TRACE Expression:41 - Expression text: 7
2014-06-21 11:49:25 TRACE Expression:243 - int_visitLdcInsn: 7
2014-06-21 11:49:25 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 11:49:25 INFO  CsCompiler:87 - tst = 555
2014-06-21 11:49:25 INFO  CsCompiler:87 - xxx = 1
2014-06-21 11:49:25 INFO  CsCompiler:87 - yyy = 556
2014-06-21 11:49:25 INFO  CsCompiler:87 - zzz = 680
2014-06-21 11:49:25 INFO  CsCompiler:95 - Main: 1854816
2014-06-21 11:49:31 TRACE CsCompiler:41 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-21 11:49:31 TRACE CsCompiler:42 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-21 11:49:31 DEBUG CsCompiler:44 - Printing parse tree:
2014-06-21 11:49:31 DEBUG CsCompiler:45 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator (assign_and_modify_operator +=)) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression xxx))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx))) * (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) - (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 7))))))))))))))))) )))) * (unary_expression (postfix_expression (primary_expression yyy))))))))))))))) ))))))) (comparsion_operator >) (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tdt)))))))))))))))) )))))))))))))))) ;)) })) })
2014-06-21 11:49:33 INFO  CsCompiler:55 - Parse of Test.cs completed successfully
2014-06-21 11:49:33 INFO  CsCompiler:70 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[0,0][0]=781;a+=xxx+6;xxx=yyy;returnxxx*(((a-7)*yyy)>tdt);}}
2014-06-21 11:49:33 INFO  CsCompiler:71 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@109,491:491='}',<40>,22:0]}
2014-06-21 11:49:33 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-21 11:49:33 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-21 11:49:33 TRACE ClassDef:53 - Class name: Test
2014-06-21 11:49:33 TRACE Variable:30 - Field/variable added: tst
2014-06-21 11:49:33 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:49:33 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:49:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:49:33 TRACE Expression:41 - Expression text: 555
2014-06-21 11:49:33 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 11:49:33 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:49:33 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:49:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:49:33 TRACE Expression:41 - Expression text: 1
2014-06-21 11:49:33 TRACE Variable:30 - Field/variable added: yyy
2014-06-21 11:49:33 TRACE Expression:38 - Expression added: PLUS
2014-06-21 11:49:33 TRACE Expression:39 - Token: '+'
2014-06-21 11:49:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 11:49:33 TRACE Expression:41 - Expression text: tst+1
2014-06-21 11:49:33 TRACE Variable:30 - Field/variable added: zzz
2014-06-21 11:49:33 TRACE Expression:38 - Expression added: PLUS
2014-06-21 11:49:33 TRACE Expression:39 - Token: '+'
2014-06-21 11:49:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 11:49:33 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-21 11:49:33 TRACE ClassMethod:39 - Method added: Main
2014-06-21 11:49:33 TRACE Variable:30 - Field/variable added: s
2014-06-21 11:49:33 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-21 11:49:33 TRACE Variable:30 - Field/variable added: a
2014-06-21 11:49:33 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:49:33 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:49:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:49:33 TRACE Expression:41 - Expression text: 5
2014-06-21 11:49:33 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-21 11:49:33 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 11:49:33 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:49:33 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:49:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:49:33 TRACE Expression:41 - Expression text: 2
2014-06-21 11:49:33 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-21 11:49:33 TRACE Variable:30 - Field/variable added: testInt
2014-06-21 11:49:33 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-21 11:49:33 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-21 11:49:33 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 11:49:33 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:49:33 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:49:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:49:33 TRACE Expression:41 - Expression text: 1
2014-06-21 11:49:33 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:49:33 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:49:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:49:33 TRACE Expression:41 - Expression text: 2
2014-06-21 11:49:33 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 11:49:33 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:49:33 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:49:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:49:33 TRACE Expression:41 - Expression text: 3
2014-06-21 11:49:33 TRACE Expression:38 - Expression added: NEW
2014-06-21 11:49:33 TRACE Expression:39 - Token: 'new'
2014-06-21 11:49:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-21 11:49:33 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-21 11:49:33 TRACE CompoundStatement:49 - stmt in da block: testInt[0,0][0]=781;
2014-06-21 11:49:33 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 11:49:33 TRACE Expression:39 - Token: '='
2014-06-21 11:49:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 11:49:33 TRACE Expression:41 - Expression text: testInt[0,0][0]=781
2014-06-21 11:49:33 TRACE CompoundStatement:49 - stmt in da block: a+=xxx+6;
2014-06-21 11:49:33 TRACE Expression:38 - Expression added: ADD_ASS
2014-06-21 11:49:33 TRACE Expression:39 - Token: '+='
2014-06-21 11:49:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$10
2014-06-21 11:49:33 TRACE Expression:41 - Expression text: a+=xxx+6
2014-06-21 11:49:33 TRACE CompoundStatement:49 - stmt in da block: xxx=yyy;
2014-06-21 11:49:33 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 11:49:33 TRACE Expression:39 - Token: '='
2014-06-21 11:49:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 11:49:33 TRACE Expression:41 - Expression text: xxx=yyy
2014-06-21 11:49:33 TRACE CompoundStatement:49 - stmt in da block: returnxxx*(((a-7)*yyy)>tdt);
2014-06-21 11:49:33 TRACE Expression:38 - Expression added: MUL
2014-06-21 11:49:33 TRACE Expression:39 - Token: '*'
2014-06-21 11:49:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 11:49:33 TRACE Expression:41 - Expression text: xxx*(((a-7)*yyy)>tdt)
2014-06-21 11:49:33 TRACE Expression:243 - int_visitLdcInsn: 555
2014-06-21 11:49:33 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 11:49:33 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:49:33 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:49:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:49:33 TRACE Expression:41 - Expression text: tst
2014-06-21 11:49:33 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:49:33 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:49:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:49:33 TRACE Expression:41 - Expression text: 1
2014-06-21 11:49:33 TRACE IDExpressionType:63 - tst Test I
2014-06-21 11:49:33 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 11:49:33 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:49:33 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:49:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:49:33 TRACE Expression:41 - Expression text: yyy
2014-06-21 11:49:33 TRACE Expression:38 - Expression added: PLUS
2014-06-21 11:49:33 TRACE Expression:39 - Token: '+'
2014-06-21 11:49:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 11:49:33 TRACE Expression:41 - Expression text: xxx+123
2014-06-21 11:49:33 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 11:49:33 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:49:33 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:49:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:49:33 TRACE Expression:41 - Expression text: xxx
2014-06-21 11:49:33 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:49:33 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:49:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:49:33 TRACE Expression:41 - Expression text: 123
2014-06-21 11:49:33 TRACE IDExpressionType:63 - xxx Test I
2014-06-21 11:49:33 TRACE Expression:243 - int_visitLdcInsn: 123
2014-06-21 11:49:33 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-21 11:49:33 TRACE Expression:243 - int_visitLdcInsn: 5
2014-06-21 11:49:33 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = a, index = 1
2014-06-21 11:49:33 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 11:49:33 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-21 11:49:33 TRACE ConstructorExpression:85 - t= I
2014-06-21 11:49:33 TRACE ConstructorExpression:86 - #args= 3
2014-06-21 11:49:33 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 11:49:33 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 11:49:33 TRACE Expression:243 - int_visitLdcInsn: 3
2014-06-21 11:49:33 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-21 11:49:33 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 11:49:33 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:49:33 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:49:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:49:33 TRACE Expression:41 - Expression text: 0
2014-06-21 11:49:33 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:49:33 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:49:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:49:33 TRACE Expression:41 - Expression text: 0
2014-06-21 11:49:33 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 11:49:33 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:49:33 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:49:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:49:33 TRACE Expression:41 - Expression text: 0
2014-06-21 11:49:33 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:49:33 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:49:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-21 11:49:33 TRACE Expression:41 - Expression text: testInt[0,0][0]
2014-06-21 11:49:33 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:49:33 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:49:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:49:33 TRACE Expression:41 - Expression text: 781
2014-06-21 11:49:33 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 11:49:33 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 11:49:33 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 11:49:33 TRACE Expression:243 - int_visitLdcInsn: 781
2014-06-21 11:49:33 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:49:33 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:49:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:49:33 TRACE Expression:41 - Expression text: a
2014-06-21 11:49:33 TRACE Expression:38 - Expression added: PLUS
2014-06-21 11:49:33 TRACE Expression:39 - Token: '+'
2014-06-21 11:49:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 11:49:33 TRACE Expression:41 - Expression text: xxx+6
2014-06-21 11:49:33 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:49:33 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:49:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:49:33 TRACE Expression:41 - Expression text: xxx
2014-06-21 11:49:33 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:49:33 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:49:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:49:33 TRACE Expression:41 - Expression text: 6
2014-06-21 11:49:33 TRACE Expression:243 - int_visitLdcInsn: 6
2014-06-21 11:49:33 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:49:33 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:49:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:49:33 TRACE Expression:41 - Expression text: xxx
2014-06-21 11:49:33 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:49:33 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:49:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:49:33 TRACE Expression:41 - Expression text: yyy
2014-06-21 11:49:33 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 11:49:33 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:49:33 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:49:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:49:33 TRACE Expression:41 - Expression text: xxx
2014-06-21 11:49:33 TRACE Expression:38 - Expression added: GT
2014-06-21 11:49:33 TRACE Expression:39 - Token: '>'
2014-06-21 11:49:33 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$33
2014-06-21 11:49:33 TRACE Expression:41 - Expression text: (((a-7)*yyy)>tdt)
2014-06-21 11:50:57 TRACE CsCompiler:41 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-21 11:50:57 TRACE CsCompiler:42 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-21 11:50:57 DEBUG CsCompiler:44 - Printing parse tree:
2014-06-21 11:50:57 DEBUG CsCompiler:45 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator (assign_and_modify_operator +=)) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression xxx))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx))) * (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) - (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 7))))))))))))))))) )))) * (unary_expression (postfix_expression (primary_expression yyy))))))))))))))) )))))))))))))))) )))))))))))))))) ;)) })) })
2014-06-21 11:50:58 INFO  CsCompiler:55 - Parse of Test.cs completed successfully
2014-06-21 11:50:58 INFO  CsCompiler:70 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[0,0][0]=781;a+=xxx+6;xxx=yyy;returnxxx*(((a-7)*yyy));}}
2014-06-21 11:50:58 INFO  CsCompiler:71 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@107,491:491='}',<40>,22:0]}
2014-06-21 11:50:58 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-21 11:50:58 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-21 11:50:58 TRACE ClassDef:53 - Class name: Test
2014-06-21 11:50:58 TRACE Variable:30 - Field/variable added: tst
2014-06-21 11:51:46 TRACE CsCompiler:41 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-21 11:51:46 TRACE CsCompiler:42 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-21 11:51:46 DEBUG CsCompiler:44 - Printing parse tree:
2014-06-21 11:51:46 DEBUG CsCompiler:45 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator (assign_and_modify_operator +=)) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression xxx))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx))) * (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) - (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 7))))))))))))))))) )))) * (unary_expression (postfix_expression (primary_expression yyy))))))))))))))) )))))))))))))))) )))))))))))))))) ;)) })) })
2014-06-21 11:51:47 INFO  CsCompiler:55 - Parse of Test.cs completed successfully
2014-06-21 11:51:47 INFO  CsCompiler:70 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[0,0][0]=781;a+=xxx+6;xxx=yyy;returnxxx*(((a-7)*yyy));}}
2014-06-21 11:51:47 INFO  CsCompiler:71 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@107,491:491='}',<40>,22:0]}
2014-06-21 11:51:47 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-21 11:51:47 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-21 11:51:47 TRACE ClassDef:53 - Class name: Test
2014-06-21 11:51:47 TRACE Variable:30 - Field/variable added: tst
2014-06-21 11:51:47 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:51:47 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:51:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:51:47 TRACE Expression:41 - Expression text: 555
2014-06-21 11:51:47 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 11:51:47 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:51:47 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:51:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:51:47 TRACE Expression:41 - Expression text: 1
2014-06-21 11:51:47 TRACE Variable:30 - Field/variable added: yyy
2014-06-21 11:51:47 TRACE Expression:38 - Expression added: PLUS
2014-06-21 11:51:47 TRACE Expression:39 - Token: '+'
2014-06-21 11:51:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 11:51:47 TRACE Expression:41 - Expression text: tst+1
2014-06-21 11:51:47 TRACE Variable:30 - Field/variable added: zzz
2014-06-21 11:51:47 TRACE Expression:38 - Expression added: PLUS
2014-06-21 11:51:47 TRACE Expression:39 - Token: '+'
2014-06-21 11:51:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 11:51:47 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-21 11:51:47 TRACE ClassMethod:39 - Method added: Main
2014-06-21 11:51:47 TRACE Variable:30 - Field/variable added: s
2014-06-21 11:51:47 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-21 11:51:47 TRACE Variable:30 - Field/variable added: a
2014-06-21 11:51:47 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:51:47 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:51:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:51:47 TRACE Expression:41 - Expression text: 5
2014-06-21 11:51:47 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-21 11:51:47 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 11:51:47 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:51:47 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:51:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:51:47 TRACE Expression:41 - Expression text: 2
2014-06-21 11:51:47 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-21 11:51:47 TRACE Variable:30 - Field/variable added: testInt
2014-06-21 11:51:47 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-21 11:51:47 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-21 11:51:47 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 11:51:47 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:51:47 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:51:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:51:47 TRACE Expression:41 - Expression text: 1
2014-06-21 11:51:47 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:51:47 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:51:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:51:47 TRACE Expression:41 - Expression text: 2
2014-06-21 11:51:47 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 11:51:47 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:51:47 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:51:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:51:47 TRACE Expression:41 - Expression text: 3
2014-06-21 11:51:47 TRACE Expression:38 - Expression added: NEW
2014-06-21 11:51:47 TRACE Expression:39 - Token: 'new'
2014-06-21 11:51:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-21 11:51:47 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-21 11:51:47 TRACE CompoundStatement:49 - stmt in da block: testInt[0,0][0]=781;
2014-06-21 11:51:47 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 11:51:47 TRACE Expression:39 - Token: '='
2014-06-21 11:51:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 11:51:47 TRACE Expression:41 - Expression text: testInt[0,0][0]=781
2014-06-21 11:51:47 TRACE CompoundStatement:49 - stmt in da block: a+=xxx+6;
2014-06-21 11:51:47 TRACE Expression:38 - Expression added: ADD_ASS
2014-06-21 11:51:47 TRACE Expression:39 - Token: '+='
2014-06-21 11:51:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$10
2014-06-21 11:51:47 TRACE Expression:41 - Expression text: a+=xxx+6
2014-06-21 11:51:47 TRACE CompoundStatement:49 - stmt in da block: xxx=yyy;
2014-06-21 11:51:47 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 11:51:47 TRACE Expression:39 - Token: '='
2014-06-21 11:51:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 11:51:47 TRACE Expression:41 - Expression text: xxx=yyy
2014-06-21 11:51:47 TRACE CompoundStatement:49 - stmt in da block: returnxxx*(((a-7)*yyy));
2014-06-21 11:51:47 TRACE Expression:38 - Expression added: MUL
2014-06-21 11:51:47 TRACE Expression:39 - Token: '*'
2014-06-21 11:51:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 11:51:47 TRACE Expression:41 - Expression text: xxx*(((a-7)*yyy))
2014-06-21 11:51:47 TRACE Expression:243 - int_visitLdcInsn: 555
2014-06-21 11:51:47 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 11:51:47 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:51:47 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:51:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:51:47 TRACE Expression:41 - Expression text: tst
2014-06-21 11:51:47 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:51:47 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:51:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:51:47 TRACE Expression:41 - Expression text: 1
2014-06-21 11:51:47 TRACE IDExpressionType:63 - tst Test I
2014-06-21 11:51:47 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 11:51:47 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:51:47 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:51:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:51:47 TRACE Expression:41 - Expression text: yyy
2014-06-21 11:51:47 TRACE Expression:38 - Expression added: PLUS
2014-06-21 11:51:47 TRACE Expression:39 - Token: '+'
2014-06-21 11:51:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 11:51:47 TRACE Expression:41 - Expression text: xxx+123
2014-06-21 11:51:47 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 11:51:47 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:51:47 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:51:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:51:47 TRACE Expression:41 - Expression text: xxx
2014-06-21 11:51:47 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:51:47 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:51:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:51:47 TRACE Expression:41 - Expression text: 123
2014-06-21 11:51:47 TRACE IDExpressionType:63 - xxx Test I
2014-06-21 11:51:47 TRACE Expression:243 - int_visitLdcInsn: 123
2014-06-21 11:51:47 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-21 11:51:47 TRACE Expression:243 - int_visitLdcInsn: 5
2014-06-21 11:51:47 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = a, index = 1
2014-06-21 11:51:47 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 11:51:47 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-21 11:51:47 TRACE ConstructorExpression:85 - t= I
2014-06-21 11:51:47 TRACE ConstructorExpression:86 - #args= 3
2014-06-21 11:51:47 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 11:51:47 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 11:51:47 TRACE Expression:243 - int_visitLdcInsn: 3
2014-06-21 11:51:47 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-21 11:51:47 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 11:51:47 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:51:47 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:51:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:51:47 TRACE Expression:41 - Expression text: 0
2014-06-21 11:51:47 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:51:47 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:51:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:51:47 TRACE Expression:41 - Expression text: 0
2014-06-21 11:51:47 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 11:51:47 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:51:47 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:51:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:51:47 TRACE Expression:41 - Expression text: 0
2014-06-21 11:51:47 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:51:47 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:51:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-21 11:51:47 TRACE Expression:41 - Expression text: testInt[0,0][0]
2014-06-21 11:51:47 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:51:47 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:51:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:51:47 TRACE Expression:41 - Expression text: 781
2014-06-21 11:51:47 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 11:51:47 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 11:51:47 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 11:51:47 TRACE Expression:243 - int_visitLdcInsn: 781
2014-06-21 11:51:47 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:51:47 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:51:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:51:47 TRACE Expression:41 - Expression text: a
2014-06-21 11:51:47 TRACE Expression:38 - Expression added: PLUS
2014-06-21 11:51:47 TRACE Expression:39 - Token: '+'
2014-06-21 11:51:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 11:51:47 TRACE Expression:41 - Expression text: xxx+6
2014-06-21 11:51:47 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:51:47 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:51:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:51:47 TRACE Expression:41 - Expression text: xxx
2014-06-21 11:51:47 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:51:47 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:51:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:51:47 TRACE Expression:41 - Expression text: 6
2014-06-21 11:51:47 TRACE Expression:243 - int_visitLdcInsn: 6
2014-06-21 11:51:47 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:51:47 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:51:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:51:47 TRACE Expression:41 - Expression text: xxx
2014-06-21 11:51:47 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:51:47 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:51:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:51:47 TRACE Expression:41 - Expression text: yyy
2014-06-21 11:51:47 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 11:51:47 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:51:47 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:51:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:51:47 TRACE Expression:41 - Expression text: xxx
2014-06-21 11:51:47 TRACE Expression:38 - Expression added: MUL
2014-06-21 11:51:47 TRACE Expression:39 - Token: '*'
2014-06-21 11:51:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 11:51:47 TRACE Expression:41 - Expression text: (((a-7)*yyy))
2014-06-21 11:51:47 TRACE Expression:38 - Expression added: MINUS
2014-06-21 11:51:47 TRACE Expression:39 - Token: '-'
2014-06-21 11:51:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$22
2014-06-21 11:51:47 TRACE Expression:41 - Expression text: (a-7)
2014-06-21 11:51:47 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:51:47 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:51:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:51:47 TRACE Expression:41 - Expression text: yyy
2014-06-21 11:51:47 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:51:47 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:51:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:51:47 TRACE Expression:41 - Expression text: a
2014-06-21 11:51:47 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:51:47 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:51:47 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:51:47 TRACE Expression:41 - Expression text: 7
2014-06-21 11:51:47 TRACE Expression:243 - int_visitLdcInsn: 7
2014-06-21 11:51:47 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 11:51:47 INFO  CsCompiler:87 - tst = 555
2014-06-21 11:51:47 INFO  CsCompiler:87 - xxx = 1
2014-06-21 11:51:47 INFO  CsCompiler:87 - yyy = 556
2014-06-21 11:51:47 INFO  CsCompiler:87 - zzz = 680
2014-06-21 11:51:47 INFO  CsCompiler:95 - Main: 1854816
2014-06-21 11:51:55 TRACE CsCompiler:41 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-21 11:51:55 TRACE CsCompiler:42 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-21 11:51:55 DEBUG CsCompiler:44 - Printing parse tree:
2014-06-21 11:51:55 DEBUG CsCompiler:45 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator (assign_and_modify_operator +=)) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression xxx))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx))) * (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) - (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 7))))))))))))))))) )))) * (unary_expression (postfix_expression (primary_expression yyy))))))))))))))) ))))))) (comparsion_operator >) (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tdt)))))))))))))))) )))))))))))))))) ;)) })) })
2014-06-21 11:51:56 INFO  CsCompiler:55 - Parse of Test.cs completed successfully
2014-06-21 11:51:56 INFO  CsCompiler:70 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[0,0][0]=781;a+=xxx+6;xxx=yyy;returnxxx*(((a-7)*yyy)>tdt);}}
2014-06-21 11:51:56 INFO  CsCompiler:71 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@109,491:491='}',<40>,22:0]}
2014-06-21 11:51:56 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-21 11:51:56 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-21 11:51:56 TRACE ClassDef:53 - Class name: Test
2014-06-21 11:51:56 TRACE Variable:30 - Field/variable added: tst
2014-06-21 11:51:57 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:51:57 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:51:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:51:57 TRACE Expression:41 - Expression text: 555
2014-06-21 11:51:57 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 11:51:57 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:51:57 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:51:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:51:57 TRACE Expression:41 - Expression text: 1
2014-06-21 11:51:57 TRACE Variable:30 - Field/variable added: yyy
2014-06-21 11:51:57 TRACE Expression:38 - Expression added: PLUS
2014-06-21 11:51:57 TRACE Expression:39 - Token: '+'
2014-06-21 11:51:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 11:51:57 TRACE Expression:41 - Expression text: tst+1
2014-06-21 11:51:57 TRACE Variable:30 - Field/variable added: zzz
2014-06-21 11:51:57 TRACE Expression:38 - Expression added: PLUS
2014-06-21 11:51:57 TRACE Expression:39 - Token: '+'
2014-06-21 11:51:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 11:51:57 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-21 11:51:57 TRACE ClassMethod:39 - Method added: Main
2014-06-21 11:51:57 TRACE Variable:30 - Field/variable added: s
2014-06-21 11:51:57 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-21 11:51:57 TRACE Variable:30 - Field/variable added: a
2014-06-21 11:51:57 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:51:57 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:51:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:51:57 TRACE Expression:41 - Expression text: 5
2014-06-21 11:51:57 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-21 11:51:57 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 11:51:57 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:51:57 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:51:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:51:57 TRACE Expression:41 - Expression text: 2
2014-06-21 11:51:57 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-21 11:51:57 TRACE Variable:30 - Field/variable added: testInt
2014-06-21 11:51:57 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-21 11:51:57 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-21 11:51:57 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 11:51:57 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:51:57 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:51:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:51:57 TRACE Expression:41 - Expression text: 1
2014-06-21 11:51:57 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:51:57 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:51:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:51:57 TRACE Expression:41 - Expression text: 2
2014-06-21 11:51:57 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 11:51:57 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:51:57 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:51:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:51:57 TRACE Expression:41 - Expression text: 3
2014-06-21 11:51:57 TRACE Expression:38 - Expression added: NEW
2014-06-21 11:51:57 TRACE Expression:39 - Token: 'new'
2014-06-21 11:51:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-21 11:51:57 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-21 11:51:57 TRACE CompoundStatement:49 - stmt in da block: testInt[0,0][0]=781;
2014-06-21 11:51:57 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 11:51:57 TRACE Expression:39 - Token: '='
2014-06-21 11:51:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 11:51:57 TRACE Expression:41 - Expression text: testInt[0,0][0]=781
2014-06-21 11:51:57 TRACE CompoundStatement:49 - stmt in da block: a+=xxx+6;
2014-06-21 11:51:57 TRACE Expression:38 - Expression added: ADD_ASS
2014-06-21 11:51:57 TRACE Expression:39 - Token: '+='
2014-06-21 11:51:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$10
2014-06-21 11:51:57 TRACE Expression:41 - Expression text: a+=xxx+6
2014-06-21 11:51:57 TRACE CompoundStatement:49 - stmt in da block: xxx=yyy;
2014-06-21 11:51:57 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 11:51:57 TRACE Expression:39 - Token: '='
2014-06-21 11:51:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 11:51:57 TRACE Expression:41 - Expression text: xxx=yyy
2014-06-21 11:51:57 TRACE CompoundStatement:49 - stmt in da block: returnxxx*(((a-7)*yyy)>tdt);
2014-06-21 11:51:57 TRACE Expression:38 - Expression added: MUL
2014-06-21 11:51:57 TRACE Expression:39 - Token: '*'
2014-06-21 11:51:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 11:51:57 TRACE Expression:41 - Expression text: xxx*(((a-7)*yyy)>tdt)
2014-06-21 11:51:57 TRACE Expression:243 - int_visitLdcInsn: 555
2014-06-21 11:51:57 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 11:51:57 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:51:57 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:51:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:51:57 TRACE Expression:41 - Expression text: tst
2014-06-21 11:51:57 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:51:57 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:51:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:51:57 TRACE Expression:41 - Expression text: 1
2014-06-21 11:51:57 TRACE IDExpressionType:63 - tst Test I
2014-06-21 11:51:57 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 11:51:57 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:51:57 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:51:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:51:57 TRACE Expression:41 - Expression text: yyy
2014-06-21 11:51:57 TRACE Expression:38 - Expression added: PLUS
2014-06-21 11:51:57 TRACE Expression:39 - Token: '+'
2014-06-21 11:51:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 11:51:57 TRACE Expression:41 - Expression text: xxx+123
2014-06-21 11:51:57 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 11:51:57 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:51:57 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:51:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:51:57 TRACE Expression:41 - Expression text: xxx
2014-06-21 11:51:57 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:51:57 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:51:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:51:57 TRACE Expression:41 - Expression text: 123
2014-06-21 11:51:57 TRACE IDExpressionType:63 - xxx Test I
2014-06-21 11:51:57 TRACE Expression:243 - int_visitLdcInsn: 123
2014-06-21 11:51:57 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-21 11:51:57 TRACE Expression:243 - int_visitLdcInsn: 5
2014-06-21 11:51:57 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = a, index = 1
2014-06-21 11:51:57 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 11:51:57 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-21 11:51:57 TRACE ConstructorExpression:85 - t= I
2014-06-21 11:51:57 TRACE ConstructorExpression:86 - #args= 3
2014-06-21 11:51:57 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 11:51:57 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 11:51:57 TRACE Expression:243 - int_visitLdcInsn: 3
2014-06-21 11:51:57 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-21 11:51:57 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 11:51:57 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:51:57 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:51:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:51:57 TRACE Expression:41 - Expression text: 0
2014-06-21 11:51:57 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:51:57 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:51:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:51:57 TRACE Expression:41 - Expression text: 0
2014-06-21 11:51:57 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 11:51:57 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:51:57 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:51:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:51:57 TRACE Expression:41 - Expression text: 0
2014-06-21 11:51:57 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:51:57 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:51:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-21 11:51:57 TRACE Expression:41 - Expression text: testInt[0,0][0]
2014-06-21 11:51:57 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:51:57 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:51:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:51:57 TRACE Expression:41 - Expression text: 781
2014-06-21 11:51:57 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 11:51:57 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 11:51:57 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 11:51:57 TRACE Expression:243 - int_visitLdcInsn: 781
2014-06-21 11:51:57 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:51:57 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:51:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:51:57 TRACE Expression:41 - Expression text: a
2014-06-21 11:51:57 TRACE Expression:38 - Expression added: PLUS
2014-06-21 11:51:57 TRACE Expression:39 - Token: '+'
2014-06-21 11:51:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 11:51:57 TRACE Expression:41 - Expression text: xxx+6
2014-06-21 11:51:57 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:51:57 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:51:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:51:57 TRACE Expression:41 - Expression text: xxx
2014-06-21 11:51:57 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:51:57 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:51:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:51:57 TRACE Expression:41 - Expression text: 6
2014-06-21 11:51:57 TRACE Expression:243 - int_visitLdcInsn: 6
2014-06-21 11:51:57 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:51:57 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:51:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:51:57 TRACE Expression:41 - Expression text: xxx
2014-06-21 11:51:57 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:51:57 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:51:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:51:57 TRACE Expression:41 - Expression text: yyy
2014-06-21 11:51:57 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 11:51:57 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:51:57 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:51:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:51:57 TRACE Expression:41 - Expression text: xxx
2014-06-21 11:51:57 TRACE Expression:38 - Expression added: GT
2014-06-21 11:51:57 TRACE Expression:39 - Token: '>'
2014-06-21 11:51:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$33
2014-06-21 11:51:57 TRACE Expression:41 - Expression text: (((a-7)*yyy)>tdt)
2014-06-21 11:51:57 TRACE Expression:38 - Expression added: MUL
2014-06-21 11:51:57 TRACE Expression:39 - Token: '*'
2014-06-21 11:51:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 11:51:57 TRACE Expression:41 - Expression text: ((a-7)*yyy)
2014-06-21 11:53:06 TRACE CsCompiler:41 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-21 11:53:07 TRACE CsCompiler:42 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-21 11:53:07 DEBUG CsCompiler:44 - Printing parse tree:
2014-06-21 11:53:07 DEBUG CsCompiler:45 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator (assign_and_modify_operator +=)) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression xxx))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx))) * (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) - (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 7))))))))))))))))) )))) * (unary_expression (postfix_expression (primary_expression yyy))))))))))))))) ))))))) (comparsion_operator >) (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tdt)))))))))))))))) )))))))))))))))) ;)) })) })
2014-06-21 11:53:08 INFO  CsCompiler:55 - Parse of Test.cs completed successfully
2014-06-21 11:53:08 INFO  CsCompiler:70 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[0,0][0]=781;a+=xxx+6;xxx=yyy;returnxxx*(((a-7)*yyy)>tdt);}}
2014-06-21 11:53:08 INFO  CsCompiler:71 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@109,491:491='}',<40>,22:0]}
2014-06-21 11:53:08 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-21 11:53:08 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-21 11:53:08 TRACE ClassDef:53 - Class name: Test
2014-06-21 11:53:08 TRACE Variable:30 - Field/variable added: tst
2014-06-21 11:53:08 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:53:08 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:53:08 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:53:08 TRACE Expression:41 - Expression text: 555
2014-06-21 11:53:08 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 11:53:08 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:53:08 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:53:08 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:53:08 TRACE Expression:41 - Expression text: 1
2014-06-21 11:53:08 TRACE Variable:30 - Field/variable added: yyy
2014-06-21 11:53:08 TRACE Expression:38 - Expression added: PLUS
2014-06-21 11:53:08 TRACE Expression:39 - Token: '+'
2014-06-21 11:53:08 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 11:53:08 TRACE Expression:41 - Expression text: tst+1
2014-06-21 11:53:08 TRACE Variable:30 - Field/variable added: zzz
2014-06-21 11:53:08 TRACE Expression:38 - Expression added: PLUS
2014-06-21 11:53:08 TRACE Expression:39 - Token: '+'
2014-06-21 11:53:08 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 11:53:08 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-21 11:53:08 TRACE ClassMethod:39 - Method added: Main
2014-06-21 11:53:08 TRACE Variable:30 - Field/variable added: s
2014-06-21 11:53:08 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-21 11:53:08 TRACE Variable:30 - Field/variable added: a
2014-06-21 11:53:08 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:53:08 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:53:08 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:53:08 TRACE Expression:41 - Expression text: 5
2014-06-21 11:53:08 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-21 11:53:08 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 11:53:08 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:53:08 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:53:08 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:53:08 TRACE Expression:41 - Expression text: 2
2014-06-21 11:53:08 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-21 11:53:08 TRACE Variable:30 - Field/variable added: testInt
2014-06-21 11:53:08 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-21 11:53:08 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-21 11:53:08 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 11:53:08 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:53:08 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:53:08 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:53:08 TRACE Expression:41 - Expression text: 1
2014-06-21 11:53:08 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:53:08 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:53:08 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:53:08 TRACE Expression:41 - Expression text: 2
2014-06-21 11:53:08 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 11:53:08 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:53:08 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:53:08 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:53:08 TRACE Expression:41 - Expression text: 3
2014-06-21 11:53:08 TRACE Expression:38 - Expression added: NEW
2014-06-21 11:53:08 TRACE Expression:39 - Token: 'new'
2014-06-21 11:53:08 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-21 11:53:08 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-21 11:53:08 TRACE CompoundStatement:49 - stmt in da block: testInt[0,0][0]=781;
2014-06-21 11:53:08 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 11:53:08 TRACE Expression:39 - Token: '='
2014-06-21 11:53:08 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 11:53:08 TRACE Expression:41 - Expression text: testInt[0,0][0]=781
2014-06-21 11:53:08 TRACE CompoundStatement:49 - stmt in da block: a+=xxx+6;
2014-06-21 11:53:08 TRACE Expression:38 - Expression added: ADD_ASS
2014-06-21 11:53:08 TRACE Expression:39 - Token: '+='
2014-06-21 11:53:08 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$10
2014-06-21 11:53:08 TRACE Expression:41 - Expression text: a+=xxx+6
2014-06-21 11:53:08 TRACE CompoundStatement:49 - stmt in da block: xxx=yyy;
2014-06-21 11:53:08 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 11:53:08 TRACE Expression:39 - Token: '='
2014-06-21 11:53:08 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 11:53:08 TRACE Expression:41 - Expression text: xxx=yyy
2014-06-21 11:53:08 TRACE CompoundStatement:49 - stmt in da block: returnxxx*(((a-7)*yyy)>tdt);
2014-06-21 11:53:08 TRACE Expression:38 - Expression added: MUL
2014-06-21 11:53:08 TRACE Expression:39 - Token: '*'
2014-06-21 11:53:08 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 11:53:08 TRACE Expression:41 - Expression text: xxx*(((a-7)*yyy)>tdt)
2014-06-21 11:53:08 TRACE Expression:243 - int_visitLdcInsn: 555
2014-06-21 11:53:08 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 11:53:08 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:53:08 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:53:08 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:53:08 TRACE Expression:41 - Expression text: tst
2014-06-21 11:53:08 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:53:08 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:53:08 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:53:08 TRACE Expression:41 - Expression text: 1
2014-06-21 11:53:08 TRACE IDExpressionType:63 - tst Test I
2014-06-21 11:53:08 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 11:53:08 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:53:08 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:53:08 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:53:08 TRACE Expression:41 - Expression text: yyy
2014-06-21 11:53:08 TRACE Expression:38 - Expression added: PLUS
2014-06-21 11:53:08 TRACE Expression:39 - Token: '+'
2014-06-21 11:53:08 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 11:53:08 TRACE Expression:41 - Expression text: xxx+123
2014-06-21 11:53:08 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 11:53:08 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:53:08 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:53:08 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:53:08 TRACE Expression:41 - Expression text: xxx
2014-06-21 11:53:08 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:53:08 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:53:08 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:53:08 TRACE Expression:41 - Expression text: 123
2014-06-21 11:53:08 TRACE IDExpressionType:63 - xxx Test I
2014-06-21 11:53:08 TRACE Expression:243 - int_visitLdcInsn: 123
2014-06-21 11:53:08 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-21 11:53:08 TRACE Expression:243 - int_visitLdcInsn: 5
2014-06-21 11:53:08 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = a, index = 1
2014-06-21 11:53:08 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 11:53:08 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-21 11:53:08 TRACE ConstructorExpression:85 - t= I
2014-06-21 11:53:08 TRACE ConstructorExpression:86 - #args= 3
2014-06-21 11:53:08 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 11:53:08 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 11:53:08 TRACE Expression:243 - int_visitLdcInsn: 3
2014-06-21 11:53:08 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-21 11:53:08 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 11:53:08 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:53:08 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:53:08 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:53:08 TRACE Expression:41 - Expression text: 0
2014-06-21 11:53:08 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:53:08 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:53:08 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:53:08 TRACE Expression:41 - Expression text: 0
2014-06-21 11:53:08 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 11:53:08 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:53:08 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:53:08 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:53:08 TRACE Expression:41 - Expression text: 0
2014-06-21 11:53:08 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:53:08 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:53:08 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-21 11:53:08 TRACE Expression:41 - Expression text: testInt[0,0][0]
2014-06-21 11:53:08 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:53:08 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:53:08 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:53:08 TRACE Expression:41 - Expression text: 781
2014-06-21 11:53:08 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 11:53:08 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 11:53:08 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 11:53:08 TRACE Expression:243 - int_visitLdcInsn: 781
2014-06-21 11:53:08 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:53:08 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:53:08 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:53:08 TRACE Expression:41 - Expression text: a
2014-06-21 11:53:08 TRACE Expression:38 - Expression added: PLUS
2014-06-21 11:53:08 TRACE Expression:39 - Token: '+'
2014-06-21 11:53:08 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 11:53:08 TRACE Expression:41 - Expression text: xxx+6
2014-06-21 11:53:08 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:53:08 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:53:08 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:53:08 TRACE Expression:41 - Expression text: xxx
2014-06-21 11:53:08 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:53:08 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:53:08 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:53:08 TRACE Expression:41 - Expression text: 6
2014-06-21 11:53:08 TRACE Expression:243 - int_visitLdcInsn: 6
2014-06-21 11:53:08 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:53:08 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:53:08 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:53:08 TRACE Expression:41 - Expression text: xxx
2014-06-21 11:53:08 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:53:08 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:53:08 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:53:08 TRACE Expression:41 - Expression text: yyy
2014-06-21 11:53:08 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 11:53:08 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:53:08 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:53:08 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:53:08 TRACE Expression:41 - Expression text: xxx
2014-06-21 11:53:08 TRACE Expression:38 - Expression added: GT
2014-06-21 11:53:08 TRACE Expression:39 - Token: '>'
2014-06-21 11:53:08 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$33
2014-06-21 11:53:08 TRACE Expression:41 - Expression text: (((a-7)*yyy)>tdt)
2014-06-21 11:53:08 TRACE Expression:38 - Expression added: MUL
2014-06-21 11:53:08 TRACE Expression:39 - Token: '*'
2014-06-21 11:53:08 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 11:53:08 TRACE Expression:41 - Expression text: ((a-7)*yyy)
2014-06-21 11:53:08 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:53:08 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:53:08 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:53:08 TRACE Expression:41 - Expression text: tdt
2014-06-21 11:53:08 TRACE Expression:38 - Expression added: MINUS
2014-06-21 11:53:08 TRACE Expression:39 - Token: '-'
2014-06-21 11:53:08 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$22
2014-06-21 11:53:08 TRACE Expression:41 - Expression text: (a-7)
2014-06-21 11:53:08 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:53:08 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:53:08 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:53:08 TRACE Expression:41 - Expression text: yyy
2014-06-21 11:53:08 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:53:08 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:53:08 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:53:08 TRACE Expression:41 - Expression text: a
2014-06-21 11:53:08 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:53:08 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:53:08 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:53:08 TRACE Expression:41 - Expression text: 7
2014-06-21 11:53:08 TRACE Expression:243 - int_visitLdcInsn: 7
2014-06-21 11:53:08 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 11:53:44 TRACE CsCompiler:41 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-21 11:53:44 TRACE CsCompiler:42 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-21 11:53:44 DEBUG CsCompiler:44 - Printing parse tree:
2014-06-21 11:53:44 DEBUG CsCompiler:45 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator (assign_and_modify_operator +=)) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression xxx))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx))) * (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) - (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 7))))))))))))))))) )))) * (unary_expression (postfix_expression (primary_expression yyy))))))))))))))) ))))))) (comparsion_operator >) (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tdt)))))))))))))))) )))))))))))))))) ;)) })) })
2014-06-21 11:53:45 INFO  CsCompiler:55 - Parse of Test.cs completed successfully
2014-06-21 11:53:45 INFO  CsCompiler:70 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[0,0][0]=781;a+=xxx+6;xxx=yyy;returnxxx*(((a-7)*yyy)>tdt);}}
2014-06-21 11:53:45 INFO  CsCompiler:71 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@109,491:491='}',<40>,22:0]}
2014-06-21 11:53:45 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-21 11:53:45 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-21 11:53:45 TRACE ClassDef:53 - Class name: Test
2014-06-21 11:53:45 TRACE Variable:30 - Field/variable added: tst
2014-06-21 11:53:45 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:53:45 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:53:45 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:53:45 TRACE Expression:41 - Expression text: 555
2014-06-21 11:53:45 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 11:53:45 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:53:45 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:53:45 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:53:45 TRACE Expression:41 - Expression text: 1
2014-06-21 11:53:45 TRACE Variable:30 - Field/variable added: yyy
2014-06-21 11:53:45 TRACE Expression:38 - Expression added: PLUS
2014-06-21 11:53:45 TRACE Expression:39 - Token: '+'
2014-06-21 11:53:45 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 11:53:45 TRACE Expression:41 - Expression text: tst+1
2014-06-21 11:53:45 TRACE Variable:30 - Field/variable added: zzz
2014-06-21 11:53:45 TRACE Expression:38 - Expression added: PLUS
2014-06-21 11:53:45 TRACE Expression:39 - Token: '+'
2014-06-21 11:53:45 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 11:53:45 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-21 11:53:45 TRACE ClassMethod:39 - Method added: Main
2014-06-21 11:53:45 TRACE Variable:30 - Field/variable added: s
2014-06-21 11:53:45 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-21 11:53:45 TRACE Variable:30 - Field/variable added: a
2014-06-21 11:53:45 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:53:45 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:53:45 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:53:45 TRACE Expression:41 - Expression text: 5
2014-06-21 11:53:45 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-21 11:53:45 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 11:53:45 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:53:45 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:53:45 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:53:45 TRACE Expression:41 - Expression text: 2
2014-06-21 11:53:45 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-21 11:53:45 TRACE Variable:30 - Field/variable added: testInt
2014-06-21 11:53:45 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-21 11:53:45 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-21 11:53:45 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 11:53:45 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:53:45 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:53:45 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:53:45 TRACE Expression:41 - Expression text: 1
2014-06-21 11:53:45 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:53:45 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:53:45 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:53:45 TRACE Expression:41 - Expression text: 2
2014-06-21 11:53:45 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 11:53:45 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:53:45 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:53:45 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:53:45 TRACE Expression:41 - Expression text: 3
2014-06-21 11:53:45 TRACE Expression:38 - Expression added: NEW
2014-06-21 11:53:45 TRACE Expression:39 - Token: 'new'
2014-06-21 11:53:45 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-21 11:53:45 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-21 11:53:45 TRACE CompoundStatement:49 - stmt in da block: testInt[0,0][0]=781;
2014-06-21 11:53:45 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 11:53:45 TRACE Expression:39 - Token: '='
2014-06-21 11:53:45 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 11:53:45 TRACE Expression:41 - Expression text: testInt[0,0][0]=781
2014-06-21 11:53:45 TRACE CompoundStatement:49 - stmt in da block: a+=xxx+6;
2014-06-21 11:53:45 TRACE Expression:38 - Expression added: ADD_ASS
2014-06-21 11:53:45 TRACE Expression:39 - Token: '+='
2014-06-21 11:53:45 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$10
2014-06-21 11:53:45 TRACE Expression:41 - Expression text: a+=xxx+6
2014-06-21 11:53:45 TRACE CompoundStatement:49 - stmt in da block: xxx=yyy;
2014-06-21 11:53:45 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 11:53:45 TRACE Expression:39 - Token: '='
2014-06-21 11:53:45 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 11:53:45 TRACE Expression:41 - Expression text: xxx=yyy
2014-06-21 11:53:45 TRACE CompoundStatement:49 - stmt in da block: returnxxx*(((a-7)*yyy)>tdt);
2014-06-21 11:53:45 TRACE Expression:38 - Expression added: MUL
2014-06-21 11:53:45 TRACE Expression:39 - Token: '*'
2014-06-21 11:53:45 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 11:53:45 TRACE Expression:41 - Expression text: xxx*(((a-7)*yyy)>tdt)
2014-06-21 11:53:45 TRACE Expression:243 - int_visitLdcInsn: 555
2014-06-21 11:53:45 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 11:53:45 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:53:45 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:53:45 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:53:45 TRACE Expression:41 - Expression text: tst
2014-06-21 11:53:45 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:53:45 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:53:45 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:53:45 TRACE Expression:41 - Expression text: 1
2014-06-21 11:53:45 TRACE IDExpressionType:63 - tst Test I
2014-06-21 11:53:45 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 11:53:45 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:53:45 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:53:45 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:53:45 TRACE Expression:41 - Expression text: yyy
2014-06-21 11:53:45 TRACE Expression:38 - Expression added: PLUS
2014-06-21 11:53:45 TRACE Expression:39 - Token: '+'
2014-06-21 11:53:45 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 11:53:45 TRACE Expression:41 - Expression text: xxx+123
2014-06-21 11:53:45 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 11:53:45 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:53:45 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:53:45 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:53:45 TRACE Expression:41 - Expression text: xxx
2014-06-21 11:53:45 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:53:45 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:53:45 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:53:45 TRACE Expression:41 - Expression text: 123
2014-06-21 11:53:45 TRACE IDExpressionType:63 - xxx Test I
2014-06-21 11:53:45 TRACE Expression:243 - int_visitLdcInsn: 123
2014-06-21 11:53:45 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-21 11:53:45 TRACE Expression:243 - int_visitLdcInsn: 5
2014-06-21 11:53:45 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = a, index = 1
2014-06-21 11:53:45 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 11:53:45 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-21 11:53:45 TRACE ConstructorExpression:85 - t= I
2014-06-21 11:53:45 TRACE ConstructorExpression:86 - #args= 3
2014-06-21 11:53:45 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 11:53:45 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 11:53:45 TRACE Expression:243 - int_visitLdcInsn: 3
2014-06-21 11:53:45 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-21 11:53:45 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 11:53:45 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:53:45 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:53:45 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:53:45 TRACE Expression:41 - Expression text: 0
2014-06-21 11:53:45 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:53:45 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:53:45 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:53:45 TRACE Expression:41 - Expression text: 0
2014-06-21 11:53:45 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 11:53:45 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:53:45 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:53:45 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:53:45 TRACE Expression:41 - Expression text: 0
2014-06-21 11:53:45 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:53:45 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:53:45 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-21 11:53:45 TRACE Expression:41 - Expression text: testInt[0,0][0]
2014-06-21 11:53:45 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:53:45 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:53:45 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:53:45 TRACE Expression:41 - Expression text: 781
2014-06-21 11:53:45 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 11:53:45 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 11:53:45 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 11:53:45 TRACE Expression:243 - int_visitLdcInsn: 781
2014-06-21 11:53:45 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:53:45 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:53:45 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:53:45 TRACE Expression:41 - Expression text: a
2014-06-21 11:53:45 TRACE Expression:38 - Expression added: PLUS
2014-06-21 11:53:45 TRACE Expression:39 - Token: '+'
2014-06-21 11:53:45 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 11:53:45 TRACE Expression:41 - Expression text: xxx+6
2014-06-21 11:53:45 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:53:45 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:53:45 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:53:45 TRACE Expression:41 - Expression text: xxx
2014-06-21 11:53:45 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:53:45 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:53:45 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:53:45 TRACE Expression:41 - Expression text: 6
2014-06-21 11:53:45 TRACE Expression:243 - int_visitLdcInsn: 6
2014-06-21 11:53:45 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:53:45 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:53:45 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:53:45 TRACE Expression:41 - Expression text: xxx
2014-06-21 11:53:45 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:53:45 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:53:45 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:53:45 TRACE Expression:41 - Expression text: yyy
2014-06-21 11:53:45 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 11:53:45 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:53:45 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:53:45 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:53:45 TRACE Expression:41 - Expression text: xxx
2014-06-21 11:53:45 TRACE Expression:38 - Expression added: GT
2014-06-21 11:53:45 TRACE Expression:39 - Token: '>'
2014-06-21 11:53:45 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$33
2014-06-21 11:53:45 TRACE Expression:41 - Expression text: (((a-7)*yyy)>tdt)
2014-06-21 11:53:45 TRACE Expression:38 - Expression added: MUL
2014-06-21 11:53:45 TRACE Expression:39 - Token: '*'
2014-06-21 11:53:45 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 11:53:45 TRACE Expression:41 - Expression text: ((a-7)*yyy)
2014-06-21 11:53:45 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:53:45 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:53:45 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:53:45 TRACE Expression:41 - Expression text: tdt
2014-06-21 11:53:45 TRACE Expression:38 - Expression added: MINUS
2014-06-21 11:53:45 TRACE Expression:39 - Token: '-'
2014-06-21 11:53:45 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$22
2014-06-21 11:53:45 TRACE Expression:41 - Expression text: (a-7)
2014-06-21 11:53:45 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:53:45 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:53:45 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:53:45 TRACE Expression:41 - Expression text: yyy
2014-06-21 11:53:45 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:53:45 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:53:45 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:53:45 TRACE Expression:41 - Expression text: a
2014-06-21 11:53:45 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:53:45 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:53:45 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:53:45 TRACE Expression:41 - Expression text: 7
2014-06-21 11:53:45 TRACE Expression:243 - int_visitLdcInsn: 7
2014-06-21 11:53:45 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 11:54:13 TRACE CsCompiler:41 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-21 11:54:13 TRACE CsCompiler:42 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-21 11:54:13 DEBUG CsCompiler:44 - Printing parse tree:
2014-06-21 11:54:13 DEBUG CsCompiler:45 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator (assign_and_modify_operator +=)) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression xxx))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx))) * (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) - (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 7))))))))))))))))) )))) * (unary_expression (postfix_expression (primary_expression yyy))))))))))))))) ))))))) (comparsion_operator >) (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))))))))))))))) )))))))))))))))) ;)) })) })
2014-06-21 11:54:14 INFO  CsCompiler:55 - Parse of Test.cs completed successfully
2014-06-21 11:54:14 INFO  CsCompiler:70 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[0,0][0]=781;a+=xxx+6;xxx=yyy;returnxxx*(((a-7)*yyy)>tst);}}
2014-06-21 11:54:14 INFO  CsCompiler:71 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@109,491:491='}',<40>,22:0]}
2014-06-21 11:54:14 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-21 11:54:14 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-21 11:54:14 TRACE ClassDef:53 - Class name: Test
2014-06-21 11:54:14 TRACE Variable:30 - Field/variable added: tst
2014-06-21 11:54:14 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:54:14 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:54:14 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:54:14 TRACE Expression:41 - Expression text: 555
2014-06-21 11:54:14 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 11:54:14 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:54:14 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:54:14 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:54:14 TRACE Expression:41 - Expression text: 1
2014-06-21 11:54:14 TRACE Variable:30 - Field/variable added: yyy
2014-06-21 11:54:14 TRACE Expression:38 - Expression added: PLUS
2014-06-21 11:54:14 TRACE Expression:39 - Token: '+'
2014-06-21 11:54:14 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 11:54:14 TRACE Expression:41 - Expression text: tst+1
2014-06-21 11:54:14 TRACE Variable:30 - Field/variable added: zzz
2014-06-21 11:54:14 TRACE Expression:38 - Expression added: PLUS
2014-06-21 11:54:14 TRACE Expression:39 - Token: '+'
2014-06-21 11:54:14 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 11:54:14 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-21 11:54:14 TRACE ClassMethod:39 - Method added: Main
2014-06-21 11:54:14 TRACE Variable:30 - Field/variable added: s
2014-06-21 11:54:14 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-21 11:54:14 TRACE Variable:30 - Field/variable added: a
2014-06-21 11:54:14 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:54:14 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:54:14 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:54:14 TRACE Expression:41 - Expression text: 5
2014-06-21 11:54:14 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-21 11:54:14 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 11:54:14 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:54:14 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:54:14 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:54:14 TRACE Expression:41 - Expression text: 2
2014-06-21 11:54:14 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-21 11:54:14 TRACE Variable:30 - Field/variable added: testInt
2014-06-21 11:54:14 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-21 11:54:14 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-21 11:54:14 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 11:54:14 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:54:14 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:54:14 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:54:14 TRACE Expression:41 - Expression text: 1
2014-06-21 11:54:14 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:54:14 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:54:14 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:54:14 TRACE Expression:41 - Expression text: 2
2014-06-21 11:54:14 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 11:54:14 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:54:14 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:54:14 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:54:14 TRACE Expression:41 - Expression text: 3
2014-06-21 11:54:14 TRACE Expression:38 - Expression added: NEW
2014-06-21 11:54:14 TRACE Expression:39 - Token: 'new'
2014-06-21 11:54:14 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-21 11:54:14 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-21 11:54:14 TRACE CompoundStatement:49 - stmt in da block: testInt[0,0][0]=781;
2014-06-21 11:54:14 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 11:54:14 TRACE Expression:39 - Token: '='
2014-06-21 11:54:14 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 11:54:14 TRACE Expression:41 - Expression text: testInt[0,0][0]=781
2014-06-21 11:54:14 TRACE CompoundStatement:49 - stmt in da block: a+=xxx+6;
2014-06-21 11:54:14 TRACE Expression:38 - Expression added: ADD_ASS
2014-06-21 11:54:14 TRACE Expression:39 - Token: '+='
2014-06-21 11:54:14 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$10
2014-06-21 11:54:14 TRACE Expression:41 - Expression text: a+=xxx+6
2014-06-21 11:54:14 TRACE CompoundStatement:49 - stmt in da block: xxx=yyy;
2014-06-21 11:54:14 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 11:54:14 TRACE Expression:39 - Token: '='
2014-06-21 11:54:14 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 11:54:14 TRACE Expression:41 - Expression text: xxx=yyy
2014-06-21 11:54:14 TRACE CompoundStatement:49 - stmt in da block: returnxxx*(((a-7)*yyy)>tst);
2014-06-21 11:54:14 TRACE Expression:38 - Expression added: MUL
2014-06-21 11:54:14 TRACE Expression:39 - Token: '*'
2014-06-21 11:54:14 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 11:54:14 TRACE Expression:41 - Expression text: xxx*(((a-7)*yyy)>tst)
2014-06-21 11:54:15 TRACE Expression:243 - int_visitLdcInsn: 555
2014-06-21 11:54:15 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 11:54:15 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:54:15 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:54:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:54:15 TRACE Expression:41 - Expression text: tst
2014-06-21 11:54:15 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:54:15 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:54:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:54:15 TRACE Expression:41 - Expression text: 1
2014-06-21 11:54:15 TRACE IDExpressionType:63 - tst Test I
2014-06-21 11:54:15 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 11:54:15 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:54:15 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:54:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:54:15 TRACE Expression:41 - Expression text: yyy
2014-06-21 11:54:15 TRACE Expression:38 - Expression added: PLUS
2014-06-21 11:54:15 TRACE Expression:39 - Token: '+'
2014-06-21 11:54:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 11:54:15 TRACE Expression:41 - Expression text: xxx+123
2014-06-21 11:54:15 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 11:54:15 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:54:15 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:54:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:54:15 TRACE Expression:41 - Expression text: xxx
2014-06-21 11:54:15 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:54:15 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:54:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:54:15 TRACE Expression:41 - Expression text: 123
2014-06-21 11:54:15 TRACE IDExpressionType:63 - xxx Test I
2014-06-21 11:54:15 TRACE Expression:243 - int_visitLdcInsn: 123
2014-06-21 11:54:15 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-21 11:54:15 TRACE Expression:243 - int_visitLdcInsn: 5
2014-06-21 11:54:15 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = a, index = 1
2014-06-21 11:54:15 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 11:54:15 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-21 11:54:15 TRACE ConstructorExpression:85 - t= I
2014-06-21 11:54:15 TRACE ConstructorExpression:86 - #args= 3
2014-06-21 11:54:15 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 11:54:15 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 11:54:15 TRACE Expression:243 - int_visitLdcInsn: 3
2014-06-21 11:54:15 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-21 11:54:15 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 11:54:15 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:54:15 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:54:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:54:15 TRACE Expression:41 - Expression text: 0
2014-06-21 11:54:15 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:54:15 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:54:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:54:15 TRACE Expression:41 - Expression text: 0
2014-06-21 11:54:15 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 11:54:15 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:54:15 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:54:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:54:15 TRACE Expression:41 - Expression text: 0
2014-06-21 11:54:15 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:54:15 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:54:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-21 11:54:15 TRACE Expression:41 - Expression text: testInt[0,0][0]
2014-06-21 11:54:15 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:54:15 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:54:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:54:15 TRACE Expression:41 - Expression text: 781
2014-06-21 11:54:15 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 11:54:15 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 11:54:15 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 11:54:15 TRACE Expression:243 - int_visitLdcInsn: 781
2014-06-21 11:54:15 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:54:15 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:54:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:54:15 TRACE Expression:41 - Expression text: a
2014-06-21 11:54:15 TRACE Expression:38 - Expression added: PLUS
2014-06-21 11:54:15 TRACE Expression:39 - Token: '+'
2014-06-21 11:54:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 11:54:15 TRACE Expression:41 - Expression text: xxx+6
2014-06-21 11:54:15 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:54:15 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:54:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:54:15 TRACE Expression:41 - Expression text: xxx
2014-06-21 11:54:15 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:54:15 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:54:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:54:15 TRACE Expression:41 - Expression text: 6
2014-06-21 11:54:15 TRACE Expression:243 - int_visitLdcInsn: 6
2014-06-21 11:54:15 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:54:15 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:54:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:54:15 TRACE Expression:41 - Expression text: xxx
2014-06-21 11:54:15 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:54:15 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:54:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:54:15 TRACE Expression:41 - Expression text: yyy
2014-06-21 11:54:15 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 11:54:15 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:54:15 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:54:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:54:15 TRACE Expression:41 - Expression text: xxx
2014-06-21 11:54:15 TRACE Expression:38 - Expression added: GT
2014-06-21 11:54:15 TRACE Expression:39 - Token: '>'
2014-06-21 11:54:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$33
2014-06-21 11:54:15 TRACE Expression:41 - Expression text: (((a-7)*yyy)>tst)
2014-06-21 11:54:15 TRACE Expression:38 - Expression added: MUL
2014-06-21 11:54:15 TRACE Expression:39 - Token: '*'
2014-06-21 11:54:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 11:54:15 TRACE Expression:41 - Expression text: ((a-7)*yyy)
2014-06-21 11:54:15 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:54:15 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:54:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:54:15 TRACE Expression:41 - Expression text: tst
2014-06-21 11:54:15 TRACE Expression:38 - Expression added: MINUS
2014-06-21 11:54:15 TRACE Expression:39 - Token: '-'
2014-06-21 11:54:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$22
2014-06-21 11:54:15 TRACE Expression:41 - Expression text: (a-7)
2014-06-21 11:54:15 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:54:15 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:54:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:54:15 TRACE Expression:41 - Expression text: yyy
2014-06-21 11:54:15 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:54:15 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:54:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:54:15 TRACE Expression:41 - Expression text: a
2014-06-21 11:54:15 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:54:15 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:54:15 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:54:15 TRACE Expression:41 - Expression text: 7
2014-06-21 11:54:15 TRACE Expression:243 - int_visitLdcInsn: 7
2014-06-21 11:54:15 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 11:54:15 TRACE IDExpressionType:63 - tst Test I
2014-06-21 11:54:15 INFO  CsCompiler:87 - tst = 555
2014-06-21 11:54:15 INFO  CsCompiler:87 - xxx = 1
2014-06-21 11:54:15 INFO  CsCompiler:87 - yyy = 556
2014-06-21 11:54:15 INFO  CsCompiler:87 - zzz = 680
2014-06-21 11:54:15 INFO  CsCompiler:95 - Main: 556
2014-06-21 11:55:55 TRACE CsCompiler:41 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-21 11:55:55 TRACE CsCompiler:42 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-21 11:55:55 DEBUG CsCompiler:44 - Printing parse tree:
2014-06-21 11:55:55 DEBUG CsCompiler:45 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator (assign_and_modify_operator +=)) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression xxx))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx))) * (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) - (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 7))))))))))))))))) )))) * (unary_expression (postfix_expression (primary_expression yyy))))))))))))))) ))))))) (comparsion_operator >) (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))))))))))))))) )))))))))))))))) ;)) })) })
2014-06-21 11:55:56 INFO  CsCompiler:55 - Parse of Test.cs completed successfully
2014-06-21 11:55:56 INFO  CsCompiler:70 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[0,0][0]=781;a+=xxx+6;xxx=yyy;returnxxx*(((a-7)*yyy)>tst);}}
2014-06-21 11:55:56 INFO  CsCompiler:71 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@109,492:492='}',<40>,22:0]}
2014-06-21 11:55:56 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-21 11:55:56 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-21 11:55:56 TRACE ClassDef:53 - Class name: Test
2014-06-21 11:55:56 TRACE Variable:30 - Field/variable added: tst
2014-06-21 11:55:56 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:55:56 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:55:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:55:56 TRACE Expression:41 - Expression text: 555
2014-06-21 11:55:56 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 11:55:56 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:55:56 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:55:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:55:56 TRACE Expression:41 - Expression text: 1
2014-06-21 11:55:56 TRACE Variable:30 - Field/variable added: yyy
2014-06-21 11:55:56 TRACE Expression:38 - Expression added: PLUS
2014-06-21 11:55:56 TRACE Expression:39 - Token: '+'
2014-06-21 11:55:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 11:55:56 TRACE Expression:41 - Expression text: tst+1
2014-06-21 11:55:56 TRACE Variable:30 - Field/variable added: zzz
2014-06-21 11:55:56 TRACE Expression:38 - Expression added: PLUS
2014-06-21 11:55:56 TRACE Expression:39 - Token: '+'
2014-06-21 11:55:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 11:55:56 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-21 11:55:56 TRACE ClassMethod:39 - Method added: Main
2014-06-21 11:55:56 TRACE Variable:30 - Field/variable added: s
2014-06-21 11:55:56 TRACE CompoundStatement:33 - Decl in da block: inta=5;
2014-06-21 11:55:56 TRACE Variable:30 - Field/variable added: a
2014-06-21 11:55:56 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:55:56 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:55:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:55:56 TRACE Expression:41 - Expression text: 5
2014-06-21 11:55:56 TRACE CompoundStatement:33 - Decl in da block: intxxx=2;
2014-06-21 11:55:56 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 11:55:56 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:55:56 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:55:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:55:56 TRACE Expression:41 - Expression text: 2
2014-06-21 11:55:56 TRACE CompoundStatement:33 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-21 11:55:56 TRACE Variable:30 - Field/variable added: testInt
2014-06-21 11:55:56 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-21 11:55:56 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-21 11:55:56 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 11:55:56 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:55:56 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:55:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:55:56 TRACE Expression:41 - Expression text: 1
2014-06-21 11:55:56 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:55:56 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:55:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:55:56 TRACE Expression:41 - Expression text: 2
2014-06-21 11:55:56 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 11:55:56 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:55:56 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:55:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:55:56 TRACE Expression:41 - Expression text: 3
2014-06-21 11:55:56 TRACE Expression:38 - Expression added: NEW
2014-06-21 11:55:56 TRACE Expression:39 - Token: 'new'
2014-06-21 11:55:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-21 11:55:56 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-21 11:55:56 TRACE CompoundStatement:49 - stmt in da block: testInt[0,0][0]=781;
2014-06-21 11:55:56 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 11:55:56 TRACE Expression:39 - Token: '='
2014-06-21 11:55:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 11:55:56 TRACE Expression:41 - Expression text: testInt[0,0][0]=781
2014-06-21 11:55:56 TRACE CompoundStatement:49 - stmt in da block: a+=xxx+6;
2014-06-21 11:55:56 TRACE Expression:38 - Expression added: ADD_ASS
2014-06-21 11:55:56 TRACE Expression:39 - Token: '+='
2014-06-21 11:55:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$10
2014-06-21 11:55:56 TRACE Expression:41 - Expression text: a+=xxx+6
2014-06-21 11:55:56 TRACE CompoundStatement:49 - stmt in da block: xxx=yyy;
2014-06-21 11:55:56 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 11:55:56 TRACE Expression:39 - Token: '='
2014-06-21 11:55:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 11:55:56 TRACE Expression:41 - Expression text: xxx=yyy
2014-06-21 11:55:56 TRACE CompoundStatement:49 - stmt in da block: returnxxx*(((a-7)*yyy)>tst);
2014-06-21 11:55:56 TRACE Expression:38 - Expression added: MUL
2014-06-21 11:55:56 TRACE Expression:39 - Token: '*'
2014-06-21 11:55:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 11:55:56 TRACE Expression:41 - Expression text: xxx*(((a-7)*yyy)>tst)
2014-06-21 11:55:56 TRACE Expression:243 - int_visitLdcInsn: 555
2014-06-21 11:55:56 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 11:55:56 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:55:56 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:55:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:55:56 TRACE Expression:41 - Expression text: tst
2014-06-21 11:55:56 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:55:56 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:55:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:55:56 TRACE Expression:41 - Expression text: 1
2014-06-21 11:55:56 TRACE IDExpressionType:63 - tst Test I
2014-06-21 11:55:56 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 11:55:56 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:55:56 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:55:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:55:56 TRACE Expression:41 - Expression text: yyy
2014-06-21 11:55:56 TRACE Expression:38 - Expression added: PLUS
2014-06-21 11:55:56 TRACE Expression:39 - Token: '+'
2014-06-21 11:55:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 11:55:56 TRACE Expression:41 - Expression text: xxx+123
2014-06-21 11:55:56 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 11:55:56 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:55:56 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:55:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:55:56 TRACE Expression:41 - Expression text: xxx
2014-06-21 11:55:56 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:55:56 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:55:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:55:56 TRACE Expression:41 - Expression text: 123
2014-06-21 11:55:56 TRACE IDExpressionType:63 - xxx Test I
2014-06-21 11:55:56 TRACE Expression:243 - int_visitLdcInsn: 123
2014-06-21 11:55:56 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-21 11:55:56 TRACE Expression:243 - int_visitLdcInsn: 5
2014-06-21 11:55:56 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = a, index = 1
2014-06-21 11:55:56 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 11:55:56 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-21 11:55:56 TRACE ConstructorExpression:85 - t= I
2014-06-21 11:55:56 TRACE ConstructorExpression:86 - #args= 3
2014-06-21 11:55:56 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 11:55:56 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 11:55:56 TRACE Expression:243 - int_visitLdcInsn: 3
2014-06-21 11:55:56 TRACE CompoundStatement:78 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-21 11:55:56 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 11:55:56 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:55:56 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:55:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:55:56 TRACE Expression:41 - Expression text: 0
2014-06-21 11:55:56 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:55:56 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:55:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:55:56 TRACE Expression:41 - Expression text: 0
2014-06-21 11:55:56 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 11:55:56 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:55:56 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:55:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:55:56 TRACE Expression:41 - Expression text: 0
2014-06-21 11:55:56 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:55:56 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:55:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-21 11:55:56 TRACE Expression:41 - Expression text: testInt[0,0][0]
2014-06-21 11:55:56 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:55:56 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:55:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:55:56 TRACE Expression:41 - Expression text: 781
2014-06-21 11:55:56 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 11:55:56 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 11:55:56 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 11:55:56 TRACE Expression:243 - int_visitLdcInsn: 781
2014-06-21 11:55:56 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:55:56 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:55:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:55:56 TRACE Expression:41 - Expression text: a
2014-06-21 11:55:56 TRACE Expression:38 - Expression added: PLUS
2014-06-21 11:55:56 TRACE Expression:39 - Token: '+'
2014-06-21 11:55:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 11:55:56 TRACE Expression:41 - Expression text: xxx+6
2014-06-21 11:55:56 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:55:56 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:55:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:55:56 TRACE Expression:41 - Expression text: xxx
2014-06-21 11:55:56 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:55:56 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:55:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:55:56 TRACE Expression:41 - Expression text: 6
2014-06-21 11:55:56 TRACE Expression:243 - int_visitLdcInsn: 6
2014-06-21 11:55:56 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:55:56 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:55:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:55:56 TRACE Expression:41 - Expression text: xxx
2014-06-21 11:55:56 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:55:56 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:55:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:55:56 TRACE Expression:41 - Expression text: yyy
2014-06-21 11:55:56 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 11:55:56 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:55:56 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:55:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:55:56 TRACE Expression:41 - Expression text: xxx
2014-06-21 11:55:56 TRACE Expression:38 - Expression added: GT
2014-06-21 11:55:56 TRACE Expression:39 - Token: '>'
2014-06-21 11:55:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$33
2014-06-21 11:55:56 TRACE Expression:41 - Expression text: (((a-7)*yyy)>tst)
2014-06-21 11:55:56 TRACE Expression:38 - Expression added: MUL
2014-06-21 11:55:56 TRACE Expression:39 - Token: '*'
2014-06-21 11:55:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 11:55:56 TRACE Expression:41 - Expression text: ((a-7)*yyy)
2014-06-21 11:55:56 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:55:56 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:55:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:55:56 TRACE Expression:41 - Expression text: tst
2014-06-21 11:55:56 TRACE Expression:38 - Expression added: MINUS
2014-06-21 11:55:56 TRACE Expression:39 - Token: '-'
2014-06-21 11:55:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$22
2014-06-21 11:55:56 TRACE Expression:41 - Expression text: (a-7)
2014-06-21 11:55:56 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:55:56 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:55:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:55:56 TRACE Expression:41 - Expression text: yyy
2014-06-21 11:55:56 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 11:55:56 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 11:55:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 11:55:56 TRACE Expression:41 - Expression text: a
2014-06-21 11:55:56 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 11:55:56 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 11:55:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 11:55:56 TRACE Expression:41 - Expression text: 7
2014-06-21 11:55:56 TRACE Expression:243 - int_visitLdcInsn: 7
2014-06-21 11:55:56 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 11:55:56 TRACE IDExpressionType:63 - tst Test I
2014-06-21 11:55:56 INFO  CsCompiler:87 - tst = 555
2014-06-21 11:55:56 INFO  CsCompiler:87 - xxx = 1
2014-06-21 11:55:56 INFO  CsCompiler:87 - yyy = 556
2014-06-21 11:55:56 INFO  CsCompiler:87 - zzz = 680
2014-06-21 11:55:56 INFO  CsCompiler:95 - Main: 556
2014-06-21 12:03:30 TRACE CsCompiler:41 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-21 12:03:30 TRACE CsCompiler:42 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-21 12:03:30 DEBUG CsCompiler:44 - Printing parse tree:
2014-06-21 12:03:30 DEBUG CsCompiler:45 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator (assign_and_modify_operator +=)) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression xxx))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx))) * (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) - (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 7))))))))))))))))) )))) * (unary_expression (postfix_expression (primary_expression yyy))))))))))))))) ))))))) (comparsion_operator >) (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))))))))))))))) )))))))))))))))) ;)) })) })
2014-06-21 12:03:31 INFO  CsCompiler:55 - Parse of Test.cs completed successfully
2014-06-21 12:03:31 INFO  CsCompiler:70 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[0,0][0]=781;a+=xxx+6;xxx=yyy;returnxxx*(((a-7)*yyy)>tst);}}
2014-06-21 12:03:31 INFO  CsCompiler:71 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@109,492:492='}',<40>,22:0]}
2014-06-21 12:03:31 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-21 12:03:31 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-21 12:03:31 TRACE ClassDef:53 - Class name: Test
2014-06-21 12:03:31 TRACE Variable:30 - Field/variable added: tst
2014-06-21 12:03:31 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:03:31 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:03:31 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:03:31 TRACE Expression:41 - Expression text: 555
2014-06-21 12:03:31 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:03:31 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:03:31 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:03:31 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:03:31 TRACE Expression:41 - Expression text: 1
2014-06-21 12:03:31 TRACE Variable:30 - Field/variable added: yyy
2014-06-21 12:03:31 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:03:31 TRACE Expression:39 - Token: '+'
2014-06-21 12:03:31 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:03:31 TRACE Expression:41 - Expression text: tst+1
2014-06-21 12:03:31 TRACE Variable:30 - Field/variable added: zzz
2014-06-21 12:03:31 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:03:31 TRACE Expression:39 - Token: '+'
2014-06-21 12:03:31 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:03:31 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-21 12:03:31 TRACE ClassMethod:39 - Method added: Main
2014-06-21 12:03:31 TRACE Variable:30 - Field/variable added: s
2014-06-21 12:03:31 TRACE CompoundStatement:34 - Decl in da block: inta=5;
2014-06-21 12:03:31 TRACE Variable:30 - Field/variable added: a
2014-06-21 12:03:31 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:03:31 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:03:31 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:03:31 TRACE Expression:41 - Expression text: 5
2014-06-21 12:03:31 TRACE CompoundStatement:34 - Decl in da block: intxxx=2;
2014-06-21 12:03:31 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:03:31 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:03:31 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:03:31 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:03:31 TRACE Expression:41 - Expression text: 2
2014-06-21 12:03:31 TRACE CompoundStatement:34 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-21 12:03:31 TRACE Variable:30 - Field/variable added: testInt
2014-06-21 12:03:31 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-21 12:03:31 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-21 12:03:31 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:03:31 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:03:31 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:03:31 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:03:31 TRACE Expression:41 - Expression text: 1
2014-06-21 12:03:31 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:03:31 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:03:31 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:03:31 TRACE Expression:41 - Expression text: 2
2014-06-21 12:03:31 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:03:31 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:03:31 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:03:31 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:03:31 TRACE Expression:41 - Expression text: 3
2014-06-21 12:03:31 TRACE Expression:38 - Expression added: NEW
2014-06-21 12:03:31 TRACE Expression:39 - Token: 'new'
2014-06-21 12:03:31 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-21 12:03:31 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-21 12:03:31 TRACE CompoundStatement:50 - stmt in da block: testInt[0,0][0]=781;
2014-06-21 12:03:31 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:03:31 TRACE Expression:39 - Token: '='
2014-06-21 12:03:31 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:03:31 TRACE Expression:41 - Expression text: testInt[0,0][0]=781
2014-06-21 12:03:31 TRACE CompoundStatement:50 - stmt in da block: a+=xxx+6;
2014-06-21 12:03:31 TRACE Expression:38 - Expression added: ADD_ASS
2014-06-21 12:03:31 TRACE Expression:39 - Token: '+='
2014-06-21 12:03:31 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$10
2014-06-21 12:03:31 TRACE Expression:41 - Expression text: a+=xxx+6
2014-06-21 12:03:31 TRACE CompoundStatement:50 - stmt in da block: xxx=yyy;
2014-06-21 12:03:31 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:03:31 TRACE Expression:39 - Token: '='
2014-06-21 12:03:31 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:03:31 TRACE Expression:41 - Expression text: xxx=yyy
2014-06-21 12:03:31 TRACE CompoundStatement:50 - stmt in da block: returnxxx*(((a-7)*yyy)>tst);
2014-06-21 12:03:31 TRACE Expression:38 - Expression added: MUL
2014-06-21 12:03:31 TRACE Expression:39 - Token: '*'
2014-06-21 12:03:31 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 12:03:31 TRACE Expression:41 - Expression text: xxx*(((a-7)*yyy)>tst)
2014-06-21 12:03:31 TRACE Expression:243 - int_visitLdcInsn: 555
2014-06-21 12:03:31 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:03:31 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:03:31 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:03:31 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:03:31 TRACE Expression:41 - Expression text: tst
2014-06-21 12:03:31 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:03:31 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:03:31 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:03:31 TRACE Expression:41 - Expression text: 1
2014-06-21 12:03:31 TRACE IDExpressionType:63 - tst Test I
2014-06-21 12:03:31 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:03:31 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:03:31 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:03:31 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:03:31 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:03:31 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:03:31 TRACE Expression:39 - Token: '+'
2014-06-21 12:03:31 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:03:31 TRACE Expression:41 - Expression text: xxx+123
2014-06-21 12:06:45 TRACE CsCompiler:41 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-21 12:06:45 TRACE CsCompiler:42 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-21 12:06:45 DEBUG CsCompiler:44 - Printing parse tree:
2014-06-21 12:06:45 DEBUG CsCompiler:45 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator (assign_and_modify_operator +=)) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression xxx))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx))) * (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) - (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 7))))))))))))))))) )))) * (unary_expression (postfix_expression (primary_expression yyy))))))))))))))) ))))))) (comparsion_operator >) (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))))))))))))))) )))))))))))))))) ;)) })) })
2014-06-21 12:06:46 INFO  CsCompiler:55 - Parse of Test.cs completed successfully
2014-06-21 12:06:46 INFO  CsCompiler:70 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[0,0][0]=781;a+=xxx+6;xxx=yyy;returnxxx*(((a-7)*yyy)>tst);}}
2014-06-21 12:06:46 INFO  CsCompiler:71 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@109,492:492='}',<40>,22:0]}
2014-06-21 12:06:46 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-21 12:06:46 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-21 12:06:46 TRACE ClassDef:53 - Class name: Test
2014-06-21 12:06:46 TRACE Variable:30 - Field/variable added: tst
2014-06-21 12:06:46 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:06:46 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:06:46 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:06:46 TRACE Expression:41 - Expression text: 555
2014-06-21 12:06:46 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:06:46 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:06:46 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:06:46 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:06:46 TRACE Expression:41 - Expression text: 1
2014-06-21 12:06:46 TRACE Variable:30 - Field/variable added: yyy
2014-06-21 12:06:46 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:06:46 TRACE Expression:39 - Token: '+'
2014-06-21 12:06:46 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:06:46 TRACE Expression:41 - Expression text: tst+1
2014-06-21 12:06:46 TRACE Variable:30 - Field/variable added: zzz
2014-06-21 12:06:46 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:06:46 TRACE Expression:39 - Token: '+'
2014-06-21 12:06:46 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:06:46 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-21 12:06:46 TRACE ClassMethod:39 - Method added: Main
2014-06-21 12:06:46 TRACE Variable:30 - Field/variable added: s
2014-06-21 12:06:46 TRACE CompoundStatement:34 - Decl in da block: inta=5;
2014-06-21 12:06:46 TRACE Variable:30 - Field/variable added: a
2014-06-21 12:06:46 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:06:46 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:06:46 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:06:46 TRACE Expression:41 - Expression text: 5
2014-06-21 12:06:46 TRACE CompoundStatement:34 - Decl in da block: intxxx=2;
2014-06-21 12:06:46 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:06:46 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:06:46 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:06:46 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:06:46 TRACE Expression:41 - Expression text: 2
2014-06-21 12:06:46 TRACE CompoundStatement:34 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-21 12:06:46 TRACE Variable:30 - Field/variable added: testInt
2014-06-21 12:06:46 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-21 12:06:46 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-21 12:06:46 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:06:46 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:06:46 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:06:46 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:06:46 TRACE Expression:41 - Expression text: 1
2014-06-21 12:06:46 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:06:46 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:06:46 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:06:46 TRACE Expression:41 - Expression text: 2
2014-06-21 12:06:46 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:06:46 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:06:46 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:06:46 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:06:46 TRACE Expression:41 - Expression text: 3
2014-06-21 12:06:46 TRACE Expression:38 - Expression added: NEW
2014-06-21 12:06:46 TRACE Expression:39 - Token: 'new'
2014-06-21 12:06:46 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-21 12:06:46 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-21 12:06:46 TRACE CompoundStatement:50 - stmt in da block: testInt[0,0][0]=781;
2014-06-21 12:06:46 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:06:46 TRACE Expression:39 - Token: '='
2014-06-21 12:06:46 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:06:46 TRACE Expression:41 - Expression text: testInt[0,0][0]=781
2014-06-21 12:06:46 TRACE CompoundStatement:50 - stmt in da block: a+=xxx+6;
2014-06-21 12:06:46 TRACE Expression:38 - Expression added: ADD_ASS
2014-06-21 12:06:46 TRACE Expression:39 - Token: '+='
2014-06-21 12:06:46 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$10
2014-06-21 12:06:46 TRACE Expression:41 - Expression text: a+=xxx+6
2014-06-21 12:06:46 TRACE CompoundStatement:50 - stmt in da block: xxx=yyy;
2014-06-21 12:06:46 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:06:46 TRACE Expression:39 - Token: '='
2014-06-21 12:06:46 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:06:46 TRACE Expression:41 - Expression text: xxx=yyy
2014-06-21 12:06:46 TRACE CompoundStatement:50 - stmt in da block: returnxxx*(((a-7)*yyy)>tst);
2014-06-21 12:06:46 TRACE Expression:38 - Expression added: MUL
2014-06-21 12:06:46 TRACE Expression:39 - Token: '*'
2014-06-21 12:06:46 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 12:06:46 TRACE Expression:41 - Expression text: xxx*(((a-7)*yyy)>tst)
2014-06-21 12:06:46 TRACE Expression:243 - int_visitLdcInsn: 555
2014-06-21 12:06:46 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:06:46 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:06:46 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:06:46 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:06:46 TRACE Expression:41 - Expression text: tst
2014-06-21 12:06:46 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:06:46 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:06:46 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:06:46 TRACE Expression:41 - Expression text: 1
2014-06-21 12:06:46 TRACE ExpressionType:45 - org.itmo.iyakupov.components.expr.Expression
2014-06-21 12:06:46 TRACE ExpressionType:46 - org.itmo.iyakupov.components.expr.Expression
2014-06-21 12:06:46 TRACE IDExpressionType:63 - tst Test I
2014-06-21 12:06:46 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:06:46 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:06:46 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:06:46 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:06:46 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:06:46 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:06:46 TRACE Expression:39 - Token: '+'
2014-06-21 12:06:46 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:06:46 TRACE Expression:41 - Expression text: xxx+123
2014-06-21 12:06:46 TRACE ExpressionType:45 - org.itmo.iyakupov.components.expr.Expression
2014-06-21 12:06:46 TRACE ExpressionType:46 - org.itmo.iyakupov.components.expr.Expression
2014-06-21 12:07:01 TRACE CsCompiler:41 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-21 12:07:01 TRACE CsCompiler:42 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-21 12:07:01 DEBUG CsCompiler:44 - Printing parse tree:
2014-06-21 12:07:01 DEBUG CsCompiler:45 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator (assign_and_modify_operator +=)) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression xxx))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx))) * (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) - (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 7))))))))))))))))) )))) * (unary_expression (postfix_expression (primary_expression yyy))))))))))))))) ))))))) (comparsion_operator >) (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))))))))))))))) )))))))))))))))) ;)) })) })
2014-06-21 12:07:02 INFO  CsCompiler:55 - Parse of Test.cs completed successfully
2014-06-21 12:07:02 INFO  CsCompiler:70 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[0,0][0]=781;a+=xxx+6;xxx=yyy;returnxxx*(((a-7)*yyy)>tst);}}
2014-06-21 12:07:02 INFO  CsCompiler:71 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@109,492:492='}',<40>,22:0]}
2014-06-21 12:07:02 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-21 12:07:02 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-21 12:07:02 TRACE ClassDef:53 - Class name: Test
2014-06-21 12:07:02 TRACE Variable:30 - Field/variable added: tst
2014-06-21 12:07:02 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:07:02 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:07:02 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:07:02 TRACE Expression:41 - Expression text: 555
2014-06-21 12:07:02 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:07:02 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:07:02 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:07:02 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:07:02 TRACE Expression:41 - Expression text: 1
2014-06-21 12:07:02 TRACE Variable:30 - Field/variable added: yyy
2014-06-21 12:07:02 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:07:02 TRACE Expression:39 - Token: '+'
2014-06-21 12:07:02 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:07:02 TRACE Expression:41 - Expression text: tst+1
2014-06-21 12:07:02 TRACE Variable:30 - Field/variable added: zzz
2014-06-21 12:07:02 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:07:02 TRACE Expression:39 - Token: '+'
2014-06-21 12:07:02 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:07:02 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-21 12:07:02 TRACE ClassMethod:39 - Method added: Main
2014-06-21 12:07:02 TRACE Variable:30 - Field/variable added: s
2014-06-21 12:07:02 TRACE CompoundStatement:34 - Decl in da block: inta=5;
2014-06-21 12:07:02 TRACE Variable:30 - Field/variable added: a
2014-06-21 12:07:02 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:07:02 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:07:02 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:07:02 TRACE Expression:41 - Expression text: 5
2014-06-21 12:07:02 TRACE CompoundStatement:34 - Decl in da block: intxxx=2;
2014-06-21 12:07:02 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:07:02 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:07:02 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:07:02 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:07:02 TRACE Expression:41 - Expression text: 2
2014-06-21 12:07:02 TRACE CompoundStatement:34 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-21 12:07:02 TRACE Variable:30 - Field/variable added: testInt
2014-06-21 12:07:02 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-21 12:07:02 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-21 12:07:02 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:07:02 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:07:02 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:07:02 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:07:02 TRACE Expression:41 - Expression text: 1
2014-06-21 12:07:02 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:07:02 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:07:02 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:07:02 TRACE Expression:41 - Expression text: 2
2014-06-21 12:07:02 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:07:02 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:07:02 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:07:02 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:07:02 TRACE Expression:41 - Expression text: 3
2014-06-21 12:07:02 TRACE Expression:38 - Expression added: NEW
2014-06-21 12:07:02 TRACE Expression:39 - Token: 'new'
2014-06-21 12:07:02 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-21 12:07:02 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-21 12:07:02 TRACE CompoundStatement:50 - stmt in da block: testInt[0,0][0]=781;
2014-06-21 12:07:02 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:07:02 TRACE Expression:39 - Token: '='
2014-06-21 12:07:02 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:07:02 TRACE Expression:41 - Expression text: testInt[0,0][0]=781
2014-06-21 12:07:02 TRACE CompoundStatement:50 - stmt in da block: a+=xxx+6;
2014-06-21 12:07:02 TRACE Expression:38 - Expression added: ADD_ASS
2014-06-21 12:07:02 TRACE Expression:39 - Token: '+='
2014-06-21 12:07:02 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$10
2014-06-21 12:07:02 TRACE Expression:41 - Expression text: a+=xxx+6
2014-06-21 12:07:02 TRACE CompoundStatement:50 - stmt in da block: xxx=yyy;
2014-06-21 12:07:02 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:07:02 TRACE Expression:39 - Token: '='
2014-06-21 12:07:02 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:07:02 TRACE Expression:41 - Expression text: xxx=yyy
2014-06-21 12:07:02 TRACE CompoundStatement:50 - stmt in da block: returnxxx*(((a-7)*yyy)>tst);
2014-06-21 12:07:02 TRACE Expression:38 - Expression added: MUL
2014-06-21 12:07:02 TRACE Expression:39 - Token: '*'
2014-06-21 12:07:02 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 12:07:02 TRACE Expression:41 - Expression text: xxx*(((a-7)*yyy)>tst)
2014-06-21 12:07:02 TRACE Expression:243 - int_visitLdcInsn: 555
2014-06-21 12:07:02 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:07:02 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:07:02 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:07:02 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:07:02 TRACE Expression:41 - Expression text: tst
2014-06-21 12:07:02 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:07:02 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:07:02 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:07:02 TRACE Expression:41 - Expression text: 1
2014-06-21 12:07:02 TRACE ExpressionType:45 - org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:07:02 TRACE ExpressionType:46 - org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:07:02 TRACE IDExpressionType:63 - tst Test I
2014-06-21 12:07:02 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:07:02 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:07:02 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:07:02 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:07:02 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:07:02 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:07:02 TRACE Expression:39 - Token: '+'
2014-06-21 12:07:02 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:07:02 TRACE Expression:41 - Expression text: xxx+123
2014-06-21 12:07:02 TRACE ExpressionType:45 - org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:07:02 TRACE ExpressionType:46 - org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:07:39 TRACE CsCompiler:41 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-21 12:07:39 TRACE CsCompiler:42 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-21 12:07:39 DEBUG CsCompiler:44 - Printing parse tree:
2014-06-21 12:07:39 DEBUG CsCompiler:45 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator (assign_and_modify_operator +=)) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression xxx))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx))) * (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) - (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 7))))))))))))))))) )))) * (unary_expression (postfix_expression (primary_expression yyy))))))))))))))) ))))))) (comparsion_operator >) (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))))))))))))))) )))))))))))))))) ;)) })) })
2014-06-21 12:07:40 INFO  CsCompiler:55 - Parse of Test.cs completed successfully
2014-06-21 12:07:40 INFO  CsCompiler:70 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[0,0][0]=781;a+=xxx+6;xxx=yyy;returnxxx*(((a-7)*yyy)>tst);}}
2014-06-21 12:07:40 INFO  CsCompiler:71 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@109,492:492='}',<40>,22:0]}
2014-06-21 12:07:40 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-21 12:07:40 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-21 12:07:40 TRACE ClassDef:53 - Class name: Test
2014-06-21 12:07:40 TRACE Variable:30 - Field/variable added: tst
2014-06-21 12:07:40 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:07:40 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:07:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:07:40 TRACE Expression:41 - Expression text: 555
2014-06-21 12:07:40 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:07:40 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:07:40 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:07:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:07:40 TRACE Expression:41 - Expression text: 1
2014-06-21 12:07:40 TRACE Variable:30 - Field/variable added: yyy
2014-06-21 12:07:40 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:07:40 TRACE Expression:39 - Token: '+'
2014-06-21 12:07:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:07:40 TRACE Expression:41 - Expression text: tst+1
2014-06-21 12:07:40 TRACE Variable:30 - Field/variable added: zzz
2014-06-21 12:07:40 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:07:40 TRACE Expression:39 - Token: '+'
2014-06-21 12:07:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:07:40 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-21 12:07:40 TRACE ClassMethod:39 - Method added: Main
2014-06-21 12:07:40 TRACE Variable:30 - Field/variable added: s
2014-06-21 12:07:40 TRACE CompoundStatement:34 - Decl in da block: inta=5;
2014-06-21 12:07:40 TRACE Variable:30 - Field/variable added: a
2014-06-21 12:07:40 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:07:40 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:07:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:07:40 TRACE Expression:41 - Expression text: 5
2014-06-21 12:07:40 TRACE CompoundStatement:34 - Decl in da block: intxxx=2;
2014-06-21 12:07:40 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:07:40 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:07:40 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:07:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:07:40 TRACE Expression:41 - Expression text: 2
2014-06-21 12:07:40 TRACE CompoundStatement:34 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-21 12:07:40 TRACE Variable:30 - Field/variable added: testInt
2014-06-21 12:07:40 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-21 12:07:40 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-21 12:07:40 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:07:40 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:07:40 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:07:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:07:40 TRACE Expression:41 - Expression text: 1
2014-06-21 12:07:40 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:07:40 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:07:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:07:40 TRACE Expression:41 - Expression text: 2
2014-06-21 12:07:40 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:07:40 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:07:40 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:07:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:07:40 TRACE Expression:41 - Expression text: 3
2014-06-21 12:07:40 TRACE Expression:38 - Expression added: NEW
2014-06-21 12:07:40 TRACE Expression:39 - Token: 'new'
2014-06-21 12:07:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-21 12:07:40 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-21 12:07:40 TRACE CompoundStatement:50 - stmt in da block: testInt[0,0][0]=781;
2014-06-21 12:07:40 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:07:40 TRACE Expression:39 - Token: '='
2014-06-21 12:07:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:07:40 TRACE Expression:41 - Expression text: testInt[0,0][0]=781
2014-06-21 12:07:40 TRACE CompoundStatement:50 - stmt in da block: a+=xxx+6;
2014-06-21 12:07:40 TRACE Expression:38 - Expression added: ADD_ASS
2014-06-21 12:07:40 TRACE Expression:39 - Token: '+='
2014-06-21 12:07:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$10
2014-06-21 12:07:40 TRACE Expression:41 - Expression text: a+=xxx+6
2014-06-21 12:07:40 TRACE CompoundStatement:50 - stmt in da block: xxx=yyy;
2014-06-21 12:07:40 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:07:40 TRACE Expression:39 - Token: '='
2014-06-21 12:07:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:07:40 TRACE Expression:41 - Expression text: xxx=yyy
2014-06-21 12:07:40 TRACE CompoundStatement:50 - stmt in da block: returnxxx*(((a-7)*yyy)>tst);
2014-06-21 12:07:40 TRACE Expression:38 - Expression added: MUL
2014-06-21 12:07:40 TRACE Expression:39 - Token: '*'
2014-06-21 12:07:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 12:07:40 TRACE Expression:41 - Expression text: xxx*(((a-7)*yyy)>tst)
2014-06-21 12:07:40 TRACE Expression:243 - int_visitLdcInsn: 555
2014-06-21 12:07:40 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:07:40 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:07:40 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:07:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:07:40 TRACE Expression:41 - Expression text: tst
2014-06-21 12:07:40 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:07:40 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:07:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:07:40 TRACE Expression:41 - Expression text: 1
2014-06-21 12:07:40 TRACE ExpressionType:45 - org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:07:40 TRACE ExpressionType:46 - I
2014-06-21 12:07:40 TRACE ExpressionType:47 - org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:07:40 TRACE ExpressionType:48 - I
2014-06-21 12:07:40 TRACE IDExpressionType:63 - tst Test I
2014-06-21 12:07:40 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:07:40 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:07:40 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:07:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:07:40 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:07:40 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:07:40 TRACE Expression:39 - Token: '+'
2014-06-21 12:07:40 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:07:40 TRACE Expression:41 - Expression text: xxx+123
2014-06-21 12:07:40 TRACE ExpressionType:45 - org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:07:40 TRACE ExpressionType:46 - I
2014-06-21 12:07:40 TRACE ExpressionType:47 - org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:09:23 TRACE CsCompiler:41 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-21 12:09:23 TRACE CsCompiler:42 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-21 12:09:23 DEBUG CsCompiler:44 - Printing parse tree:
2014-06-21 12:09:23 DEBUG CsCompiler:45 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator (assign_and_modify_operator +=)) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression xxx))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx))) * (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) - (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 7))))))))))))))))) )))) * (unary_expression (postfix_expression (primary_expression yyy))))))))))))))) ))))))) (comparsion_operator >) (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))))))))))))))) )))))))))))))))) ;)) })) })
2014-06-21 12:09:24 INFO  CsCompiler:55 - Parse of Test.cs completed successfully
2014-06-21 12:09:24 INFO  CsCompiler:70 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[0,0][0]=781;a+=xxx+6;xxx=yyy;returnxxx*(((a-7)*yyy)>tst);}}
2014-06-21 12:09:24 INFO  CsCompiler:71 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@109,492:492='}',<40>,22:0]}
2014-06-21 12:09:24 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-21 12:09:24 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-21 12:09:24 TRACE ClassDef:53 - Class name: Test
2014-06-21 12:09:24 TRACE Variable:30 - Field/variable added: tst
2014-06-21 12:09:24 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:09:24 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:09:24 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:09:24 TRACE Expression:41 - Expression text: 555
2014-06-21 12:09:24 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:09:24 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:09:24 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:09:24 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:09:24 TRACE Expression:41 - Expression text: 1
2014-06-21 12:09:24 TRACE Variable:30 - Field/variable added: yyy
2014-06-21 12:09:24 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:09:24 TRACE Expression:39 - Token: '+'
2014-06-21 12:09:24 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:09:24 TRACE Expression:41 - Expression text: tst+1
2014-06-21 12:09:24 TRACE Variable:30 - Field/variable added: zzz
2014-06-21 12:09:24 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:09:24 TRACE Expression:39 - Token: '+'
2014-06-21 12:09:24 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:09:24 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-21 12:09:24 TRACE ClassMethod:39 - Method added: Main
2014-06-21 12:09:24 TRACE Variable:30 - Field/variable added: s
2014-06-21 12:09:24 TRACE CompoundStatement:34 - Decl in da block: inta=5;
2014-06-21 12:09:24 TRACE Variable:30 - Field/variable added: a
2014-06-21 12:09:24 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:09:24 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:09:24 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:09:24 TRACE Expression:41 - Expression text: 5
2014-06-21 12:09:24 TRACE CompoundStatement:34 - Decl in da block: intxxx=2;
2014-06-21 12:09:24 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:09:24 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:09:24 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:09:24 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:09:24 TRACE Expression:41 - Expression text: 2
2014-06-21 12:09:24 TRACE CompoundStatement:34 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-21 12:09:24 TRACE Variable:30 - Field/variable added: testInt
2014-06-21 12:09:24 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-21 12:09:24 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-21 12:09:24 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:09:24 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:09:24 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:09:24 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:09:24 TRACE Expression:41 - Expression text: 1
2014-06-21 12:09:24 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:09:24 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:09:24 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:09:24 TRACE Expression:41 - Expression text: 2
2014-06-21 12:09:24 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:09:24 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:09:24 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:09:24 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:09:24 TRACE Expression:41 - Expression text: 3
2014-06-21 12:09:24 TRACE Expression:38 - Expression added: NEW
2014-06-21 12:09:24 TRACE Expression:39 - Token: 'new'
2014-06-21 12:09:24 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-21 12:09:24 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-21 12:09:24 TRACE CompoundStatement:50 - stmt in da block: testInt[0,0][0]=781;
2014-06-21 12:09:24 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:09:24 TRACE Expression:39 - Token: '='
2014-06-21 12:09:24 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:09:24 TRACE Expression:41 - Expression text: testInt[0,0][0]=781
2014-06-21 12:09:24 TRACE CompoundStatement:50 - stmt in da block: a+=xxx+6;
2014-06-21 12:09:24 TRACE Expression:38 - Expression added: ADD_ASS
2014-06-21 12:09:24 TRACE Expression:39 - Token: '+='
2014-06-21 12:09:24 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$10
2014-06-21 12:09:24 TRACE Expression:41 - Expression text: a+=xxx+6
2014-06-21 12:09:24 TRACE CompoundStatement:50 - stmt in da block: xxx=yyy;
2014-06-21 12:09:24 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:09:24 TRACE Expression:39 - Token: '='
2014-06-21 12:09:24 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:09:24 TRACE Expression:41 - Expression text: xxx=yyy
2014-06-21 12:09:24 TRACE CompoundStatement:50 - stmt in da block: returnxxx*(((a-7)*yyy)>tst);
2014-06-21 12:09:24 TRACE Expression:38 - Expression added: MUL
2014-06-21 12:09:24 TRACE Expression:39 - Token: '*'
2014-06-21 12:09:24 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 12:09:24 TRACE Expression:41 - Expression text: xxx*(((a-7)*yyy)>tst)
2014-06-21 12:09:25 TRACE Expression:243 - int_visitLdcInsn: 555
2014-06-21 12:09:25 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:09:25 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:09:25 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:09:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:09:25 TRACE Expression:41 - Expression text: tst
2014-06-21 12:09:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:09:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:09:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:09:25 TRACE Expression:41 - Expression text: 1
2014-06-21 12:09:25 TRACE ExpressionType:45 - org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:09:25 TRACE ExpressionType:46 - I
2014-06-21 12:09:25 TRACE ExpressionType:47 - org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:09:25 TRACE ExpressionType:48 - I
2014-06-21 12:09:25 TRACE IDExpressionType:63 - tst Test I
2014-06-21 12:09:25 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:09:25 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:09:25 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:09:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:09:25 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:09:25 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:09:25 TRACE Expression:39 - Token: '+'
2014-06-21 12:09:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:09:25 TRACE Expression:41 - Expression text: xxx+123
2014-06-21 12:09:25 TRACE ExpressionType:45 - org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:09:25 TRACE ExpressionType:46 - I
2014-06-21 12:09:25 TRACE ExpressionType:47 - org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:10:00 TRACE CsCompiler:41 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-21 12:10:00 TRACE CsCompiler:42 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-21 12:10:00 DEBUG CsCompiler:44 - Printing parse tree:
2014-06-21 12:10:00 DEBUG CsCompiler:45 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator (assign_and_modify_operator +=)) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression xxx))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx))) * (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) - (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 7))))))))))))))))) )))) * (unary_expression (postfix_expression (primary_expression yyy))))))))))))))) ))))))) (comparsion_operator >) (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))))))))))))))) )))))))))))))))) ;)) })) })
2014-06-21 12:10:01 INFO  CsCompiler:55 - Parse of Test.cs completed successfully
2014-06-21 12:10:01 INFO  CsCompiler:70 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[0,0][0]=781;a+=xxx+6;xxx=yyy;returnxxx*(((a-7)*yyy)>tst);}}
2014-06-21 12:10:01 INFO  CsCompiler:71 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@109,492:492='}',<40>,22:0]}
2014-06-21 12:10:01 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-21 12:10:01 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-21 12:10:01 TRACE ClassDef:53 - Class name: Test
2014-06-21 12:10:01 TRACE Variable:30 - Field/variable added: tst
2014-06-21 12:10:01 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:10:01 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:10:01 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:10:01 TRACE Expression:41 - Expression text: 555
2014-06-21 12:10:01 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:10:01 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:10:01 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:10:01 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:10:01 TRACE Expression:41 - Expression text: 1
2014-06-21 12:10:01 TRACE Variable:30 - Field/variable added: yyy
2014-06-21 12:10:01 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:10:01 TRACE Expression:39 - Token: '+'
2014-06-21 12:10:01 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:10:01 TRACE Expression:41 - Expression text: tst+1
2014-06-21 12:10:01 TRACE Variable:30 - Field/variable added: zzz
2014-06-21 12:10:01 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:10:01 TRACE Expression:39 - Token: '+'
2014-06-21 12:10:01 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:10:01 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-21 12:10:01 TRACE ClassMethod:39 - Method added: Main
2014-06-21 12:10:01 TRACE Variable:30 - Field/variable added: s
2014-06-21 12:10:01 TRACE CompoundStatement:34 - Decl in da block: inta=5;
2014-06-21 12:10:01 TRACE Variable:30 - Field/variable added: a
2014-06-21 12:10:01 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:10:01 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:10:01 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:10:01 TRACE Expression:41 - Expression text: 5
2014-06-21 12:10:01 TRACE CompoundStatement:34 - Decl in da block: intxxx=2;
2014-06-21 12:10:01 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:10:01 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:10:01 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:10:01 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:10:01 TRACE Expression:41 - Expression text: 2
2014-06-21 12:10:01 TRACE CompoundStatement:34 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-21 12:10:01 TRACE Variable:30 - Field/variable added: testInt
2014-06-21 12:10:01 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-21 12:10:01 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-21 12:10:01 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:10:01 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:10:01 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:10:01 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:10:01 TRACE Expression:41 - Expression text: 1
2014-06-21 12:10:01 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:10:01 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:10:01 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:10:01 TRACE Expression:41 - Expression text: 2
2014-06-21 12:10:01 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:10:01 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:10:01 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:10:01 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:10:01 TRACE Expression:41 - Expression text: 3
2014-06-21 12:10:01 TRACE Expression:38 - Expression added: NEW
2014-06-21 12:10:01 TRACE Expression:39 - Token: 'new'
2014-06-21 12:10:01 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-21 12:10:01 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-21 12:10:01 TRACE CompoundStatement:50 - stmt in da block: testInt[0,0][0]=781;
2014-06-21 12:10:01 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:10:01 TRACE Expression:39 - Token: '='
2014-06-21 12:10:01 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:10:01 TRACE Expression:41 - Expression text: testInt[0,0][0]=781
2014-06-21 12:10:01 TRACE CompoundStatement:50 - stmt in da block: a+=xxx+6;
2014-06-21 12:10:01 TRACE Expression:38 - Expression added: ADD_ASS
2014-06-21 12:10:01 TRACE Expression:39 - Token: '+='
2014-06-21 12:10:01 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$10
2014-06-21 12:10:01 TRACE Expression:41 - Expression text: a+=xxx+6
2014-06-21 12:10:01 TRACE CompoundStatement:50 - stmt in da block: xxx=yyy;
2014-06-21 12:10:01 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:10:01 TRACE Expression:39 - Token: '='
2014-06-21 12:10:01 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:10:01 TRACE Expression:41 - Expression text: xxx=yyy
2014-06-21 12:10:01 TRACE CompoundStatement:50 - stmt in da block: returnxxx*(((a-7)*yyy)>tst);
2014-06-21 12:10:01 TRACE Expression:38 - Expression added: MUL
2014-06-21 12:10:01 TRACE Expression:39 - Token: '*'
2014-06-21 12:10:01 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 12:10:01 TRACE Expression:41 - Expression text: xxx*(((a-7)*yyy)>tst)
2014-06-21 12:10:01 TRACE Expression:243 - int_visitLdcInsn: 555
2014-06-21 12:10:01 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:10:01 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:10:01 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:10:01 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:10:01 TRACE Expression:41 - Expression text: tst
2014-06-21 12:10:01 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:10:01 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:10:01 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:10:01 TRACE Expression:41 - Expression text: 1
2014-06-21 12:10:01 TRACE ExpressionType:45 - org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:10:01 TRACE ExpressionType:46 - I
2014-06-21 12:10:01 TRACE ExpressionType:47 - org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:10:01 TRACE ExpressionType:48 - I
2014-06-21 12:10:01 TRACE IDExpressionType:63 - tst Test I
2014-06-21 12:10:01 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:10:01 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:10:01 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:10:01 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:10:01 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:10:01 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:10:01 TRACE Expression:39 - Token: '+'
2014-06-21 12:10:01 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:10:01 TRACE Expression:41 - Expression text: xxx+123
2014-06-21 12:10:01 TRACE ExpressionType:45 - org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:10:01 TRACE ExpressionType:46 - I
2014-06-21 12:10:01 TRACE ExpressionType:47 - org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:10:01 TRACE Expression$21:41 - 
2014-06-21 12:10:27 TRACE CsCompiler:41 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-21 12:10:27 TRACE CsCompiler:42 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-21 12:10:27 DEBUG CsCompiler:44 - Printing parse tree:
2014-06-21 12:10:27 DEBUG CsCompiler:45 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator (assign_and_modify_operator +=)) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression xxx))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx))) * (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) - (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 7))))))))))))))))) )))) * (unary_expression (postfix_expression (primary_expression yyy))))))))))))))) ))))))) (comparsion_operator >) (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))))))))))))))) )))))))))))))))) ;)) })) })
2014-06-21 12:10:28 INFO  CsCompiler:55 - Parse of Test.cs completed successfully
2014-06-21 12:10:28 INFO  CsCompiler:70 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[0,0][0]=781;a+=xxx+6;xxx=yyy;returnxxx*(((a-7)*yyy)>tst);}}
2014-06-21 12:10:28 INFO  CsCompiler:71 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@109,492:492='}',<40>,22:0]}
2014-06-21 12:10:28 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-21 12:10:28 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-21 12:10:28 TRACE ClassDef:53 - Class name: Test
2014-06-21 12:10:28 TRACE Variable:30 - Field/variable added: tst
2014-06-21 12:10:28 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:10:28 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:10:28 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:10:28 TRACE Expression:41 - Expression text: 555
2014-06-21 12:10:28 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:10:28 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:10:28 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:10:28 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:10:28 TRACE Expression:41 - Expression text: 1
2014-06-21 12:10:28 TRACE Variable:30 - Field/variable added: yyy
2014-06-21 12:10:28 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:10:28 TRACE Expression:39 - Token: '+'
2014-06-21 12:10:28 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:10:28 TRACE Expression:41 - Expression text: tst+1
2014-06-21 12:10:28 TRACE Variable:30 - Field/variable added: zzz
2014-06-21 12:10:28 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:10:28 TRACE Expression:39 - Token: '+'
2014-06-21 12:10:28 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:10:28 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-21 12:10:28 TRACE ClassMethod:39 - Method added: Main
2014-06-21 12:10:28 TRACE Variable:30 - Field/variable added: s
2014-06-21 12:10:28 TRACE CompoundStatement:34 - Decl in da block: inta=5;
2014-06-21 12:10:28 TRACE Variable:30 - Field/variable added: a
2014-06-21 12:10:28 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:10:28 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:10:28 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:10:28 TRACE Expression:41 - Expression text: 5
2014-06-21 12:10:28 TRACE CompoundStatement:34 - Decl in da block: intxxx=2;
2014-06-21 12:10:28 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:10:28 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:10:28 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:10:28 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:10:28 TRACE Expression:41 - Expression text: 2
2014-06-21 12:10:28 TRACE CompoundStatement:34 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-21 12:10:28 TRACE Variable:30 - Field/variable added: testInt
2014-06-21 12:10:28 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-21 12:10:28 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-21 12:10:28 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:10:28 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:10:28 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:10:28 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:10:28 TRACE Expression:41 - Expression text: 1
2014-06-21 12:10:28 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:10:28 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:10:28 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:10:28 TRACE Expression:41 - Expression text: 2
2014-06-21 12:10:28 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:10:28 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:10:28 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:10:28 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:10:28 TRACE Expression:41 - Expression text: 3
2014-06-21 12:10:28 TRACE Expression:38 - Expression added: NEW
2014-06-21 12:10:28 TRACE Expression:39 - Token: 'new'
2014-06-21 12:10:28 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-21 12:10:28 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-21 12:10:28 TRACE CompoundStatement:50 - stmt in da block: testInt[0,0][0]=781;
2014-06-21 12:10:28 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:10:28 TRACE Expression:39 - Token: '='
2014-06-21 12:10:28 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:10:28 TRACE Expression:41 - Expression text: testInt[0,0][0]=781
2014-06-21 12:10:28 TRACE CompoundStatement:50 - stmt in da block: a+=xxx+6;
2014-06-21 12:10:28 TRACE Expression:38 - Expression added: ADD_ASS
2014-06-21 12:10:28 TRACE Expression:39 - Token: '+='
2014-06-21 12:10:28 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$10
2014-06-21 12:10:28 TRACE Expression:41 - Expression text: a+=xxx+6
2014-06-21 12:10:28 TRACE CompoundStatement:50 - stmt in da block: xxx=yyy;
2014-06-21 12:10:28 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:10:28 TRACE Expression:39 - Token: '='
2014-06-21 12:10:28 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:10:28 TRACE Expression:41 - Expression text: xxx=yyy
2014-06-21 12:10:28 TRACE CompoundStatement:50 - stmt in da block: returnxxx*(((a-7)*yyy)>tst);
2014-06-21 12:10:28 TRACE Expression:38 - Expression added: MUL
2014-06-21 12:10:28 TRACE Expression:39 - Token: '*'
2014-06-21 12:10:28 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 12:10:28 TRACE Expression:41 - Expression text: xxx*(((a-7)*yyy)>tst)
2014-06-21 12:10:28 TRACE Expression:243 - int_visitLdcInsn: 555
2014-06-21 12:10:28 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:10:28 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:10:28 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:10:28 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:10:28 TRACE Expression:41 - Expression text: tst
2014-06-21 12:10:28 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:10:28 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:10:28 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:10:28 TRACE Expression:41 - Expression text: 1
2014-06-21 12:10:28 TRACE ExpressionType:45 - org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:10:28 TRACE ExpressionType:46 - I
2014-06-21 12:10:28 TRACE ExpressionType:47 - org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:10:28 TRACE ExpressionType:48 - I
2014-06-21 12:10:28 TRACE IDExpressionType:63 - tst Test I
2014-06-21 12:10:28 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:10:28 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:10:28 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:10:28 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:10:28 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:10:28 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:10:28 TRACE Expression:39 - Token: '+'
2014-06-21 12:10:28 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:10:28 TRACE Expression:41 - Expression text: xxx+123
2014-06-21 12:10:28 TRACE ExpressionType:45 - org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:10:28 TRACE ExpressionType:46 - I
2014-06-21 12:10:28 TRACE ExpressionType:47 - org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:10:28 TRACE Expression$21:41 - null
2014-06-21 12:10:28 TRACE Expression$21:42 - null
2014-06-21 12:10:51 TRACE CsCompiler:41 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-21 12:10:51 TRACE CsCompiler:42 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-21 12:10:51 DEBUG CsCompiler:44 - Printing parse tree:
2014-06-21 12:10:51 DEBUG CsCompiler:45 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator (assign_and_modify_operator +=)) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression xxx))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx))) * (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) - (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 7))))))))))))))))) )))) * (unary_expression (postfix_expression (primary_expression yyy))))))))))))))) ))))))) (comparsion_operator >) (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))))))))))))))) )))))))))))))))) ;)) })) })
2014-06-21 12:10:52 INFO  CsCompiler:55 - Parse of Test.cs completed successfully
2014-06-21 12:10:52 INFO  CsCompiler:70 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[0,0][0]=781;a+=xxx+6;xxx=yyy;returnxxx*(((a-7)*yyy)>tst);}}
2014-06-21 12:10:52 INFO  CsCompiler:71 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@109,492:492='}',<40>,22:0]}
2014-06-21 12:10:52 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-21 12:10:52 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-21 12:10:52 TRACE ClassDef:53 - Class name: Test
2014-06-21 12:10:52 TRACE Variable:30 - Field/variable added: tst
2014-06-21 12:10:52 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:10:52 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:10:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:10:52 TRACE Expression:41 - Expression text: 555
2014-06-21 12:10:52 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:10:52 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:10:52 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:10:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:10:52 TRACE Expression:41 - Expression text: 1
2014-06-21 12:10:52 TRACE Variable:30 - Field/variable added: yyy
2014-06-21 12:10:52 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:10:52 TRACE Expression:39 - Token: '+'
2014-06-21 12:10:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:10:52 TRACE Expression:41 - Expression text: tst+1
2014-06-21 12:10:52 TRACE Variable:30 - Field/variable added: zzz
2014-06-21 12:10:52 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:10:52 TRACE Expression:39 - Token: '+'
2014-06-21 12:10:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:10:52 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-21 12:10:52 TRACE ClassMethod:39 - Method added: Main
2014-06-21 12:10:52 TRACE Variable:30 - Field/variable added: s
2014-06-21 12:10:52 TRACE CompoundStatement:34 - Decl in da block: inta=5;
2014-06-21 12:10:52 TRACE Variable:30 - Field/variable added: a
2014-06-21 12:10:52 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:10:52 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:10:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:10:52 TRACE Expression:41 - Expression text: 5
2014-06-21 12:10:52 TRACE CompoundStatement:34 - Decl in da block: intxxx=2;
2014-06-21 12:10:52 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:10:52 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:10:52 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:10:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:10:52 TRACE Expression:41 - Expression text: 2
2014-06-21 12:10:52 TRACE CompoundStatement:34 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-21 12:10:52 TRACE Variable:30 - Field/variable added: testInt
2014-06-21 12:10:52 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-21 12:10:52 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-21 12:10:52 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:10:52 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:10:52 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:10:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:10:52 TRACE Expression:41 - Expression text: 1
2014-06-21 12:10:52 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:10:52 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:10:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:10:52 TRACE Expression:41 - Expression text: 2
2014-06-21 12:10:52 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:10:52 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:10:52 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:10:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:10:52 TRACE Expression:41 - Expression text: 3
2014-06-21 12:10:52 TRACE Expression:38 - Expression added: NEW
2014-06-21 12:10:52 TRACE Expression:39 - Token: 'new'
2014-06-21 12:10:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-21 12:10:52 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-21 12:10:52 TRACE CompoundStatement:50 - stmt in da block: testInt[0,0][0]=781;
2014-06-21 12:10:52 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:10:52 TRACE Expression:39 - Token: '='
2014-06-21 12:10:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:10:52 TRACE Expression:41 - Expression text: testInt[0,0][0]=781
2014-06-21 12:10:52 TRACE CompoundStatement:50 - stmt in da block: a+=xxx+6;
2014-06-21 12:10:52 TRACE Expression:38 - Expression added: ADD_ASS
2014-06-21 12:10:52 TRACE Expression:39 - Token: '+='
2014-06-21 12:10:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$10
2014-06-21 12:10:52 TRACE Expression:41 - Expression text: a+=xxx+6
2014-06-21 12:10:52 TRACE CompoundStatement:50 - stmt in da block: xxx=yyy;
2014-06-21 12:10:52 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:10:52 TRACE Expression:39 - Token: '='
2014-06-21 12:10:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:10:52 TRACE Expression:41 - Expression text: xxx=yyy
2014-06-21 12:10:52 TRACE CompoundStatement:50 - stmt in da block: returnxxx*(((a-7)*yyy)>tst);
2014-06-21 12:10:52 TRACE Expression:38 - Expression added: MUL
2014-06-21 12:10:52 TRACE Expression:39 - Token: '*'
2014-06-21 12:10:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 12:10:52 TRACE Expression:41 - Expression text: xxx*(((a-7)*yyy)>tst)
2014-06-21 12:10:52 TRACE Expression:243 - int_visitLdcInsn: 555
2014-06-21 12:10:52 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:10:52 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:10:52 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:10:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:10:52 TRACE Expression:41 - Expression text: tst
2014-06-21 12:10:52 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:10:52 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:10:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:10:52 TRACE Expression:41 - Expression text: 1
2014-06-21 12:10:52 TRACE IDExpressionType:63 - tst Test I
2014-06-21 12:10:52 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:10:52 TRACE ExpressionType:45 - org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:10:52 TRACE ExpressionType:46 - I
2014-06-21 12:10:52 TRACE ExpressionType:47 - org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:10:52 TRACE ExpressionType:48 - I
2014-06-21 12:10:52 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:10:52 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:10:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:10:52 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:10:52 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:10:52 TRACE Expression:39 - Token: '+'
2014-06-21 12:10:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:10:52 TRACE Expression:41 - Expression text: xxx+123
2014-06-21 12:10:52 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:10:52 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:10:52 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:10:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:10:52 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:10:52 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:10:52 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:10:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:10:52 TRACE Expression:41 - Expression text: 123
2014-06-21 12:10:52 TRACE IDExpressionType:63 - xxx Test I
2014-06-21 12:10:52 TRACE Expression:243 - int_visitLdcInsn: 123
2014-06-21 12:10:52 TRACE ExpressionType:45 - org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:10:52 TRACE ExpressionType:46 - I
2014-06-21 12:10:52 TRACE ExpressionType:47 - org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:10:52 TRACE ExpressionType:48 - I
2014-06-21 12:10:52 TRACE ExpressionType:45 - org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:10:52 TRACE ExpressionType:46 - I
2014-06-21 12:10:52 TRACE ExpressionType:47 - org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:10:52 TRACE Expression$21:42 - org.itmo.iyakupov.components.expr.Expression@a12355
2014-06-21 12:10:52 TRACE Expression$21:43 - org.itmo.iyakupov.components.expr.Expression@116a8f3
2014-06-21 12:10:52 TRACE Expression$21:44 - org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:10:52 TRACE Expression$21:45 - I
2014-06-21 12:10:52 TRACE Expression$21:46 - org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:10:52 TRACE Expression$21:47 - I
2014-06-21 12:10:52 TRACE ExpressionType:48 - I
2014-06-21 12:10:52 TRACE Expression$21:42 - org.itmo.iyakupov.components.expr.Expression@a12355
2014-06-21 12:10:52 TRACE Expression$21:43 - org.itmo.iyakupov.components.expr.Expression@116a8f3
2014-06-21 12:10:52 TRACE Expression$21:44 - org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:10:52 TRACE Expression$21:45 - I
2014-06-21 12:10:52 TRACE Expression$21:46 - org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:10:52 TRACE Expression$21:47 - I
2014-06-21 12:10:52 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-21 12:10:52 TRACE Expression:243 - int_visitLdcInsn: 5
2014-06-21 12:10:52 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = a, index = 1
2014-06-21 12:10:52 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:10:52 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-21 12:10:52 TRACE ConstructorExpression:85 - t= I
2014-06-21 12:10:52 TRACE ConstructorExpression:86 - #args= 3
2014-06-21 12:10:52 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:10:52 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:10:52 TRACE Expression:243 - int_visitLdcInsn: 3
2014-06-21 12:10:52 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-21 12:10:52 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:10:52 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:10:52 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:10:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:10:52 TRACE Expression:41 - Expression text: 0
2014-06-21 12:10:52 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:10:52 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:10:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:10:52 TRACE Expression:41 - Expression text: 0
2014-06-21 12:10:52 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:10:52 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:10:52 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:10:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:10:52 TRACE Expression:41 - Expression text: 0
2014-06-21 12:10:52 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:10:52 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:10:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-21 12:10:52 TRACE Expression:41 - Expression text: testInt[0,0][0]
2014-06-21 12:10:52 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:10:52 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:10:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:10:52 TRACE Expression:41 - Expression text: 781
2014-06-21 12:10:52 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:10:52 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:10:52 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:10:52 TRACE Expression:243 - int_visitLdcInsn: 781
2014-06-21 12:10:52 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:10:52 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:10:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:10:52 TRACE Expression:41 - Expression text: a
2014-06-21 12:10:52 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:10:52 TRACE Expression:39 - Token: '+'
2014-06-21 12:10:52 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:10:52 TRACE Expression:41 - Expression text: xxx+6
2014-06-21 12:10:52 TRACE ExpressionType:45 - org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:10:52 TRACE ExpressionType:46 - I
2014-06-21 12:10:52 TRACE ExpressionType:47 - org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:10:52 TRACE Expression$21:42 - null
2014-06-21 12:10:52 TRACE Expression$21:43 - null
2014-06-21 12:11:34 TRACE CsCompiler:41 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-21 12:11:34 TRACE CsCompiler:42 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-21 12:11:34 DEBUG CsCompiler:44 - Printing parse tree:
2014-06-21 12:11:34 DEBUG CsCompiler:45 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator (assign_and_modify_operator +=)) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression xxx))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx))) * (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) - (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 7))))))))))))))))) )))) * (unary_expression (postfix_expression (primary_expression yyy))))))))))))))) ))))))) (comparsion_operator >) (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))))))))))))))) )))))))))))))))) ;)) })) })
2014-06-21 12:11:35 INFO  CsCompiler:55 - Parse of Test.cs completed successfully
2014-06-21 12:11:35 INFO  CsCompiler:70 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[0,0][0]=781;a+=xxx+6;xxx=yyy;returnxxx*(((a-7)*yyy)>tst);}}
2014-06-21 12:11:35 INFO  CsCompiler:71 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@109,492:492='}',<40>,22:0]}
2014-06-21 12:11:35 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-21 12:11:35 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-21 12:11:35 TRACE ClassDef:53 - Class name: Test
2014-06-21 12:11:35 TRACE Variable:30 - Field/variable added: tst
2014-06-21 12:11:35 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:11:35 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:11:35 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:11:35 TRACE Expression:41 - Expression text: 555
2014-06-21 12:11:35 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:11:35 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:11:35 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:11:35 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:11:35 TRACE Expression:41 - Expression text: 1
2014-06-21 12:11:35 TRACE Variable:30 - Field/variable added: yyy
2014-06-21 12:11:35 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:11:35 TRACE Expression:39 - Token: '+'
2014-06-21 12:11:35 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:11:35 TRACE Expression:41 - Expression text: tst+1
2014-06-21 12:11:35 TRACE Variable:30 - Field/variable added: zzz
2014-06-21 12:11:35 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:11:35 TRACE Expression:39 - Token: '+'
2014-06-21 12:11:35 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:11:35 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-21 12:11:35 TRACE ClassMethod:39 - Method added: Main
2014-06-21 12:11:35 TRACE Variable:30 - Field/variable added: s
2014-06-21 12:11:35 TRACE CompoundStatement:34 - Decl in da block: inta=5;
2014-06-21 12:11:35 TRACE Variable:30 - Field/variable added: a
2014-06-21 12:11:35 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:11:35 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:11:35 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:11:35 TRACE Expression:41 - Expression text: 5
2014-06-21 12:11:35 TRACE CompoundStatement:34 - Decl in da block: intxxx=2;
2014-06-21 12:11:35 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:11:35 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:11:35 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:11:35 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:11:35 TRACE Expression:41 - Expression text: 2
2014-06-21 12:11:35 TRACE CompoundStatement:34 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-21 12:11:35 TRACE Variable:30 - Field/variable added: testInt
2014-06-21 12:11:35 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-21 12:11:35 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-21 12:11:35 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:11:35 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:11:35 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:11:35 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:11:35 TRACE Expression:41 - Expression text: 1
2014-06-21 12:11:35 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:11:35 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:11:35 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:11:35 TRACE Expression:41 - Expression text: 2
2014-06-21 12:11:35 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:11:35 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:11:35 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:11:35 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:11:35 TRACE Expression:41 - Expression text: 3
2014-06-21 12:11:35 TRACE Expression:38 - Expression added: NEW
2014-06-21 12:11:35 TRACE Expression:39 - Token: 'new'
2014-06-21 12:11:35 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-21 12:11:35 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-21 12:11:35 TRACE CompoundStatement:50 - stmt in da block: testInt[0,0][0]=781;
2014-06-21 12:11:35 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:11:35 TRACE Expression:39 - Token: '='
2014-06-21 12:11:35 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:11:35 TRACE Expression:41 - Expression text: testInt[0,0][0]=781
2014-06-21 12:11:35 TRACE CompoundStatement:50 - stmt in da block: a+=xxx+6;
2014-06-21 12:11:35 TRACE Expression:38 - Expression added: ADD_ASS
2014-06-21 12:11:35 TRACE Expression:39 - Token: '+='
2014-06-21 12:11:35 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$10
2014-06-21 12:11:35 TRACE Expression:41 - Expression text: a+=xxx+6
2014-06-21 12:11:35 TRACE CompoundStatement:50 - stmt in da block: xxx=yyy;
2014-06-21 12:11:35 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:11:35 TRACE Expression:39 - Token: '='
2014-06-21 12:11:35 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:11:35 TRACE Expression:41 - Expression text: xxx=yyy
2014-06-21 12:11:35 TRACE CompoundStatement:50 - stmt in da block: returnxxx*(((a-7)*yyy)>tst);
2014-06-21 12:11:35 TRACE Expression:38 - Expression added: MUL
2014-06-21 12:11:35 TRACE Expression:39 - Token: '*'
2014-06-21 12:11:35 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 12:11:35 TRACE Expression:41 - Expression text: xxx*(((a-7)*yyy)>tst)
2014-06-21 12:11:35 TRACE Expression:243 - int_visitLdcInsn: 555
2014-06-21 12:11:35 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:11:35 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:11:35 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:11:35 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:11:35 TRACE Expression:41 - Expression text: tst
2014-06-21 12:11:35 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:11:35 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:11:35 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:11:35 TRACE Expression:41 - Expression text: 1
2014-06-21 12:11:35 TRACE IDExpressionType:63 - tst Test I
2014-06-21 12:11:35 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:11:35 TRACE ExpressionType:45 - org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:11:35 TRACE ExpressionType:46 - I
2014-06-21 12:11:35 TRACE ExpressionType:47 - org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:11:35 TRACE ExpressionType:48 - I
2014-06-21 12:11:35 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:11:35 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:11:35 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:11:35 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:11:35 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:11:35 TRACE Expression:39 - Token: '+'
2014-06-21 12:11:35 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:11:35 TRACE Expression:41 - Expression text: xxx+123
2014-06-21 12:11:35 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:11:35 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:11:35 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:11:35 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:11:35 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:11:35 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:11:35 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:11:35 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:11:35 TRACE Expression:41 - Expression text: 123
2014-06-21 12:11:35 TRACE IDExpressionType:63 - xxx Test I
2014-06-21 12:11:35 TRACE Expression:243 - int_visitLdcInsn: 123
2014-06-21 12:11:35 TRACE ExpressionType:45 - org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:11:35 TRACE ExpressionType:46 - I
2014-06-21 12:11:35 TRACE ExpressionType:47 - org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:11:35 TRACE ExpressionType:48 - I
2014-06-21 12:11:35 TRACE ExpressionType:45 - org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:11:35 TRACE ExpressionType:46 - I
2014-06-21 12:11:35 TRACE ExpressionType:47 - org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:11:35 TRACE Expression$21:42 - org.itmo.iyakupov.components.expr.Expression@a12355
2014-06-21 12:11:35 TRACE Expression$21:43 - org.itmo.iyakupov.components.expr.Expression@116a8f3
2014-06-21 12:11:35 TRACE Expression$21:44 - org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:11:35 TRACE Expression$21:45 - I
2014-06-21 12:11:35 TRACE Expression$21:46 - org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:11:35 TRACE Expression$21:47 - I
2014-06-21 12:11:35 TRACE ExpressionType:48 - I
2014-06-21 12:11:35 TRACE Expression$21:42 - org.itmo.iyakupov.components.expr.Expression@a12355
2014-06-21 12:11:35 TRACE Expression$21:43 - org.itmo.iyakupov.components.expr.Expression@116a8f3
2014-06-21 12:11:35 TRACE Expression$21:44 - org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:11:35 TRACE Expression$21:45 - I
2014-06-21 12:11:35 TRACE Expression$21:46 - org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:11:35 TRACE Expression$21:47 - I
2014-06-21 12:11:35 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-21 12:11:35 TRACE Expression:243 - int_visitLdcInsn: 5
2014-06-21 12:11:35 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = a, index = 1
2014-06-21 12:11:35 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:11:35 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-21 12:11:35 TRACE ConstructorExpression:85 - t= I
2014-06-21 12:11:35 TRACE ConstructorExpression:86 - #args= 3
2014-06-21 12:11:35 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:11:35 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:11:35 TRACE Expression:243 - int_visitLdcInsn: 3
2014-06-21 12:11:35 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-21 12:11:35 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:11:35 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:11:35 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:11:35 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:11:35 TRACE Expression:41 - Expression text: 0
2014-06-21 12:11:35 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:11:35 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:11:35 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:11:35 TRACE Expression:41 - Expression text: 0
2014-06-21 12:11:35 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:11:35 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:11:35 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:11:35 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:11:35 TRACE Expression:41 - Expression text: 0
2014-06-21 12:11:35 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:11:35 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:11:35 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-21 12:11:35 TRACE Expression:41 - Expression text: testInt[0,0][0]
2014-06-21 12:11:35 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:11:35 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:11:35 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:11:35 TRACE Expression:41 - Expression text: 781
2014-06-21 12:11:35 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:11:35 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:11:35 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:11:35 TRACE Expression:243 - int_visitLdcInsn: 781
2014-06-21 12:11:35 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:11:35 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:11:35 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:11:35 TRACE Expression:41 - Expression text: a
2014-06-21 12:11:35 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:11:35 TRACE Expression:39 - Token: '+'
2014-06-21 12:11:35 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:11:35 TRACE Expression:41 - Expression text: xxx+6
2014-06-21 12:11:35 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:11:35 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:11:35 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:11:35 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:11:35 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:11:35 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:11:35 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:11:35 TRACE Expression:41 - Expression text: 6
2014-06-21 12:11:35 TRACE Expression:243 - int_visitLdcInsn: 6
2014-06-21 12:11:35 TRACE ExpressionType:45 - org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:11:35 TRACE ExpressionType:46 - I
2014-06-21 12:11:35 TRACE ExpressionType:47 - org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:11:35 TRACE ExpressionType:48 - I
2014-06-21 12:11:35 TRACE ExpressionType:45 - org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:11:35 TRACE ExpressionType:46 - I
2014-06-21 12:11:35 TRACE ExpressionType:47 - org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:11:35 TRACE Expression$21:42 - org.itmo.iyakupov.components.expr.Expression@125fd97
2014-06-21 12:11:35 TRACE Expression$21:43 - org.itmo.iyakupov.components.expr.Expression@12c04b1
2014-06-21 12:11:35 TRACE Expression$21:44 - org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:11:35 TRACE Expression$21:45 - I
2014-06-21 12:11:35 TRACE Expression$21:46 - org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:11:35 TRACE Expression$21:47 - I
2014-06-21 12:11:35 TRACE ExpressionType:48 - I
2014-06-21 12:11:35 TRACE Expression$21:42 - org.itmo.iyakupov.components.expr.Expression@125fd97
2014-06-21 12:11:35 TRACE Expression$21:43 - org.itmo.iyakupov.components.expr.Expression@12c04b1
2014-06-21 12:11:35 TRACE Expression$21:44 - org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:11:35 TRACE Expression$21:45 - I
2014-06-21 12:11:35 TRACE Expression$21:46 - org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:11:35 TRACE Expression$21:47 - I
2014-06-21 12:11:35 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:11:35 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:11:35 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:11:35 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:11:35 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:11:35 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:11:35 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:11:35 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:11:35 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:11:35 TRACE Expression$23:42 - null
2014-06-21 12:11:35 TRACE Expression$23:43 - null
2014-06-21 12:12:10 TRACE CsCompiler:41 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-21 12:12:10 TRACE CsCompiler:42 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-21 12:12:10 DEBUG CsCompiler:44 - Printing parse tree:
2014-06-21 12:12:10 DEBUG CsCompiler:45 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator (assign_and_modify_operator +=)) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression xxx))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx))) * (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) - (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 7))))))))))))))))) )))) * (unary_expression (postfix_expression (primary_expression yyy))))))))))))))) ))))))) (comparsion_operator >) (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))))))))))))))) )))))))))))))))) ;)) })) })
2014-06-21 12:12:11 INFO  CsCompiler:55 - Parse of Test.cs completed successfully
2014-06-21 12:12:11 INFO  CsCompiler:70 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[0,0][0]=781;a+=xxx+6;xxx=yyy;returnxxx*(((a-7)*yyy)>tst);}}
2014-06-21 12:12:11 INFO  CsCompiler:71 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@109,492:492='}',<40>,22:0]}
2014-06-21 12:12:11 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-21 12:12:11 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-21 12:12:11 TRACE ClassDef:53 - Class name: Test
2014-06-21 12:12:11 TRACE Variable:30 - Field/variable added: tst
2014-06-21 12:12:11 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:11 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:11 TRACE Expression:41 - Expression text: 555
2014-06-21 12:12:11 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:12:11 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:11 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:11 TRACE Expression:41 - Expression text: 1
2014-06-21 12:12:11 TRACE Variable:30 - Field/variable added: yyy
2014-06-21 12:12:11 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:12:11 TRACE Expression:39 - Token: '+'
2014-06-21 12:12:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:12:11 TRACE Expression:41 - Expression text: tst+1
2014-06-21 12:12:11 TRACE Variable:30 - Field/variable added: zzz
2014-06-21 12:12:11 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:12:11 TRACE Expression:39 - Token: '+'
2014-06-21 12:12:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:12:11 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-21 12:12:11 TRACE ClassMethod:39 - Method added: Main
2014-06-21 12:12:11 TRACE Variable:30 - Field/variable added: s
2014-06-21 12:12:11 TRACE CompoundStatement:34 - Decl in da block: inta=5;
2014-06-21 12:12:11 TRACE Variable:30 - Field/variable added: a
2014-06-21 12:12:11 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:11 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:11 TRACE Expression:41 - Expression text: 5
2014-06-21 12:12:11 TRACE CompoundStatement:34 - Decl in da block: intxxx=2;
2014-06-21 12:12:11 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:12:11 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:11 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:11 TRACE Expression:41 - Expression text: 2
2014-06-21 12:12:11 TRACE CompoundStatement:34 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-21 12:12:11 TRACE Variable:30 - Field/variable added: testInt
2014-06-21 12:12:11 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-21 12:12:11 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-21 12:12:11 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:12:11 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:11 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:11 TRACE Expression:41 - Expression text: 1
2014-06-21 12:12:11 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:11 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:11 TRACE Expression:41 - Expression text: 2
2014-06-21 12:12:11 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:12:11 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:11 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:11 TRACE Expression:41 - Expression text: 3
2014-06-21 12:12:11 TRACE Expression:38 - Expression added: NEW
2014-06-21 12:12:11 TRACE Expression:39 - Token: 'new'
2014-06-21 12:12:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-21 12:12:11 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-21 12:12:11 TRACE CompoundStatement:50 - stmt in da block: testInt[0,0][0]=781;
2014-06-21 12:12:11 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:12:11 TRACE Expression:39 - Token: '='
2014-06-21 12:12:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:12:11 TRACE Expression:41 - Expression text: testInt[0,0][0]=781
2014-06-21 12:12:11 TRACE CompoundStatement:50 - stmt in da block: a+=xxx+6;
2014-06-21 12:12:11 TRACE Expression:38 - Expression added: ADD_ASS
2014-06-21 12:12:11 TRACE Expression:39 - Token: '+='
2014-06-21 12:12:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$10
2014-06-21 12:12:11 TRACE Expression:41 - Expression text: a+=xxx+6
2014-06-21 12:12:11 TRACE CompoundStatement:50 - stmt in da block: xxx=yyy;
2014-06-21 12:12:11 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:12:11 TRACE Expression:39 - Token: '='
2014-06-21 12:12:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:12:11 TRACE Expression:41 - Expression text: xxx=yyy
2014-06-21 12:12:11 TRACE CompoundStatement:50 - stmt in da block: returnxxx*(((a-7)*yyy)>tst);
2014-06-21 12:12:11 TRACE Expression:38 - Expression added: MUL
2014-06-21 12:12:11 TRACE Expression:39 - Token: '*'
2014-06-21 12:12:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 12:12:11 TRACE Expression:41 - Expression text: xxx*(((a-7)*yyy)>tst)
2014-06-21 12:12:11 TRACE Expression:243 - int_visitLdcInsn: 555
2014-06-21 12:12:11 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:12:11 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:12:11 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:12:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:11 TRACE Expression:41 - Expression text: tst
2014-06-21 12:12:11 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:11 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:11 TRACE Expression:41 - Expression text: 1
2014-06-21 12:12:11 TRACE IDExpressionType:63 - tst Test I
2014-06-21 12:12:11 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:12:11 TRACE ExpressionType:45 - org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:11 TRACE ExpressionType:46 - I
2014-06-21 12:12:11 TRACE ExpressionType:47 - org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:11 TRACE ExpressionType:48 - I
2014-06-21 12:12:11 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:12:11 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:12:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:11 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:12:11 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:12:11 TRACE Expression:39 - Token: '+'
2014-06-21 12:12:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:12:11 TRACE Expression:41 - Expression text: xxx+123
2014-06-21 12:12:11 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:12:11 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:12:11 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:12:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:11 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:12:11 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:11 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:11 TRACE Expression:41 - Expression text: 123
2014-06-21 12:12:11 TRACE IDExpressionType:63 - xxx Test I
2014-06-21 12:12:11 TRACE Expression:243 - int_visitLdcInsn: 123
2014-06-21 12:12:11 TRACE ExpressionType:45 - org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:11 TRACE ExpressionType:46 - I
2014-06-21 12:12:11 TRACE ExpressionType:47 - org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:11 TRACE ExpressionType:48 - I
2014-06-21 12:12:11 TRACE ExpressionType:45 - org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:11 TRACE ExpressionType:46 - I
2014-06-21 12:12:11 TRACE ExpressionType:47 - org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:12:11 TRACE Expression$21:42 - org.itmo.iyakupov.components.expr.Expression@157baae
2014-06-21 12:12:11 TRACE Expression$21:43 - org.itmo.iyakupov.components.expr.Expression@a12355
2014-06-21 12:12:11 TRACE Expression$21:44 - org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:11 TRACE Expression$21:45 - I
2014-06-21 12:12:11 TRACE Expression$21:46 - org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:11 TRACE Expression$21:47 - I
2014-06-21 12:12:11 TRACE ExpressionType:48 - I
2014-06-21 12:12:11 TRACE Expression$21:42 - org.itmo.iyakupov.components.expr.Expression@157baae
2014-06-21 12:12:11 TRACE Expression$21:43 - org.itmo.iyakupov.components.expr.Expression@a12355
2014-06-21 12:12:11 TRACE Expression$21:44 - org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:11 TRACE Expression$21:45 - I
2014-06-21 12:12:11 TRACE Expression$21:46 - org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:11 TRACE Expression$21:47 - I
2014-06-21 12:12:11 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-21 12:12:11 TRACE Expression:243 - int_visitLdcInsn: 5
2014-06-21 12:12:11 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = a, index = 1
2014-06-21 12:12:11 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:12:11 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-21 12:12:11 TRACE ConstructorExpression:85 - t= I
2014-06-21 12:12:11 TRACE ConstructorExpression:86 - #args= 3
2014-06-21 12:12:11 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:12:11 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:12:11 TRACE Expression:243 - int_visitLdcInsn: 3
2014-06-21 12:12:11 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-21 12:12:11 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:12:11 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:11 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:11 TRACE Expression:41 - Expression text: 0
2014-06-21 12:12:11 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:11 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:11 TRACE Expression:41 - Expression text: 0
2014-06-21 12:12:11 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:12:11 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:11 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:11 TRACE Expression:41 - Expression text: 0
2014-06-21 12:12:11 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:12:11 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:12:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-21 12:12:11 TRACE Expression:41 - Expression text: testInt[0,0][0]
2014-06-21 12:12:11 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:11 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:11 TRACE Expression:41 - Expression text: 781
2014-06-21 12:12:11 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:12:11 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:12:11 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:12:11 TRACE Expression:243 - int_visitLdcInsn: 781
2014-06-21 12:12:11 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:12:11 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:12:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:11 TRACE Expression:41 - Expression text: a
2014-06-21 12:12:11 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:12:11 TRACE Expression:39 - Token: '+'
2014-06-21 12:12:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:12:11 TRACE Expression:41 - Expression text: xxx+6
2014-06-21 12:12:11 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:12:11 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:12:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:11 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:12:11 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:11 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:11 TRACE Expression:41 - Expression text: 6
2014-06-21 12:12:11 TRACE Expression:243 - int_visitLdcInsn: 6
2014-06-21 12:12:11 TRACE ExpressionType:45 - org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:11 TRACE ExpressionType:46 - I
2014-06-21 12:12:11 TRACE ExpressionType:47 - org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:11 TRACE ExpressionType:48 - I
2014-06-21 12:12:11 TRACE ExpressionType:45 - org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:11 TRACE ExpressionType:46 - I
2014-06-21 12:12:11 TRACE ExpressionType:47 - org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:12:11 TRACE Expression$21:42 - org.itmo.iyakupov.components.expr.Expression@1e67d34
2014-06-21 12:12:11 TRACE Expression$21:43 - org.itmo.iyakupov.components.expr.Expression@125fd97
2014-06-21 12:12:11 TRACE Expression$21:44 - org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:11 TRACE Expression$21:45 - I
2014-06-21 12:12:11 TRACE Expression$21:46 - org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:11 TRACE Expression$21:47 - I
2014-06-21 12:12:11 TRACE ExpressionType:48 - I
2014-06-21 12:12:11 TRACE Expression$21:42 - org.itmo.iyakupov.components.expr.Expression@1e67d34
2014-06-21 12:12:11 TRACE Expression$21:43 - org.itmo.iyakupov.components.expr.Expression@125fd97
2014-06-21 12:12:11 TRACE Expression$21:44 - org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:11 TRACE Expression$21:45 - I
2014-06-21 12:12:11 TRACE Expression$21:46 - org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:11 TRACE Expression$21:47 - I
2014-06-21 12:12:11 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:12:11 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:12:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:11 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:12:11 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:12:11 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:12:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:11 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:12:11 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:12:11 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:12:11 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:12:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:11 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:12:11 TRACE Expression:38 - Expression added: GT
2014-06-21 12:12:11 TRACE Expression:39 - Token: '>'
2014-06-21 12:12:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$33
2014-06-21 12:12:11 TRACE Expression:41 - Expression text: (((a-7)*yyy)>tst)
2014-06-21 12:12:11 TRACE Expression:38 - Expression added: MUL
2014-06-21 12:12:11 TRACE Expression:39 - Token: '*'
2014-06-21 12:12:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 12:12:11 TRACE Expression:41 - Expression text: ((a-7)*yyy)
2014-06-21 12:12:11 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:12:11 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:12:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:11 TRACE Expression:41 - Expression text: tst
2014-06-21 12:12:11 TRACE Expression:38 - Expression added: MINUS
2014-06-21 12:12:11 TRACE Expression:39 - Token: '-'
2014-06-21 12:12:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$22
2014-06-21 12:12:11 TRACE Expression:41 - Expression text: (a-7)
2014-06-21 12:12:11 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:12:11 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:12:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:11 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:12:11 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:12:11 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:12:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:11 TRACE Expression:41 - Expression text: a
2014-06-21 12:12:11 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:11 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:11 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:11 TRACE Expression:41 - Expression text: 7
2014-06-21 12:12:11 TRACE Expression:243 - int_visitLdcInsn: 7
2014-06-21 12:12:11 TRACE ExpressionType:45 - org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:11 TRACE ExpressionType:46 - I
2014-06-21 12:12:11 TRACE ExpressionType:47 - org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:11 TRACE ExpressionType:48 - I
2014-06-21 12:12:11 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:12:11 TRACE ExpressionType:45 - org.itmo.iyakupov.components.expr.Expression$22
2014-06-21 12:12:11 TRACE Expression$22:42 - org.itmo.iyakupov.components.expr.Expression@12c04b1
2014-06-21 12:12:11 TRACE Expression$22:43 - org.itmo.iyakupov.components.expr.Expression@e825fe
2014-06-21 12:12:11 TRACE Expression$22:44 - org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:11 TRACE Expression$22:45 - I
2014-06-21 12:12:11 TRACE Expression$22:46 - org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:11 TRACE Expression$22:47 - I
2014-06-21 12:12:11 TRACE ExpressionType:46 - I
2014-06-21 12:12:11 TRACE ExpressionType:47 - org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:11 TRACE ExpressionType:48 - I
2014-06-21 12:12:11 TRACE Expression$22:42 - org.itmo.iyakupov.components.expr.Expression@12c04b1
2014-06-21 12:12:11 TRACE Expression$22:43 - org.itmo.iyakupov.components.expr.Expression@e825fe
2014-06-21 12:12:11 TRACE Expression$22:44 - org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:11 TRACE Expression$22:45 - I
2014-06-21 12:12:11 TRACE Expression$22:46 - org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:11 TRACE Expression$22:47 - I
2014-06-21 12:12:11 TRACE IDExpressionType:63 - tst Test I
2014-06-21 12:12:11 TRACE ExpressionType:45 - org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:11 TRACE ExpressionType:46 - I
2014-06-21 12:12:11 TRACE ExpressionType:47 - org.itmo.iyakupov.components.expr.Expression$33
2014-06-21 12:12:11 TRACE ExpressionType:48 - Z
2014-06-21 12:12:54 TRACE CsCompiler:41 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-21 12:12:54 TRACE CsCompiler:42 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-21 12:12:54 DEBUG CsCompiler:44 - Printing parse tree:
2014-06-21 12:12:54 DEBUG CsCompiler:45 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator (assign_and_modify_operator +=)) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression xxx))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx))) * (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) - (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 7))))))))))))))))) )))) * (unary_expression (postfix_expression (primary_expression yyy))))))))))))))) ))))))) (comparsion_operator >) (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))))))))))))))) )))))))))))))))) ;)) })) })
2014-06-21 12:12:55 TRACE CsCompiler:41 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-21 12:12:55 TRACE CsCompiler:42 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-21 12:12:55 DEBUG CsCompiler:44 - Printing parse tree:
2014-06-21 12:12:55 DEBUG CsCompiler:45 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator (assign_and_modify_operator +=)) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression xxx))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx))) * (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) - (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 7))))))))))))))))) )))) * (unary_expression (postfix_expression (primary_expression yyy))))))))))))))) ))))))) (comparsion_operator >) (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))))))))))))))) )))))))))))))))) ;)) })) })
2014-06-21 12:12:57 INFO  CsCompiler:55 - Parse of Test.cs completed successfully
2014-06-21 12:12:57 INFO  CsCompiler:70 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[0,0][0]=781;a+=xxx+6;xxx=yyy;returnxxx*(((a-7)*yyy)>tst);}}
2014-06-21 12:12:57 INFO  CsCompiler:71 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@109,492:492='}',<40>,22:0]}
2014-06-21 12:12:57 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-21 12:12:57 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-21 12:12:57 TRACE ClassDef:53 - Class name: Test
2014-06-21 12:12:57 TRACE Variable:30 - Field/variable added: tst
2014-06-21 12:12:57 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:57 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:57 TRACE Expression:41 - Expression text: 555
2014-06-21 12:12:57 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:12:57 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:57 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:57 TRACE Expression:41 - Expression text: 1
2014-06-21 12:12:57 TRACE Variable:30 - Field/variable added: yyy
2014-06-21 12:12:57 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:12:57 TRACE Expression:39 - Token: '+'
2014-06-21 12:12:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:12:57 TRACE Expression:41 - Expression text: tst+1
2014-06-21 12:12:57 TRACE Variable:30 - Field/variable added: zzz
2014-06-21 12:12:57 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:12:57 TRACE Expression:39 - Token: '+'
2014-06-21 12:12:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:12:57 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-21 12:12:57 TRACE ClassMethod:39 - Method added: Main
2014-06-21 12:12:57 TRACE Variable:30 - Field/variable added: s
2014-06-21 12:12:57 TRACE CompoundStatement:34 - Decl in da block: inta=5;
2014-06-21 12:12:57 TRACE Variable:30 - Field/variable added: a
2014-06-21 12:12:57 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:57 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:57 TRACE Expression:41 - Expression text: 5
2014-06-21 12:12:57 TRACE CompoundStatement:34 - Decl in da block: intxxx=2;
2014-06-21 12:12:57 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:12:57 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:57 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:57 TRACE Expression:41 - Expression text: 2
2014-06-21 12:12:57 TRACE CompoundStatement:34 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-21 12:12:57 TRACE Variable:30 - Field/variable added: testInt
2014-06-21 12:12:57 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-21 12:12:57 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-21 12:12:57 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:12:57 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:57 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:57 TRACE Expression:41 - Expression text: 1
2014-06-21 12:12:57 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:57 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:57 TRACE Expression:41 - Expression text: 2
2014-06-21 12:12:57 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:12:57 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:57 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:57 TRACE Expression:41 - Expression text: 3
2014-06-21 12:12:57 TRACE Expression:38 - Expression added: NEW
2014-06-21 12:12:57 TRACE Expression:39 - Token: 'new'
2014-06-21 12:12:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-21 12:12:57 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-21 12:12:57 TRACE CompoundStatement:50 - stmt in da block: testInt[0,0][0]=781;
2014-06-21 12:12:57 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:12:57 TRACE Expression:39 - Token: '='
2014-06-21 12:12:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:12:57 TRACE Expression:41 - Expression text: testInt[0,0][0]=781
2014-06-21 12:12:57 TRACE CompoundStatement:50 - stmt in da block: a+=xxx+6;
2014-06-21 12:12:57 TRACE Expression:38 - Expression added: ADD_ASS
2014-06-21 12:12:57 TRACE Expression:39 - Token: '+='
2014-06-21 12:12:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$10
2014-06-21 12:12:57 TRACE Expression:41 - Expression text: a+=xxx+6
2014-06-21 12:12:57 TRACE CompoundStatement:50 - stmt in da block: xxx=yyy;
2014-06-21 12:12:57 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:12:57 TRACE Expression:39 - Token: '='
2014-06-21 12:12:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:12:57 TRACE Expression:41 - Expression text: xxx=yyy
2014-06-21 12:12:57 TRACE CompoundStatement:50 - stmt in da block: returnxxx*(((a-7)*yyy)>tst);
2014-06-21 12:12:57 TRACE Expression:38 - Expression added: MUL
2014-06-21 12:12:57 TRACE Expression:39 - Token: '*'
2014-06-21 12:12:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 12:12:57 TRACE Expression:41 - Expression text: xxx*(((a-7)*yyy)>tst)
2014-06-21 12:12:57 TRACE Expression:243 - int_visitLdcInsn: 555
2014-06-21 12:12:57 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:12:57 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:12:57 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:12:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:57 TRACE Expression:41 - Expression text: tst
2014-06-21 12:12:57 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:57 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:57 TRACE Expression:41 - Expression text: 1
2014-06-21 12:12:57 TRACE IDExpressionType:63 - tst Test I
2014-06-21 12:12:57 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:12:57 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:12:57 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:12:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:57 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:12:57 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:12:57 TRACE Expression:39 - Token: '+'
2014-06-21 12:12:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:12:57 TRACE Expression:41 - Expression text: xxx+123
2014-06-21 12:12:57 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:12:57 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:12:57 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:12:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:57 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:12:57 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:57 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:57 TRACE Expression:41 - Expression text: 123
2014-06-21 12:12:57 TRACE IDExpressionType:63 - xxx Test I
2014-06-21 12:12:57 TRACE Expression:243 - int_visitLdcInsn: 123
2014-06-21 12:12:57 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-21 12:12:57 TRACE Expression:243 - int_visitLdcInsn: 5
2014-06-21 12:12:57 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = a, index = 1
2014-06-21 12:12:57 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:12:57 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-21 12:12:57 TRACE ConstructorExpression:85 - t= I
2014-06-21 12:12:57 TRACE ConstructorExpression:86 - #args= 3
2014-06-21 12:12:57 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:12:57 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:12:57 TRACE Expression:243 - int_visitLdcInsn: 3
2014-06-21 12:12:57 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-21 12:12:57 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:12:57 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:57 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:57 TRACE Expression:41 - Expression text: 0
2014-06-21 12:12:57 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:57 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:57 TRACE Expression:41 - Expression text: 0
2014-06-21 12:12:57 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:12:57 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:57 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:57 TRACE Expression:41 - Expression text: 0
2014-06-21 12:12:57 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:12:57 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:12:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-21 12:12:57 TRACE Expression:41 - Expression text: testInt[0,0][0]
2014-06-21 12:12:57 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:57 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:57 TRACE Expression:41 - Expression text: 781
2014-06-21 12:12:57 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:12:57 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:12:57 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:12:57 TRACE Expression:243 - int_visitLdcInsn: 781
2014-06-21 12:12:57 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:12:57 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:12:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:57 TRACE Expression:41 - Expression text: a
2014-06-21 12:12:57 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:12:57 TRACE Expression:39 - Token: '+'
2014-06-21 12:12:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:12:57 TRACE Expression:41 - Expression text: xxx+6
2014-06-21 12:12:57 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:12:57 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:12:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:57 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:12:57 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:57 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:57 TRACE Expression:41 - Expression text: 6
2014-06-21 12:12:57 TRACE Expression:243 - int_visitLdcInsn: 6
2014-06-21 12:12:57 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:12:57 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:12:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:57 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:12:57 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:12:57 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:12:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:57 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:12:57 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:12:57 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:12:57 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:12:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:57 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:12:57 TRACE Expression:38 - Expression added: GT
2014-06-21 12:12:57 TRACE Expression:39 - Token: '>'
2014-06-21 12:12:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$33
2014-06-21 12:12:57 TRACE Expression:41 - Expression text: (((a-7)*yyy)>tst)
2014-06-21 12:12:57 TRACE Expression:38 - Expression added: MUL
2014-06-21 12:12:57 TRACE Expression:39 - Token: '*'
2014-06-21 12:12:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 12:12:57 TRACE Expression:41 - Expression text: ((a-7)*yyy)
2014-06-21 12:12:57 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:12:57 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:12:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:57 TRACE Expression:41 - Expression text: tst
2014-06-21 12:12:57 TRACE Expression:38 - Expression added: MINUS
2014-06-21 12:12:57 TRACE Expression:39 - Token: '-'
2014-06-21 12:12:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$22
2014-06-21 12:12:57 TRACE Expression:41 - Expression text: (a-7)
2014-06-21 12:12:57 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:12:57 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:12:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:57 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:12:57 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:12:57 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:12:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:57 TRACE Expression:41 - Expression text: a
2014-06-21 12:12:57 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:57 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:57 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:57 TRACE Expression:41 - Expression text: 7
2014-06-21 12:12:57 TRACE Expression:243 - int_visitLdcInsn: 7
2014-06-21 12:12:57 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:12:57 TRACE IDExpressionType:63 - tst Test I
2014-06-21 12:12:58 INFO  CsCompiler:55 - Parse of Test.cs completed successfully
2014-06-21 12:12:58 INFO  CsCompiler:70 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[0,0][0]=781;a+=xxx+6;xxx=yyy;returnxxx*(((a-7)*yyy)>tst);}}
2014-06-21 12:12:58 INFO  CsCompiler:71 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@109,492:492='}',<40>,22:0]}
2014-06-21 12:12:58 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-21 12:12:58 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-21 12:12:58 TRACE ClassDef:53 - Class name: Test
2014-06-21 12:12:58 TRACE Variable:30 - Field/variable added: tst
2014-06-21 12:12:58 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:58 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:58 TRACE Expression:41 - Expression text: 555
2014-06-21 12:12:58 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:12:58 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:58 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:58 TRACE Expression:41 - Expression text: 1
2014-06-21 12:12:58 TRACE Variable:30 - Field/variable added: yyy
2014-06-21 12:12:58 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:12:58 TRACE Expression:39 - Token: '+'
2014-06-21 12:12:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:12:58 TRACE Expression:41 - Expression text: tst+1
2014-06-21 12:12:58 TRACE Variable:30 - Field/variable added: zzz
2014-06-21 12:12:58 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:12:58 TRACE Expression:39 - Token: '+'
2014-06-21 12:12:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:12:58 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-21 12:12:58 TRACE ClassMethod:39 - Method added: Main
2014-06-21 12:12:58 TRACE Variable:30 - Field/variable added: s
2014-06-21 12:12:58 TRACE CompoundStatement:34 - Decl in da block: inta=5;
2014-06-21 12:12:58 TRACE Variable:30 - Field/variable added: a
2014-06-21 12:12:58 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:58 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:58 TRACE Expression:41 - Expression text: 5
2014-06-21 12:12:58 TRACE CompoundStatement:34 - Decl in da block: intxxx=2;
2014-06-21 12:12:58 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:12:58 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:58 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:58 TRACE Expression:41 - Expression text: 2
2014-06-21 12:12:58 TRACE CompoundStatement:34 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-21 12:12:58 TRACE Variable:30 - Field/variable added: testInt
2014-06-21 12:12:58 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-21 12:12:58 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-21 12:12:58 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:12:58 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:58 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:58 TRACE Expression:41 - Expression text: 1
2014-06-21 12:12:58 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:58 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:58 TRACE Expression:41 - Expression text: 2
2014-06-21 12:12:58 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:12:58 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:58 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:58 TRACE Expression:41 - Expression text: 3
2014-06-21 12:12:58 TRACE Expression:38 - Expression added: NEW
2014-06-21 12:12:58 TRACE Expression:39 - Token: 'new'
2014-06-21 12:12:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-21 12:12:58 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-21 12:12:58 TRACE CompoundStatement:50 - stmt in da block: testInt[0,0][0]=781;
2014-06-21 12:12:58 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:12:58 TRACE Expression:39 - Token: '='
2014-06-21 12:12:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:12:58 TRACE Expression:41 - Expression text: testInt[0,0][0]=781
2014-06-21 12:12:58 TRACE CompoundStatement:50 - stmt in da block: a+=xxx+6;
2014-06-21 12:12:58 TRACE Expression:38 - Expression added: ADD_ASS
2014-06-21 12:12:58 TRACE Expression:39 - Token: '+='
2014-06-21 12:12:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$10
2014-06-21 12:12:58 TRACE Expression:41 - Expression text: a+=xxx+6
2014-06-21 12:12:58 TRACE CompoundStatement:50 - stmt in da block: xxx=yyy;
2014-06-21 12:12:58 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:12:58 TRACE Expression:39 - Token: '='
2014-06-21 12:12:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:12:58 TRACE Expression:41 - Expression text: xxx=yyy
2014-06-21 12:12:58 TRACE CompoundStatement:50 - stmt in da block: returnxxx*(((a-7)*yyy)>tst);
2014-06-21 12:12:58 TRACE Expression:38 - Expression added: MUL
2014-06-21 12:12:58 TRACE Expression:39 - Token: '*'
2014-06-21 12:12:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 12:12:58 TRACE Expression:41 - Expression text: xxx*(((a-7)*yyy)>tst)
2014-06-21 12:12:58 TRACE Expression:243 - int_visitLdcInsn: 555
2014-06-21 12:12:58 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:12:58 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:12:58 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:12:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:58 TRACE Expression:41 - Expression text: tst
2014-06-21 12:12:58 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:58 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:58 TRACE Expression:41 - Expression text: 1
2014-06-21 12:12:58 TRACE IDExpressionType:63 - tst Test I
2014-06-21 12:12:58 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:12:58 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:12:58 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:12:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:58 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:12:58 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:12:58 TRACE Expression:39 - Token: '+'
2014-06-21 12:12:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:12:58 TRACE Expression:41 - Expression text: xxx+123
2014-06-21 12:12:58 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:12:58 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:12:58 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:12:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:58 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:12:58 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:58 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:58 TRACE Expression:41 - Expression text: 123
2014-06-21 12:12:58 TRACE IDExpressionType:63 - xxx Test I
2014-06-21 12:12:58 TRACE Expression:243 - int_visitLdcInsn: 123
2014-06-21 12:12:58 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-21 12:12:58 TRACE Expression:243 - int_visitLdcInsn: 5
2014-06-21 12:12:58 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = a, index = 1
2014-06-21 12:12:58 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:12:58 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-21 12:12:58 TRACE ConstructorExpression:85 - t= I
2014-06-21 12:12:58 TRACE ConstructorExpression:86 - #args= 3
2014-06-21 12:12:58 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:12:58 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:12:58 TRACE Expression:243 - int_visitLdcInsn: 3
2014-06-21 12:12:58 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-21 12:12:58 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:12:58 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:58 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:58 TRACE Expression:41 - Expression text: 0
2014-06-21 12:12:58 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:58 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:58 TRACE Expression:41 - Expression text: 0
2014-06-21 12:12:58 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:12:58 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:58 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:58 TRACE Expression:41 - Expression text: 0
2014-06-21 12:12:58 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:12:58 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:12:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-21 12:12:58 TRACE Expression:41 - Expression text: testInt[0,0][0]
2014-06-21 12:12:58 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:58 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:58 TRACE Expression:41 - Expression text: 781
2014-06-21 12:12:58 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:12:58 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:12:58 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:12:58 TRACE Expression:243 - int_visitLdcInsn: 781
2014-06-21 12:12:58 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:12:58 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:12:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:58 TRACE Expression:41 - Expression text: a
2014-06-21 12:12:58 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:12:58 TRACE Expression:39 - Token: '+'
2014-06-21 12:12:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:12:58 TRACE Expression:41 - Expression text: xxx+6
2014-06-21 12:12:58 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:12:58 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:12:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:58 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:12:58 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:58 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:58 TRACE Expression:41 - Expression text: 6
2014-06-21 12:12:58 TRACE Expression:243 - int_visitLdcInsn: 6
2014-06-21 12:12:58 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:12:58 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:12:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:58 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:12:58 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:12:58 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:12:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:58 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:12:58 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:12:58 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:12:58 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:12:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:58 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:12:58 TRACE Expression:38 - Expression added: GT
2014-06-21 12:12:58 TRACE Expression:39 - Token: '>'
2014-06-21 12:12:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$33
2014-06-21 12:12:58 TRACE Expression:41 - Expression text: (((a-7)*yyy)>tst)
2014-06-21 12:12:58 TRACE Expression:38 - Expression added: MUL
2014-06-21 12:12:58 TRACE Expression:39 - Token: '*'
2014-06-21 12:12:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 12:12:58 TRACE Expression:41 - Expression text: ((a-7)*yyy)
2014-06-21 12:12:58 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:12:58 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:12:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:58 TRACE Expression:41 - Expression text: tst
2014-06-21 12:12:58 TRACE Expression:38 - Expression added: MINUS
2014-06-21 12:12:58 TRACE Expression:39 - Token: '-'
2014-06-21 12:12:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$22
2014-06-21 12:12:58 TRACE Expression:41 - Expression text: (a-7)
2014-06-21 12:12:58 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:12:58 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:12:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:58 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:12:58 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:12:58 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:12:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:12:58 TRACE Expression:41 - Expression text: a
2014-06-21 12:12:58 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:12:58 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:12:58 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:12:58 TRACE Expression:41 - Expression text: 7
2014-06-21 12:12:58 TRACE Expression:243 - int_visitLdcInsn: 7
2014-06-21 12:12:58 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:12:58 TRACE IDExpressionType:63 - tst Test I
2014-06-21 12:13:24 TRACE CsCompiler:41 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-21 12:13:24 TRACE CsCompiler:42 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-21 12:13:24 DEBUG CsCompiler:44 - Printing parse tree:
2014-06-21 12:13:24 DEBUG CsCompiler:45 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator (assign_and_modify_operator +=)) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression xxx))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx))) * (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) - (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 7))))))))))))))))) )))) * (unary_expression (postfix_expression (primary_expression yyy))))))))))))))) )))))))))))))))) )))))))))))))))) ;)) })) })
2014-06-21 12:13:25 INFO  CsCompiler:55 - Parse of Test.cs completed successfully
2014-06-21 12:13:25 INFO  CsCompiler:70 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[0,0][0]=781;a+=xxx+6;xxx=yyy;returnxxx*(((a-7)*yyy));}}
2014-06-21 12:13:25 INFO  CsCompiler:71 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@107,492:492='}',<40>,22:0]}
2014-06-21 12:13:25 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-21 12:13:25 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-21 12:13:25 TRACE ClassDef:53 - Class name: Test
2014-06-21 12:13:25 TRACE Variable:30 - Field/variable added: tst
2014-06-21 12:13:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:13:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:13:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:13:25 TRACE Expression:41 - Expression text: 555
2014-06-21 12:13:25 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:13:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:13:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:13:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:13:25 TRACE Expression:41 - Expression text: 1
2014-06-21 12:13:25 TRACE Variable:30 - Field/variable added: yyy
2014-06-21 12:13:25 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:13:25 TRACE Expression:39 - Token: '+'
2014-06-21 12:13:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:13:25 TRACE Expression:41 - Expression text: tst+1
2014-06-21 12:13:25 TRACE Variable:30 - Field/variable added: zzz
2014-06-21 12:13:25 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:13:25 TRACE Expression:39 - Token: '+'
2014-06-21 12:13:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:13:25 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-21 12:13:25 TRACE ClassMethod:39 - Method added: Main
2014-06-21 12:13:25 TRACE Variable:30 - Field/variable added: s
2014-06-21 12:13:25 TRACE CompoundStatement:34 - Decl in da block: inta=5;
2014-06-21 12:13:25 TRACE Variable:30 - Field/variable added: a
2014-06-21 12:13:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:13:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:13:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:13:25 TRACE Expression:41 - Expression text: 5
2014-06-21 12:13:25 TRACE CompoundStatement:34 - Decl in da block: intxxx=2;
2014-06-21 12:13:25 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:13:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:13:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:13:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:13:25 TRACE Expression:41 - Expression text: 2
2014-06-21 12:13:25 TRACE CompoundStatement:34 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-21 12:13:25 TRACE Variable:30 - Field/variable added: testInt
2014-06-21 12:13:25 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-21 12:13:25 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-21 12:13:25 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:13:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:13:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:13:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:13:25 TRACE Expression:41 - Expression text: 1
2014-06-21 12:13:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:13:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:13:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:13:25 TRACE Expression:41 - Expression text: 2
2014-06-21 12:13:25 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:13:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:13:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:13:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:13:25 TRACE Expression:41 - Expression text: 3
2014-06-21 12:13:25 TRACE Expression:38 - Expression added: NEW
2014-06-21 12:13:25 TRACE Expression:39 - Token: 'new'
2014-06-21 12:13:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-21 12:13:25 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-21 12:13:25 TRACE CompoundStatement:50 - stmt in da block: testInt[0,0][0]=781;
2014-06-21 12:13:25 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:13:25 TRACE Expression:39 - Token: '='
2014-06-21 12:13:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:13:25 TRACE Expression:41 - Expression text: testInt[0,0][0]=781
2014-06-21 12:13:25 TRACE CompoundStatement:50 - stmt in da block: a+=xxx+6;
2014-06-21 12:13:25 TRACE Expression:38 - Expression added: ADD_ASS
2014-06-21 12:13:25 TRACE Expression:39 - Token: '+='
2014-06-21 12:13:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$10
2014-06-21 12:13:25 TRACE Expression:41 - Expression text: a+=xxx+6
2014-06-21 12:13:25 TRACE CompoundStatement:50 - stmt in da block: xxx=yyy;
2014-06-21 12:13:25 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:13:25 TRACE Expression:39 - Token: '='
2014-06-21 12:13:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:13:25 TRACE Expression:41 - Expression text: xxx=yyy
2014-06-21 12:13:25 TRACE CompoundStatement:50 - stmt in da block: returnxxx*(((a-7)*yyy));
2014-06-21 12:13:25 TRACE Expression:38 - Expression added: MUL
2014-06-21 12:13:25 TRACE Expression:39 - Token: '*'
2014-06-21 12:13:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 12:13:25 TRACE Expression:41 - Expression text: xxx*(((a-7)*yyy))
2014-06-21 12:13:25 TRACE Expression:243 - int_visitLdcInsn: 555
2014-06-21 12:13:25 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:13:25 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:13:25 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:13:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:13:25 TRACE Expression:41 - Expression text: tst
2014-06-21 12:13:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:13:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:13:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:13:25 TRACE Expression:41 - Expression text: 1
2014-06-21 12:13:25 TRACE IDExpressionType:63 - tst Test I
2014-06-21 12:13:25 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:13:25 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:13:25 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:13:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:13:25 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:13:25 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:13:25 TRACE Expression:39 - Token: '+'
2014-06-21 12:13:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:13:25 TRACE Expression:41 - Expression text: xxx+123
2014-06-21 12:13:25 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:13:25 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:13:25 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:13:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:13:25 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:13:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:13:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:13:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:13:25 TRACE Expression:41 - Expression text: 123
2014-06-21 12:13:25 TRACE IDExpressionType:63 - xxx Test I
2014-06-21 12:13:25 TRACE Expression:243 - int_visitLdcInsn: 123
2014-06-21 12:13:25 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-21 12:13:25 TRACE Expression:243 - int_visitLdcInsn: 5
2014-06-21 12:13:25 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = a, index = 1
2014-06-21 12:13:25 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:13:25 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-21 12:13:25 TRACE ConstructorExpression:85 - t= I
2014-06-21 12:13:25 TRACE ConstructorExpression:86 - #args= 3
2014-06-21 12:13:25 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:13:25 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:13:25 TRACE Expression:243 - int_visitLdcInsn: 3
2014-06-21 12:13:25 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-21 12:13:25 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:13:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:13:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:13:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:13:25 TRACE Expression:41 - Expression text: 0
2014-06-21 12:13:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:13:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:13:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:13:25 TRACE Expression:41 - Expression text: 0
2014-06-21 12:13:25 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:13:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:13:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:13:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:13:25 TRACE Expression:41 - Expression text: 0
2014-06-21 12:13:25 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:13:25 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:13:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-21 12:13:25 TRACE Expression:41 - Expression text: testInt[0,0][0]
2014-06-21 12:13:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:13:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:13:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:13:25 TRACE Expression:41 - Expression text: 781
2014-06-21 12:13:25 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:13:25 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:13:25 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:13:25 TRACE Expression:243 - int_visitLdcInsn: 781
2014-06-21 12:13:25 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:13:25 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:13:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:13:25 TRACE Expression:41 - Expression text: a
2014-06-21 12:13:25 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:13:25 TRACE Expression:39 - Token: '+'
2014-06-21 12:13:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:13:25 TRACE Expression:41 - Expression text: xxx+6
2014-06-21 12:13:25 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:13:25 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:13:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:13:25 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:13:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:13:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:13:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:13:25 TRACE Expression:41 - Expression text: 6
2014-06-21 12:13:25 TRACE Expression:243 - int_visitLdcInsn: 6
2014-06-21 12:13:25 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:13:25 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:13:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:13:25 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:13:25 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:13:25 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:13:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:13:25 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:13:25 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:13:25 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:13:25 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:13:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:13:25 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:13:25 TRACE Expression:38 - Expression added: MUL
2014-06-21 12:13:25 TRACE Expression:39 - Token: '*'
2014-06-21 12:13:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 12:13:25 TRACE Expression:41 - Expression text: (((a-7)*yyy))
2014-06-21 12:13:25 TRACE Expression:38 - Expression added: MINUS
2014-06-21 12:13:25 TRACE Expression:39 - Token: '-'
2014-06-21 12:13:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$22
2014-06-21 12:13:25 TRACE Expression:41 - Expression text: (a-7)
2014-06-21 12:13:25 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:13:25 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:13:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:13:25 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:13:25 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:13:25 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:13:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:13:25 TRACE Expression:41 - Expression text: a
2014-06-21 12:13:25 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:13:25 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:13:25 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:13:25 TRACE Expression:41 - Expression text: 7
2014-06-21 12:13:25 TRACE Expression:243 - int_visitLdcInsn: 7
2014-06-21 12:13:25 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:13:25 INFO  CsCompiler:87 - tst = 555
2014-06-21 12:13:25 INFO  CsCompiler:87 - xxx = 1
2014-06-21 12:13:25 INFO  CsCompiler:87 - yyy = 556
2014-06-21 12:13:25 INFO  CsCompiler:87 - zzz = 680
2014-06-21 12:13:25 INFO  CsCompiler:95 - Main: 1854816
2014-06-21 12:13:39 TRACE CsCompiler:41 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-21 12:13:39 TRACE CsCompiler:42 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-21 12:13:39 DEBUG CsCompiler:44 - Printing parse tree:
2014-06-21 12:13:39 DEBUG CsCompiler:45 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator (assign_and_modify_operator +=)) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression xxx))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) - (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 7))))))))))))))))) )))) * (unary_expression (postfix_expression (primary_expression yyy))))))))))))))) ))))))) (comparsion_operator >) (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))))))))))))))) )))))))))))))))) ;)) })) })
2014-06-21 12:13:41 INFO  CsCompiler:55 - Parse of Test.cs completed successfully
2014-06-21 12:13:41 INFO  CsCompiler:70 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[0,0][0]=781;a+=xxx+6;xxx=yyy;return(((a-7)*yyy)>tst);}}
2014-06-21 12:13:41 INFO  CsCompiler:71 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@107,486:486='}',<40>,22:0]}
2014-06-21 12:13:41 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-21 12:13:41 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-21 12:13:41 TRACE ClassDef:53 - Class name: Test
2014-06-21 12:13:41 TRACE Variable:30 - Field/variable added: tst
2014-06-21 12:13:41 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:13:41 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:13:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:13:41 TRACE Expression:41 - Expression text: 555
2014-06-21 12:13:41 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:13:41 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:13:41 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:13:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:13:41 TRACE Expression:41 - Expression text: 1
2014-06-21 12:13:41 TRACE Variable:30 - Field/variable added: yyy
2014-06-21 12:13:41 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:13:41 TRACE Expression:39 - Token: '+'
2014-06-21 12:13:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:13:41 TRACE Expression:41 - Expression text: tst+1
2014-06-21 12:13:41 TRACE Variable:30 - Field/variable added: zzz
2014-06-21 12:13:41 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:13:41 TRACE Expression:39 - Token: '+'
2014-06-21 12:13:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:13:41 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-21 12:13:41 TRACE ClassMethod:39 - Method added: Main
2014-06-21 12:13:41 TRACE Variable:30 - Field/variable added: s
2014-06-21 12:13:41 TRACE CompoundStatement:34 - Decl in da block: inta=5;
2014-06-21 12:13:41 TRACE Variable:30 - Field/variable added: a
2014-06-21 12:13:41 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:13:41 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:13:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:13:41 TRACE Expression:41 - Expression text: 5
2014-06-21 12:13:41 TRACE CompoundStatement:34 - Decl in da block: intxxx=2;
2014-06-21 12:13:41 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:13:41 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:13:41 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:13:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:13:41 TRACE Expression:41 - Expression text: 2
2014-06-21 12:13:41 TRACE CompoundStatement:34 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-21 12:13:41 TRACE Variable:30 - Field/variable added: testInt
2014-06-21 12:13:41 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-21 12:13:41 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-21 12:13:41 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:13:41 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:13:41 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:13:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:13:41 TRACE Expression:41 - Expression text: 1
2014-06-21 12:13:41 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:13:41 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:13:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:13:41 TRACE Expression:41 - Expression text: 2
2014-06-21 12:13:41 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:13:41 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:13:41 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:13:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:13:41 TRACE Expression:41 - Expression text: 3
2014-06-21 12:13:41 TRACE Expression:38 - Expression added: NEW
2014-06-21 12:13:41 TRACE Expression:39 - Token: 'new'
2014-06-21 12:13:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-21 12:13:41 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-21 12:13:41 TRACE CompoundStatement:50 - stmt in da block: testInt[0,0][0]=781;
2014-06-21 12:13:41 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:13:41 TRACE Expression:39 - Token: '='
2014-06-21 12:13:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:13:41 TRACE Expression:41 - Expression text: testInt[0,0][0]=781
2014-06-21 12:13:41 TRACE CompoundStatement:50 - stmt in da block: a+=xxx+6;
2014-06-21 12:13:41 TRACE Expression:38 - Expression added: ADD_ASS
2014-06-21 12:13:41 TRACE Expression:39 - Token: '+='
2014-06-21 12:13:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$10
2014-06-21 12:13:41 TRACE Expression:41 - Expression text: a+=xxx+6
2014-06-21 12:13:41 TRACE CompoundStatement:50 - stmt in da block: xxx=yyy;
2014-06-21 12:13:41 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:13:41 TRACE Expression:39 - Token: '='
2014-06-21 12:13:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:13:41 TRACE Expression:41 - Expression text: xxx=yyy
2014-06-21 12:13:41 TRACE CompoundStatement:50 - stmt in da block: return(((a-7)*yyy)>tst);
2014-06-21 12:13:41 TRACE Expression:38 - Expression added: GT
2014-06-21 12:13:41 TRACE Expression:39 - Token: '>'
2014-06-21 12:13:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$33
2014-06-21 12:13:41 TRACE Expression:41 - Expression text: (((a-7)*yyy)>tst)
2014-06-21 12:13:41 TRACE Expression:243 - int_visitLdcInsn: 555
2014-06-21 12:13:41 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:13:41 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:13:41 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:13:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:13:41 TRACE Expression:41 - Expression text: tst
2014-06-21 12:13:41 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:13:41 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:13:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:13:41 TRACE Expression:41 - Expression text: 1
2014-06-21 12:13:41 TRACE IDExpressionType:63 - tst Test I
2014-06-21 12:13:41 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:13:41 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:13:41 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:13:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:13:41 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:13:41 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:13:41 TRACE Expression:39 - Token: '+'
2014-06-21 12:13:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:13:41 TRACE Expression:41 - Expression text: xxx+123
2014-06-21 12:13:41 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:13:41 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:13:41 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:13:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:13:41 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:13:41 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:13:41 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:13:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:13:41 TRACE Expression:41 - Expression text: 123
2014-06-21 12:13:41 TRACE IDExpressionType:63 - xxx Test I
2014-06-21 12:13:41 TRACE Expression:243 - int_visitLdcInsn: 123
2014-06-21 12:13:41 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-21 12:13:41 TRACE Expression:243 - int_visitLdcInsn: 5
2014-06-21 12:13:41 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = a, index = 1
2014-06-21 12:13:41 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:13:41 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-21 12:13:41 TRACE ConstructorExpression:85 - t= I
2014-06-21 12:13:41 TRACE ConstructorExpression:86 - #args= 3
2014-06-21 12:13:41 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:13:41 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:13:41 TRACE Expression:243 - int_visitLdcInsn: 3
2014-06-21 12:13:41 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-21 12:13:41 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:13:41 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:13:41 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:13:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:13:41 TRACE Expression:41 - Expression text: 0
2014-06-21 12:13:41 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:13:41 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:13:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:13:41 TRACE Expression:41 - Expression text: 0
2014-06-21 12:13:41 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:13:41 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:13:41 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:13:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:13:41 TRACE Expression:41 - Expression text: 0
2014-06-21 12:13:41 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:13:41 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:13:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-21 12:13:41 TRACE Expression:41 - Expression text: testInt[0,0][0]
2014-06-21 12:13:41 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:13:41 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:13:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:13:41 TRACE Expression:41 - Expression text: 781
2014-06-21 12:13:41 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:13:41 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:13:41 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:13:41 TRACE Expression:243 - int_visitLdcInsn: 781
2014-06-21 12:13:41 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:13:41 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:13:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:13:41 TRACE Expression:41 - Expression text: a
2014-06-21 12:13:41 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:13:41 TRACE Expression:39 - Token: '+'
2014-06-21 12:13:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:13:41 TRACE Expression:41 - Expression text: xxx+6
2014-06-21 12:13:41 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:13:41 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:13:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:13:41 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:13:41 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:13:41 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:13:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:13:41 TRACE Expression:41 - Expression text: 6
2014-06-21 12:13:41 TRACE Expression:243 - int_visitLdcInsn: 6
2014-06-21 12:13:41 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:13:41 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:13:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:13:41 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:13:41 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:13:41 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:13:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:13:41 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:13:41 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:13:41 TRACE Expression:38 - Expression added: MUL
2014-06-21 12:13:41 TRACE Expression:39 - Token: '*'
2014-06-21 12:13:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 12:13:41 TRACE Expression:41 - Expression text: ((a-7)*yyy)
2014-06-21 12:13:41 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:13:41 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:13:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:13:41 TRACE Expression:41 - Expression text: tst
2014-06-21 12:13:41 TRACE Expression:38 - Expression added: MINUS
2014-06-21 12:13:41 TRACE Expression:39 - Token: '-'
2014-06-21 12:13:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$22
2014-06-21 12:13:41 TRACE Expression:41 - Expression text: (a-7)
2014-06-21 12:13:41 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:13:41 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:13:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:13:41 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:13:41 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:13:41 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:13:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:13:41 TRACE Expression:41 - Expression text: a
2014-06-21 12:13:41 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:13:41 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:13:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:13:41 TRACE Expression:41 - Expression text: 7
2014-06-21 12:13:41 TRACE Expression:243 - int_visitLdcInsn: 7
2014-06-21 12:13:41 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:13:41 TRACE IDExpressionType:63 - tst Test I
2014-06-21 12:29:14 TRACE CsCompiler:41 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-21 12:29:14 TRACE CsCompiler:42 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-21 12:29:14 DEBUG CsCompiler:44 - Printing parse tree:
2014-06-21 12:29:14 DEBUG CsCompiler:45 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator (assign_and_modify_operator +=)) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression xxx))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx))) * (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) - (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 7))))))))))))))))) )))) * (unary_expression (postfix_expression (primary_expression yyy))))))))))))))) ))))))) (comparsion_operator >) (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))))))))))))))) )))))))))))))))) ;)) })) })
2014-06-21 12:29:15 INFO  CsCompiler:55 - Parse of Test.cs completed successfully
2014-06-21 12:29:15 INFO  CsCompiler:70 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[0,0][0]=781;a+=xxx+6;xxx=yyy;returnxxx*(((a-7)*yyy)>tst);}}
2014-06-21 12:29:15 INFO  CsCompiler:71 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@109,492:492='}',<40>,22:0]}
2014-06-21 12:29:16 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-21 12:29:16 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-21 12:29:16 TRACE ClassDef:53 - Class name: Test
2014-06-21 12:29:16 TRACE Variable:30 - Field/variable added: tst
2014-06-21 12:29:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:29:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:29:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:29:16 TRACE Expression:41 - Expression text: 555
2014-06-21 12:29:16 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:29:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:29:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:29:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:29:16 TRACE Expression:41 - Expression text: 1
2014-06-21 12:29:16 TRACE Variable:30 - Field/variable added: yyy
2014-06-21 12:29:16 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:29:16 TRACE Expression:39 - Token: '+'
2014-06-21 12:29:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:29:16 TRACE Expression:41 - Expression text: tst+1
2014-06-21 12:29:16 TRACE Variable:30 - Field/variable added: zzz
2014-06-21 12:29:16 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:29:16 TRACE Expression:39 - Token: '+'
2014-06-21 12:29:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:29:16 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-21 12:29:16 TRACE ClassMethod:39 - Method added: Main
2014-06-21 12:29:16 TRACE Variable:30 - Field/variable added: s
2014-06-21 12:29:16 TRACE CompoundStatement:34 - Decl in da block: inta=5;
2014-06-21 12:29:16 TRACE Variable:30 - Field/variable added: a
2014-06-21 12:29:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:29:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:29:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:29:16 TRACE Expression:41 - Expression text: 5
2014-06-21 12:29:16 TRACE CompoundStatement:34 - Decl in da block: intxxx=2;
2014-06-21 12:29:16 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:29:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:29:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:29:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:29:16 TRACE Expression:41 - Expression text: 2
2014-06-21 12:29:16 TRACE CompoundStatement:34 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-21 12:29:16 TRACE Variable:30 - Field/variable added: testInt
2014-06-21 12:29:16 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-21 12:29:16 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-21 12:29:16 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:29:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:29:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:29:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:29:16 TRACE Expression:41 - Expression text: 1
2014-06-21 12:29:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:29:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:29:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:29:16 TRACE Expression:41 - Expression text: 2
2014-06-21 12:29:16 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:29:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:29:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:29:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:29:16 TRACE Expression:41 - Expression text: 3
2014-06-21 12:29:16 TRACE Expression:38 - Expression added: NEW
2014-06-21 12:29:16 TRACE Expression:39 - Token: 'new'
2014-06-21 12:29:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-21 12:29:16 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-21 12:29:16 TRACE CompoundStatement:50 - stmt in da block: testInt[0,0][0]=781;
2014-06-21 12:29:16 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:29:16 TRACE Expression:39 - Token: '='
2014-06-21 12:29:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:29:16 TRACE Expression:41 - Expression text: testInt[0,0][0]=781
2014-06-21 12:29:16 TRACE CompoundStatement:50 - stmt in da block: a+=xxx+6;
2014-06-21 12:29:16 TRACE Expression:38 - Expression added: ADD_ASS
2014-06-21 12:29:16 TRACE Expression:39 - Token: '+='
2014-06-21 12:29:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$10
2014-06-21 12:29:16 TRACE Expression:41 - Expression text: a+=xxx+6
2014-06-21 12:29:16 TRACE CompoundStatement:50 - stmt in da block: xxx=yyy;
2014-06-21 12:29:16 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:29:16 TRACE Expression:39 - Token: '='
2014-06-21 12:29:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:29:16 TRACE Expression:41 - Expression text: xxx=yyy
2014-06-21 12:29:16 TRACE CompoundStatement:50 - stmt in da block: returnxxx*(((a-7)*yyy)>tst);
2014-06-21 12:29:16 TRACE Expression:38 - Expression added: MUL
2014-06-21 12:29:16 TRACE Expression:39 - Token: '*'
2014-06-21 12:29:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 12:29:16 TRACE Expression:41 - Expression text: xxx*(((a-7)*yyy)>tst)
2014-06-21 12:29:16 TRACE Expression:243 - int_visitLdcInsn: 555
2014-06-21 12:29:16 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:29:16 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:29:16 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:29:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:29:16 TRACE Expression:41 - Expression text: tst
2014-06-21 12:29:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:29:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:29:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:29:16 TRACE Expression:41 - Expression text: 1
2014-06-21 12:29:16 TRACE IDExpressionType:63 - tst Test I
2014-06-21 12:29:16 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:29:16 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:29:16 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:29:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:29:16 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:29:16 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:29:16 TRACE Expression:39 - Token: '+'
2014-06-21 12:29:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:29:16 TRACE Expression:41 - Expression text: xxx+123
2014-06-21 12:29:16 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:29:16 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:29:16 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:29:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:29:16 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:29:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:29:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:29:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:29:16 TRACE Expression:41 - Expression text: 123
2014-06-21 12:29:16 TRACE IDExpressionType:63 - xxx Test I
2014-06-21 12:29:16 TRACE Expression:243 - int_visitLdcInsn: 123
2014-06-21 12:29:16 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-21 12:29:16 TRACE Expression:243 - int_visitLdcInsn: 5
2014-06-21 12:29:16 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = a, index = 1
2014-06-21 12:29:16 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:29:16 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-21 12:29:16 TRACE ConstructorExpression:85 - t= I
2014-06-21 12:29:16 TRACE ConstructorExpression:86 - #args= 3
2014-06-21 12:29:16 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:29:16 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:29:16 TRACE Expression:243 - int_visitLdcInsn: 3
2014-06-21 12:29:16 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-21 12:29:16 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:29:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:29:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:29:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:29:16 TRACE Expression:41 - Expression text: 0
2014-06-21 12:29:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:29:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:29:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:29:16 TRACE Expression:41 - Expression text: 0
2014-06-21 12:29:16 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:29:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:29:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:29:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:29:16 TRACE Expression:41 - Expression text: 0
2014-06-21 12:29:16 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:29:16 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:29:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-21 12:29:16 TRACE Expression:41 - Expression text: testInt[0,0][0]
2014-06-21 12:29:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:29:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:29:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:29:16 TRACE Expression:41 - Expression text: 781
2014-06-21 12:29:16 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:29:16 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:29:16 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:29:16 TRACE Expression:243 - int_visitLdcInsn: 781
2014-06-21 12:29:16 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:29:16 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:29:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:29:16 TRACE Expression:41 - Expression text: a
2014-06-21 12:29:16 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:29:16 TRACE Expression:39 - Token: '+'
2014-06-21 12:29:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:29:16 TRACE Expression:41 - Expression text: xxx+6
2014-06-21 12:29:16 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:29:16 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:29:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:29:16 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:29:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:29:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:29:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:29:16 TRACE Expression:41 - Expression text: 6
2014-06-21 12:29:16 TRACE Expression:243 - int_visitLdcInsn: 6
2014-06-21 12:29:16 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:29:16 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:29:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:29:16 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:29:16 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:29:16 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:29:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:29:16 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:29:16 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:29:16 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:29:16 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:29:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:29:16 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:29:16 TRACE Expression:38 - Expression added: GT
2014-06-21 12:29:16 TRACE Expression:39 - Token: '>'
2014-06-21 12:29:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$33
2014-06-21 12:29:16 TRACE Expression:41 - Expression text: (((a-7)*yyy)>tst)
2014-06-21 12:29:16 TRACE Expression:38 - Expression added: MUL
2014-06-21 12:29:16 TRACE Expression:39 - Token: '*'
2014-06-21 12:29:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 12:29:16 TRACE Expression:41 - Expression text: ((a-7)*yyy)
2014-06-21 12:29:16 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:29:16 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:29:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:29:16 TRACE Expression:41 - Expression text: tst
2014-06-21 12:29:16 TRACE Expression:38 - Expression added: MINUS
2014-06-21 12:29:16 TRACE Expression:39 - Token: '-'
2014-06-21 12:29:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$22
2014-06-21 12:29:16 TRACE Expression:41 - Expression text: (a-7)
2014-06-21 12:29:16 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:29:16 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:29:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:29:16 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:29:16 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:29:16 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:29:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:29:16 TRACE Expression:41 - Expression text: a
2014-06-21 12:29:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:29:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:29:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:29:16 TRACE Expression:41 - Expression text: 7
2014-06-21 12:29:16 TRACE Expression:243 - int_visitLdcInsn: 7
2014-06-21 12:29:16 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:29:16 TRACE IDExpressionType:63 - tst Test I
2014-06-21 12:30:25 TRACE CsCompiler:41 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-21 12:30:25 TRACE CsCompiler:42 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-21 12:30:25 DEBUG CsCompiler:44 - Printing parse tree:
2014-06-21 12:30:25 DEBUG CsCompiler:45 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier int)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator (assign_and_modify_operator +=)) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression xxx))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) - (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 7))))))))))))))))) )))) * (unary_expression (postfix_expression (primary_expression yyy))))))))))))))) ))))))) (comparsion_operator >) (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))))))))))))))) )))))))))))))))) ;)) })) })
2014-06-21 12:30:26 INFO  CsCompiler:55 - Parse of Test.cs completed successfully
2014-06-21 12:30:26 INFO  CsCompiler:70 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticintMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[0,0][0]=781;a+=xxx+6;xxx=yyy;return(((a-7)*yyy)>tst);}}
2014-06-21 12:30:26 INFO  CsCompiler:71 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@107,486:486='}',<40>,22:0]}
2014-06-21 12:30:26 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-21 12:30:26 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-21 12:30:26 TRACE ClassDef:53 - Class name: Test
2014-06-21 12:30:26 TRACE Variable:30 - Field/variable added: tst
2014-06-21 12:30:26 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:30:26 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:30:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:30:26 TRACE Expression:41 - Expression text: 555
2014-06-21 12:30:26 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:30:26 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:30:26 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:30:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:30:26 TRACE Expression:41 - Expression text: 1
2014-06-21 12:30:26 TRACE Variable:30 - Field/variable added: yyy
2014-06-21 12:30:26 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:30:26 TRACE Expression:39 - Token: '+'
2014-06-21 12:30:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:30:26 TRACE Expression:41 - Expression text: tst+1
2014-06-21 12:30:26 TRACE Variable:30 - Field/variable added: zzz
2014-06-21 12:30:26 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:30:26 TRACE Expression:39 - Token: '+'
2014-06-21 12:30:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:30:26 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-21 12:30:26 TRACE ClassMethod:39 - Method added: Main
2014-06-21 12:30:26 TRACE Variable:30 - Field/variable added: s
2014-06-21 12:30:26 TRACE CompoundStatement:34 - Decl in da block: inta=5;
2014-06-21 12:30:26 TRACE Variable:30 - Field/variable added: a
2014-06-21 12:30:26 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:30:26 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:30:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:30:26 TRACE Expression:41 - Expression text: 5
2014-06-21 12:30:26 TRACE CompoundStatement:34 - Decl in da block: intxxx=2;
2014-06-21 12:30:26 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:30:26 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:30:26 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:30:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:30:26 TRACE Expression:41 - Expression text: 2
2014-06-21 12:30:26 TRACE CompoundStatement:34 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-21 12:30:26 TRACE Variable:30 - Field/variable added: testInt
2014-06-21 12:30:26 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-21 12:30:26 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-21 12:30:26 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:30:26 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:30:26 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:30:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:30:26 TRACE Expression:41 - Expression text: 1
2014-06-21 12:30:26 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:30:26 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:30:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:30:26 TRACE Expression:41 - Expression text: 2
2014-06-21 12:30:26 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:30:26 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:30:26 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:30:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:30:26 TRACE Expression:41 - Expression text: 3
2014-06-21 12:30:26 TRACE Expression:38 - Expression added: NEW
2014-06-21 12:30:26 TRACE Expression:39 - Token: 'new'
2014-06-21 12:30:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-21 12:30:26 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-21 12:30:26 TRACE CompoundStatement:50 - stmt in da block: testInt[0,0][0]=781;
2014-06-21 12:30:26 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:30:26 TRACE Expression:39 - Token: '='
2014-06-21 12:30:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:30:26 TRACE Expression:41 - Expression text: testInt[0,0][0]=781
2014-06-21 12:30:26 TRACE CompoundStatement:50 - stmt in da block: a+=xxx+6;
2014-06-21 12:30:26 TRACE Expression:38 - Expression added: ADD_ASS
2014-06-21 12:30:26 TRACE Expression:39 - Token: '+='
2014-06-21 12:30:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$10
2014-06-21 12:30:26 TRACE Expression:41 - Expression text: a+=xxx+6
2014-06-21 12:30:26 TRACE CompoundStatement:50 - stmt in da block: xxx=yyy;
2014-06-21 12:30:26 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:30:26 TRACE Expression:39 - Token: '='
2014-06-21 12:30:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:30:26 TRACE Expression:41 - Expression text: xxx=yyy
2014-06-21 12:30:26 TRACE CompoundStatement:50 - stmt in da block: return(((a-7)*yyy)>tst);
2014-06-21 12:30:26 TRACE Expression:38 - Expression added: GT
2014-06-21 12:30:26 TRACE Expression:39 - Token: '>'
2014-06-21 12:30:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$33
2014-06-21 12:30:26 TRACE Expression:41 - Expression text: (((a-7)*yyy)>tst)
2014-06-21 12:30:26 TRACE Expression:243 - int_visitLdcInsn: 555
2014-06-21 12:30:26 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:30:26 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:30:26 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:30:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:30:26 TRACE Expression:41 - Expression text: tst
2014-06-21 12:30:26 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:30:26 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:30:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:30:26 TRACE Expression:41 - Expression text: 1
2014-06-21 12:30:26 TRACE IDExpressionType:63 - tst Test I
2014-06-21 12:30:26 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:30:26 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:30:26 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:30:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:30:26 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:30:26 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:30:26 TRACE Expression:39 - Token: '+'
2014-06-21 12:30:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:30:26 TRACE Expression:41 - Expression text: xxx+123
2014-06-21 12:30:26 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:30:26 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:30:26 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:30:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:30:26 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:30:26 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:30:26 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:30:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:30:26 TRACE Expression:41 - Expression text: 123
2014-06-21 12:30:26 TRACE IDExpressionType:63 - xxx Test I
2014-06-21 12:30:26 TRACE Expression:243 - int_visitLdcInsn: 123
2014-06-21 12:30:26 TRACE ClassMethod:102 - Compiling method Main w. args I. Is constructor: false
2014-06-21 12:30:26 TRACE Expression:243 - int_visitLdcInsn: 5
2014-06-21 12:30:26 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = a, index = 1
2014-06-21 12:30:26 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:30:26 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-21 12:30:26 TRACE ConstructorExpression:85 - t= I
2014-06-21 12:30:26 TRACE ConstructorExpression:86 - #args= 3
2014-06-21 12:30:26 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:30:26 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:30:26 TRACE Expression:243 - int_visitLdcInsn: 3
2014-06-21 12:30:26 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-21 12:30:26 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:30:26 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:30:26 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:30:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:30:26 TRACE Expression:41 - Expression text: 0
2014-06-21 12:30:26 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:30:26 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:30:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:30:26 TRACE Expression:41 - Expression text: 0
2014-06-21 12:30:26 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:30:26 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:30:26 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:30:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:30:26 TRACE Expression:41 - Expression text: 0
2014-06-21 12:30:26 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:30:26 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:30:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-21 12:30:26 TRACE Expression:41 - Expression text: testInt[0,0][0]
2014-06-21 12:30:26 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:30:26 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:30:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:30:26 TRACE Expression:41 - Expression text: 781
2014-06-21 12:30:26 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:30:26 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:30:26 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:30:26 TRACE Expression:243 - int_visitLdcInsn: 781
2014-06-21 12:30:26 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:30:26 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:30:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:30:26 TRACE Expression:41 - Expression text: a
2014-06-21 12:30:26 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:30:26 TRACE Expression:39 - Token: '+'
2014-06-21 12:30:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:30:26 TRACE Expression:41 - Expression text: xxx+6
2014-06-21 12:30:26 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:30:26 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:30:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:30:26 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:30:26 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:30:26 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:30:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:30:26 TRACE Expression:41 - Expression text: 6
2014-06-21 12:30:26 TRACE Expression:243 - int_visitLdcInsn: 6
2014-06-21 12:30:26 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:30:26 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:30:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:30:26 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:30:26 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:30:26 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:30:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:30:26 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:30:26 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:30:26 TRACE Expression:38 - Expression added: MUL
2014-06-21 12:30:26 TRACE Expression:39 - Token: '*'
2014-06-21 12:30:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 12:30:26 TRACE Expression:41 - Expression text: ((a-7)*yyy)
2014-06-21 12:30:26 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:30:26 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:30:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:30:26 TRACE Expression:41 - Expression text: tst
2014-06-21 12:30:26 TRACE Expression:38 - Expression added: MINUS
2014-06-21 12:30:26 TRACE Expression:39 - Token: '-'
2014-06-21 12:30:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$22
2014-06-21 12:30:26 TRACE Expression:41 - Expression text: (a-7)
2014-06-21 12:30:26 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:30:26 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:30:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:30:26 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:30:26 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:30:26 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:30:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:30:26 TRACE Expression:41 - Expression text: a
2014-06-21 12:30:26 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:30:26 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:30:26 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:30:26 TRACE Expression:41 - Expression text: 7
2014-06-21 12:30:26 TRACE Expression:243 - int_visitLdcInsn: 7
2014-06-21 12:30:26 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:30:26 TRACE IDExpressionType:63 - tst Test I
2014-06-21 12:31:08 TRACE CsCompiler:41 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-21 12:31:08 TRACE CsCompiler:42 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-21 12:31:08 DEBUG CsCompiler:44 - Printing parse tree:
2014-06-21 12:31:08 DEBUG CsCompiler:45 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier boolean)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator (assign_and_modify_operator +=)) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression xxx))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) - (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 7))))))))))))))))) )))) * (unary_expression (postfix_expression (primary_expression yyy))))))))))))))) ))))))) (comparsion_operator >) (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))))))))))))))) )))))))))))))))) ;)) })) })
2014-06-21 12:31:09 INFO  CsCompiler:55 - Parse of Test.cs completed successfully
2014-06-21 12:31:09 INFO  CsCompiler:70 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticbooleanMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[0,0][0]=781;a+=xxx+6;xxx=yyy;return(((a-7)*yyy)>tst);}}
2014-06-21 12:31:09 INFO  CsCompiler:71 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@107,490:490='}',<40>,22:0]}
2014-06-21 12:31:09 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-21 12:31:09 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-21 12:31:09 TRACE ClassDef:53 - Class name: Test
2014-06-21 12:31:09 TRACE Variable:30 - Field/variable added: tst
2014-06-21 12:31:09 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:31:09 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:31:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:31:09 TRACE Expression:41 - Expression text: 555
2014-06-21 12:31:09 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:31:09 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:31:09 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:31:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:31:09 TRACE Expression:41 - Expression text: 1
2014-06-21 12:31:09 TRACE Variable:30 - Field/variable added: yyy
2014-06-21 12:31:09 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:31:09 TRACE Expression:39 - Token: '+'
2014-06-21 12:31:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:31:09 TRACE Expression:41 - Expression text: tst+1
2014-06-21 12:31:09 TRACE Variable:30 - Field/variable added: zzz
2014-06-21 12:31:09 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:31:09 TRACE Expression:39 - Token: '+'
2014-06-21 12:31:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:31:09 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-21 12:31:09 TRACE ClassMethod:39 - Method added: Main
2014-06-21 12:31:09 TRACE CsCompiler:44 - Obtaining complex type:Lboolean
2014-06-21 12:31:52 TRACE CsCompiler:41 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-21 12:31:52 TRACE CsCompiler:42 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-21 12:31:52 DEBUG CsCompiler:44 - Printing parse tree:
2014-06-21 12:31:52 DEBUG CsCompiler:45 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier bool)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator (assign_and_modify_operator +=)) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression xxx))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) - (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 7))))))))))))))))) )))) * (unary_expression (postfix_expression (primary_expression yyy))))))))))))))) ))))))) (comparsion_operator >) (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))))))))))))))) )))))))))))))))) ;)) })) })
2014-06-21 12:31:54 INFO  CsCompiler:55 - Parse of Test.cs completed successfully
2014-06-21 12:31:54 INFO  CsCompiler:70 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticboolMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[0,0][0]=781;a+=xxx+6;xxx=yyy;return(((a-7)*yyy)>tst);}}
2014-06-21 12:31:54 INFO  CsCompiler:71 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@107,487:487='}',<40>,22:0]}
2014-06-21 12:31:54 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-21 12:31:54 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-21 12:31:54 TRACE ClassDef:53 - Class name: Test
2014-06-21 12:31:54 TRACE Variable:30 - Field/variable added: tst
2014-06-21 12:31:54 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:31:54 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:31:54 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:31:54 TRACE Expression:41 - Expression text: 555
2014-06-21 12:31:54 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:31:54 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:31:54 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:31:54 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:31:54 TRACE Expression:41 - Expression text: 1
2014-06-21 12:31:54 TRACE Variable:30 - Field/variable added: yyy
2014-06-21 12:31:54 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:31:54 TRACE Expression:39 - Token: '+'
2014-06-21 12:31:54 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:31:54 TRACE Expression:41 - Expression text: tst+1
2014-06-21 12:31:54 TRACE Variable:30 - Field/variable added: zzz
2014-06-21 12:31:54 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:31:54 TRACE Expression:39 - Token: '+'
2014-06-21 12:31:54 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:31:54 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-21 12:31:54 TRACE ClassMethod:39 - Method added: Main
2014-06-21 12:31:54 TRACE CsCompiler:44 - Obtaining complex type:Lbool
2014-06-21 12:44:55 TRACE CsCompiler:46 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-21 12:44:55 TRACE CsCompiler:47 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-21 12:44:55 DEBUG CsCompiler:49 - Printing parse tree:
2014-06-21 12:44:55 DEBUG CsCompiler:50 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier boolean)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator (assign_and_modify_operator +=)) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression xxx))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) - (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 7))))))))))))))))) )))) * (unary_expression (postfix_expression (primary_expression yyy))))))))))))))) ))))))) (comparsion_operator >) (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))))))))))))))) )))))))))))))))) ;)) })) })
2014-06-21 12:44:56 INFO  CsCompiler:60 - Parse of Test.cs completed successfully
2014-06-21 12:44:56 INFO  CsCompiler:75 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticbooleanMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[0,0][0]=781;a+=xxx+6;xxx=yyy;return(((a-7)*yyy)>tst);}}
2014-06-21 12:44:56 INFO  CsCompiler:76 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@107,490:490='}',<40>,22:0]}
2014-06-21 12:44:56 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-21 12:44:56 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-21 12:44:56 TRACE ClassDef:53 - Class name: Test
2014-06-21 12:44:56 TRACE Variable:30 - Field/variable added: tst
2014-06-21 12:44:56 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:44:56 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:44:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:44:56 TRACE Expression:41 - Expression text: 555
2014-06-21 12:44:56 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:44:56 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:44:56 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:44:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:44:56 TRACE Expression:41 - Expression text: 1
2014-06-21 12:44:56 TRACE Variable:30 - Field/variable added: yyy
2014-06-21 12:44:56 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:44:56 TRACE Expression:39 - Token: '+'
2014-06-21 12:44:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:44:56 TRACE Expression:41 - Expression text: tst+1
2014-06-21 12:44:56 TRACE Variable:30 - Field/variable added: zzz
2014-06-21 12:44:56 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:44:56 TRACE Expression:39 - Token: '+'
2014-06-21 12:44:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:44:56 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-21 12:44:56 TRACE ClassMethod:39 - Method added: Main
2014-06-21 12:44:56 TRACE Variable:30 - Field/variable added: s
2014-06-21 12:44:56 TRACE CompoundStatement:34 - Decl in da block: inta=5;
2014-06-21 12:44:56 TRACE Variable:30 - Field/variable added: a
2014-06-21 12:44:56 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:44:56 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:44:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:44:56 TRACE Expression:41 - Expression text: 5
2014-06-21 12:44:56 TRACE CompoundStatement:34 - Decl in da block: intxxx=2;
2014-06-21 12:44:56 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:44:56 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:44:56 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:44:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:44:56 TRACE Expression:41 - Expression text: 2
2014-06-21 12:44:56 TRACE CompoundStatement:34 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-21 12:44:56 TRACE Variable:30 - Field/variable added: testInt
2014-06-21 12:44:56 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-21 12:44:56 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-21 12:44:56 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:44:56 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:44:56 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:44:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:44:56 TRACE Expression:41 - Expression text: 1
2014-06-21 12:44:56 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:44:56 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:44:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:44:56 TRACE Expression:41 - Expression text: 2
2014-06-21 12:44:56 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:44:56 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:44:56 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:44:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:44:56 TRACE Expression:41 - Expression text: 3
2014-06-21 12:44:56 TRACE Expression:38 - Expression added: NEW
2014-06-21 12:44:56 TRACE Expression:39 - Token: 'new'
2014-06-21 12:44:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-21 12:44:56 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-21 12:44:56 TRACE CompoundStatement:50 - stmt in da block: testInt[0,0][0]=781;
2014-06-21 12:44:56 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:44:56 TRACE Expression:39 - Token: '='
2014-06-21 12:44:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:44:56 TRACE Expression:41 - Expression text: testInt[0,0][0]=781
2014-06-21 12:44:56 TRACE CompoundStatement:50 - stmt in da block: a+=xxx+6;
2014-06-21 12:44:56 TRACE Expression:38 - Expression added: ADD_ASS
2014-06-21 12:44:56 TRACE Expression:39 - Token: '+='
2014-06-21 12:44:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$10
2014-06-21 12:44:56 TRACE Expression:41 - Expression text: a+=xxx+6
2014-06-21 12:44:56 TRACE CompoundStatement:50 - stmt in da block: xxx=yyy;
2014-06-21 12:44:56 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:44:56 TRACE Expression:39 - Token: '='
2014-06-21 12:44:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:44:56 TRACE Expression:41 - Expression text: xxx=yyy
2014-06-21 12:44:56 TRACE CompoundStatement:50 - stmt in da block: return(((a-7)*yyy)>tst);
2014-06-21 12:44:56 TRACE Expression:38 - Expression added: GT
2014-06-21 12:44:56 TRACE Expression:39 - Token: '>'
2014-06-21 12:44:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$33
2014-06-21 12:44:56 TRACE Expression:41 - Expression text: (((a-7)*yyy)>tst)
2014-06-21 12:44:56 TRACE Expression:243 - int_visitLdcInsn: 555
2014-06-21 12:44:56 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:44:56 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:44:56 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:44:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:44:56 TRACE Expression:41 - Expression text: tst
2014-06-21 12:44:56 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:44:56 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:44:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:44:56 TRACE Expression:41 - Expression text: 1
2014-06-21 12:44:56 TRACE IDExpressionType:63 - tst Test I
2014-06-21 12:44:56 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:44:56 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:44:56 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:44:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:44:56 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:44:56 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:44:56 TRACE Expression:39 - Token: '+'
2014-06-21 12:44:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:44:56 TRACE Expression:41 - Expression text: xxx+123
2014-06-21 12:44:56 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:44:56 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:44:56 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:44:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:44:56 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:44:56 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:44:56 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:44:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:44:56 TRACE Expression:41 - Expression text: 123
2014-06-21 12:44:56 TRACE IDExpressionType:63 - xxx Test I
2014-06-21 12:44:56 TRACE Expression:243 - int_visitLdcInsn: 123
2014-06-21 12:44:56 TRACE ClassMethod:102 - Compiling method Main w. args B. Is constructor: false
2014-06-21 12:44:56 TRACE Expression:243 - int_visitLdcInsn: 5
2014-06-21 12:44:56 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = a, index = 1
2014-06-21 12:44:56 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:44:56 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-21 12:44:56 TRACE ConstructorExpression:85 - t= I
2014-06-21 12:44:56 TRACE ConstructorExpression:86 - #args= 3
2014-06-21 12:44:56 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:44:56 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:44:56 TRACE Expression:243 - int_visitLdcInsn: 3
2014-06-21 12:44:56 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-21 12:44:56 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:44:56 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:44:56 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:44:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:44:56 TRACE Expression:41 - Expression text: 0
2014-06-21 12:44:56 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:44:56 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:44:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:44:56 TRACE Expression:41 - Expression text: 0
2014-06-21 12:44:56 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:44:56 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:44:56 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:44:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:44:56 TRACE Expression:41 - Expression text: 0
2014-06-21 12:44:56 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:44:56 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:44:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-21 12:44:56 TRACE Expression:41 - Expression text: testInt[0,0][0]
2014-06-21 12:44:56 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:44:56 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:44:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:44:56 TRACE Expression:41 - Expression text: 781
2014-06-21 12:44:56 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:44:56 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:44:56 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:44:56 TRACE Expression:243 - int_visitLdcInsn: 781
2014-06-21 12:44:56 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:44:56 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:44:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:44:56 TRACE Expression:41 - Expression text: a
2014-06-21 12:44:56 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:44:56 TRACE Expression:39 - Token: '+'
2014-06-21 12:44:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:44:56 TRACE Expression:41 - Expression text: xxx+6
2014-06-21 12:44:56 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:44:56 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:44:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:44:56 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:44:56 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:44:56 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:44:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:44:56 TRACE Expression:41 - Expression text: 6
2014-06-21 12:44:56 TRACE Expression:243 - int_visitLdcInsn: 6
2014-06-21 12:44:56 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:44:56 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:44:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:44:56 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:44:56 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:44:56 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:44:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:44:56 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:44:56 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:44:56 TRACE Expression:38 - Expression added: MUL
2014-06-21 12:44:56 TRACE Expression:39 - Token: '*'
2014-06-21 12:44:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 12:44:56 TRACE Expression:41 - Expression text: ((a-7)*yyy)
2014-06-21 12:44:56 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:44:56 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:44:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:44:56 TRACE Expression:41 - Expression text: tst
2014-06-21 12:44:56 TRACE Expression:38 - Expression added: MINUS
2014-06-21 12:44:56 TRACE Expression:39 - Token: '-'
2014-06-21 12:44:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$22
2014-06-21 12:44:56 TRACE Expression:41 - Expression text: (a-7)
2014-06-21 12:44:56 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:44:56 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:44:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:44:56 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:44:56 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:44:56 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:44:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:44:56 TRACE Expression:41 - Expression text: a
2014-06-21 12:44:56 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:44:56 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:44:56 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:44:56 TRACE Expression:41 - Expression text: 7
2014-06-21 12:44:56 TRACE Expression:243 - int_visitLdcInsn: 7
2014-06-21 12:44:56 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:44:56 TRACE IDExpressionType:63 - tst Test I
2014-06-21 12:47:03 TRACE CsCompiler:46 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-21 12:47:03 TRACE CsCompiler:47 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-21 12:47:03 DEBUG CsCompiler:49 - Printing parse tree:
2014-06-21 12:47:03 DEBUG CsCompiler:50 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier boolean)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator (assign_and_modify_operator +=)) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression xxx))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) - (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 7))))))))))))))))) )))) * (unary_expression (postfix_expression (primary_expression yyy))))))))))))))) ))))))) (comparsion_operator >) (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))))))))))))))) )))))))))))))))) ;)) })) })
2014-06-21 12:47:04 INFO  CsCompiler:60 - Parse of Test.cs completed successfully
2014-06-21 12:47:04 INFO  CsCompiler:75 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticbooleanMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[0,0][0]=781;a+=xxx+6;xxx=yyy;return(((a-7)*yyy)>tst);}}
2014-06-21 12:47:04 INFO  CsCompiler:76 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@107,490:490='}',<40>,22:0]}
2014-06-21 12:47:04 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-21 12:47:04 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-21 12:47:04 TRACE ClassDef:53 - Class name: Test
2014-06-21 12:47:04 TRACE Variable:30 - Field/variable added: tst
2014-06-21 12:47:05 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:47:05 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:47:05 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:47:05 TRACE Expression:41 - Expression text: 555
2014-06-21 12:47:05 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:47:05 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:47:05 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:47:05 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:47:05 TRACE Expression:41 - Expression text: 1
2014-06-21 12:47:05 TRACE Variable:30 - Field/variable added: yyy
2014-06-21 12:47:05 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:47:05 TRACE Expression:39 - Token: '+'
2014-06-21 12:47:05 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:47:05 TRACE Expression:41 - Expression text: tst+1
2014-06-21 12:47:05 TRACE Variable:30 - Field/variable added: zzz
2014-06-21 12:47:05 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:47:05 TRACE Expression:39 - Token: '+'
2014-06-21 12:47:05 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:47:05 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-21 12:47:05 TRACE ClassMethod:39 - Method added: Main
2014-06-21 12:47:05 TRACE Variable:30 - Field/variable added: s
2014-06-21 12:47:05 TRACE CompoundStatement:34 - Decl in da block: inta=5;
2014-06-21 12:47:05 TRACE Variable:30 - Field/variable added: a
2014-06-21 12:47:05 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:47:05 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:47:05 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:47:05 TRACE Expression:41 - Expression text: 5
2014-06-21 12:47:05 TRACE CompoundStatement:34 - Decl in da block: intxxx=2;
2014-06-21 12:47:05 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:47:05 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:47:05 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:47:05 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:47:05 TRACE Expression:41 - Expression text: 2
2014-06-21 12:47:05 TRACE CompoundStatement:34 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-21 12:47:05 TRACE Variable:30 - Field/variable added: testInt
2014-06-21 12:47:05 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-21 12:47:05 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-21 12:47:05 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:47:05 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:47:05 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:47:05 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:47:05 TRACE Expression:41 - Expression text: 1
2014-06-21 12:47:05 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:47:05 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:47:05 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:47:05 TRACE Expression:41 - Expression text: 2
2014-06-21 12:47:05 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:47:05 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:47:05 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:47:05 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:47:05 TRACE Expression:41 - Expression text: 3
2014-06-21 12:47:05 TRACE Expression:38 - Expression added: NEW
2014-06-21 12:47:05 TRACE Expression:39 - Token: 'new'
2014-06-21 12:47:05 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-21 12:47:05 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-21 12:47:05 TRACE CompoundStatement:50 - stmt in da block: testInt[0,0][0]=781;
2014-06-21 12:47:05 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:47:05 TRACE Expression:39 - Token: '='
2014-06-21 12:47:05 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:47:05 TRACE Expression:41 - Expression text: testInt[0,0][0]=781
2014-06-21 12:47:05 TRACE CompoundStatement:50 - stmt in da block: a+=xxx+6;
2014-06-21 12:47:05 TRACE Expression:38 - Expression added: ADD_ASS
2014-06-21 12:47:05 TRACE Expression:39 - Token: '+='
2014-06-21 12:47:05 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$10
2014-06-21 12:47:05 TRACE Expression:41 - Expression text: a+=xxx+6
2014-06-21 12:47:05 TRACE CompoundStatement:50 - stmt in da block: xxx=yyy;
2014-06-21 12:47:05 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:47:05 TRACE Expression:39 - Token: '='
2014-06-21 12:47:05 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:47:05 TRACE Expression:41 - Expression text: xxx=yyy
2014-06-21 12:47:05 TRACE CompoundStatement:50 - stmt in da block: return(((a-7)*yyy)>tst);
2014-06-21 12:47:05 TRACE Expression:38 - Expression added: GT
2014-06-21 12:47:05 TRACE Expression:39 - Token: '>'
2014-06-21 12:47:05 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$33
2014-06-21 12:47:05 TRACE Expression:41 - Expression text: (((a-7)*yyy)>tst)
2014-06-21 12:47:05 TRACE Expression:243 - int_visitLdcInsn: 555
2014-06-21 12:47:05 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:47:05 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:47:05 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:47:05 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:47:05 TRACE Expression:41 - Expression text: tst
2014-06-21 12:47:05 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:47:05 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:47:05 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:47:05 TRACE Expression:41 - Expression text: 1
2014-06-21 12:47:05 TRACE IDExpressionType:63 - tst Test I
2014-06-21 12:47:05 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:47:05 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:47:05 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:47:05 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:47:05 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:47:05 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:47:05 TRACE Expression:39 - Token: '+'
2014-06-21 12:47:05 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:47:05 TRACE Expression:41 - Expression text: xxx+123
2014-06-21 12:47:05 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:47:05 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:47:05 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:47:05 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:47:05 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:47:05 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:47:05 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:47:05 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:47:05 TRACE Expression:41 - Expression text: 123
2014-06-21 12:47:05 TRACE IDExpressionType:63 - xxx Test I
2014-06-21 12:47:05 TRACE Expression:243 - int_visitLdcInsn: 123
2014-06-21 12:47:05 TRACE ClassMethod:102 - Compiling method Main w. args B. Is constructor: false
2014-06-21 12:47:05 TRACE Expression:243 - int_visitLdcInsn: 5
2014-06-21 12:47:05 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = a, index = 1
2014-06-21 12:47:05 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:47:05 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-21 12:47:05 TRACE ConstructorExpression:85 - t= I
2014-06-21 12:47:05 TRACE ConstructorExpression:86 - #args= 3
2014-06-21 12:47:05 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:47:05 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:47:05 TRACE Expression:243 - int_visitLdcInsn: 3
2014-06-21 12:47:05 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-21 12:47:05 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:47:05 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:47:05 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:47:05 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:47:05 TRACE Expression:41 - Expression text: 0
2014-06-21 12:47:05 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:47:05 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:47:05 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:47:05 TRACE Expression:41 - Expression text: 0
2014-06-21 12:47:05 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:47:05 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:47:05 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:47:05 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:47:05 TRACE Expression:41 - Expression text: 0
2014-06-21 12:47:05 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:47:05 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:47:05 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-21 12:47:05 TRACE Expression:41 - Expression text: testInt[0,0][0]
2014-06-21 12:47:05 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:47:05 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:47:05 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:47:05 TRACE Expression:41 - Expression text: 781
2014-06-21 12:47:05 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:47:05 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:47:05 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:47:05 TRACE Expression:243 - int_visitLdcInsn: 781
2014-06-21 12:47:05 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:47:05 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:47:05 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:47:05 TRACE Expression:41 - Expression text: a
2014-06-21 12:47:05 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:47:05 TRACE Expression:39 - Token: '+'
2014-06-21 12:47:05 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:47:05 TRACE Expression:41 - Expression text: xxx+6
2014-06-21 12:47:05 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:47:05 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:47:05 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:47:05 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:47:05 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:47:05 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:47:05 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:47:05 TRACE Expression:41 - Expression text: 6
2014-06-21 12:47:05 TRACE Expression:243 - int_visitLdcInsn: 6
2014-06-21 12:47:05 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:47:05 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:47:05 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:47:05 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:47:05 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:47:05 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:47:05 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:47:05 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:47:05 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:47:05 TRACE Expression:38 - Expression added: MUL
2014-06-21 12:47:05 TRACE Expression:39 - Token: '*'
2014-06-21 12:47:05 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 12:47:05 TRACE Expression:41 - Expression text: ((a-7)*yyy)
2014-06-21 12:47:05 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:47:05 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:47:05 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:47:05 TRACE Expression:41 - Expression text: tst
2014-06-21 12:47:05 TRACE Expression:38 - Expression added: MINUS
2014-06-21 12:47:05 TRACE Expression:39 - Token: '-'
2014-06-21 12:47:05 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$22
2014-06-21 12:47:05 TRACE Expression:41 - Expression text: (a-7)
2014-06-21 12:47:05 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:47:05 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:47:05 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:47:05 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:47:05 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:47:05 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:47:05 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:47:05 TRACE Expression:41 - Expression text: a
2014-06-21 12:47:05 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:47:05 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:47:05 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:47:05 TRACE Expression:41 - Expression text: 7
2014-06-21 12:47:05 TRACE Expression:243 - int_visitLdcInsn: 7
2014-06-21 12:47:05 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:47:05 TRACE IDExpressionType:63 - tst Test I
2014-06-21 12:48:41 TRACE CsCompiler:46 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-21 12:48:41 TRACE CsCompiler:47 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-21 12:48:41 DEBUG CsCompiler:49 - Printing parse tree:
2014-06-21 12:48:41 DEBUG CsCompiler:50 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier boolean)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator (assign_and_modify_operator +=)) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression xxx))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) - (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 7))))))))))))))))) )))) * (unary_expression (postfix_expression (primary_expression yyy))))))))))))))) ))))))) (comparsion_operator >) (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))))))))))))))) )))))))))))))))) ;)) })) })
2014-06-21 12:48:42 INFO  CsCompiler:60 - Parse of Test.cs completed successfully
2014-06-21 12:48:42 INFO  CsCompiler:75 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticbooleanMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[0,0][0]=781;a+=xxx+6;xxx=yyy;return(((a-7)*yyy)>tst);}}
2014-06-21 12:48:42 INFO  CsCompiler:76 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@107,490:490='}',<40>,22:0]}
2014-06-21 12:48:42 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-21 12:48:42 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-21 12:48:42 TRACE ClassDef:53 - Class name: Test
2014-06-21 12:48:42 TRACE Variable:30 - Field/variable added: tst
2014-06-21 12:48:42 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:48:42 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:48:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:48:42 TRACE Expression:41 - Expression text: 555
2014-06-21 12:48:42 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:48:42 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:48:42 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:48:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:48:42 TRACE Expression:41 - Expression text: 1
2014-06-21 12:48:42 TRACE Variable:30 - Field/variable added: yyy
2014-06-21 12:48:42 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:48:42 TRACE Expression:39 - Token: '+'
2014-06-21 12:48:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:48:42 TRACE Expression:41 - Expression text: tst+1
2014-06-21 12:48:42 TRACE Variable:30 - Field/variable added: zzz
2014-06-21 12:48:42 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:48:42 TRACE Expression:39 - Token: '+'
2014-06-21 12:48:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:48:42 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-21 12:48:42 TRACE ClassMethod:39 - Method added: Main
2014-06-21 12:48:42 TRACE Variable:30 - Field/variable added: s
2014-06-21 12:48:42 TRACE CompoundStatement:34 - Decl in da block: inta=5;
2014-06-21 12:48:42 TRACE Variable:30 - Field/variable added: a
2014-06-21 12:48:42 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:48:42 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:48:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:48:42 TRACE Expression:41 - Expression text: 5
2014-06-21 12:48:42 TRACE CompoundStatement:34 - Decl in da block: intxxx=2;
2014-06-21 12:48:42 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:48:42 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:48:42 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:48:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:48:42 TRACE Expression:41 - Expression text: 2
2014-06-21 12:48:42 TRACE CompoundStatement:34 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-21 12:48:42 TRACE Variable:30 - Field/variable added: testInt
2014-06-21 12:48:42 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-21 12:48:42 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-21 12:48:42 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:48:42 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:48:42 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:48:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:48:42 TRACE Expression:41 - Expression text: 1
2014-06-21 12:48:42 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:48:42 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:48:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:48:42 TRACE Expression:41 - Expression text: 2
2014-06-21 12:48:42 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:48:42 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:48:42 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:48:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:48:42 TRACE Expression:41 - Expression text: 3
2014-06-21 12:48:42 TRACE Expression:38 - Expression added: NEW
2014-06-21 12:48:42 TRACE Expression:39 - Token: 'new'
2014-06-21 12:48:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-21 12:48:42 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-21 12:48:42 TRACE CompoundStatement:50 - stmt in da block: testInt[0,0][0]=781;
2014-06-21 12:48:42 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:48:42 TRACE Expression:39 - Token: '='
2014-06-21 12:48:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:48:42 TRACE Expression:41 - Expression text: testInt[0,0][0]=781
2014-06-21 12:48:42 TRACE CompoundStatement:50 - stmt in da block: a+=xxx+6;
2014-06-21 12:48:42 TRACE Expression:38 - Expression added: ADD_ASS
2014-06-21 12:48:42 TRACE Expression:39 - Token: '+='
2014-06-21 12:48:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$10
2014-06-21 12:48:42 TRACE Expression:41 - Expression text: a+=xxx+6
2014-06-21 12:48:42 TRACE CompoundStatement:50 - stmt in da block: xxx=yyy;
2014-06-21 12:48:42 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:48:42 TRACE Expression:39 - Token: '='
2014-06-21 12:48:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:48:42 TRACE Expression:41 - Expression text: xxx=yyy
2014-06-21 12:48:42 TRACE CompoundStatement:50 - stmt in da block: return(((a-7)*yyy)>tst);
2014-06-21 12:48:42 TRACE Expression:38 - Expression added: GT
2014-06-21 12:48:42 TRACE Expression:39 - Token: '>'
2014-06-21 12:48:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$33
2014-06-21 12:48:42 TRACE Expression:41 - Expression text: (((a-7)*yyy)>tst)
2014-06-21 12:48:42 TRACE Expression:243 - int_visitLdcInsn: 555
2014-06-21 12:48:42 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:48:42 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:48:42 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:48:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:48:42 TRACE Expression:41 - Expression text: tst
2014-06-21 12:48:42 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:48:42 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:48:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:48:42 TRACE Expression:41 - Expression text: 1
2014-06-21 12:48:42 TRACE IDExpressionType:63 - tst Test I
2014-06-21 12:48:42 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:48:42 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:48:42 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:48:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:48:42 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:48:42 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:48:42 TRACE Expression:39 - Token: '+'
2014-06-21 12:48:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:48:42 TRACE Expression:41 - Expression text: xxx+123
2014-06-21 12:48:42 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:48:42 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:48:42 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:48:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:48:42 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:48:42 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:48:42 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:48:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:48:42 TRACE Expression:41 - Expression text: 123
2014-06-21 12:48:42 TRACE IDExpressionType:63 - xxx Test I
2014-06-21 12:48:42 TRACE Expression:243 - int_visitLdcInsn: 123
2014-06-21 12:48:42 TRACE ClassMethod:102 - Compiling method Main w. args B. Is constructor: false
2014-06-21 12:48:42 TRACE Expression:243 - int_visitLdcInsn: 5
2014-06-21 12:48:42 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = a, index = 1
2014-06-21 12:48:42 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:48:42 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-21 12:48:42 TRACE ConstructorExpression:85 - t= I
2014-06-21 12:48:42 TRACE ConstructorExpression:86 - #args= 3
2014-06-21 12:48:42 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:48:42 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:48:42 TRACE Expression:243 - int_visitLdcInsn: 3
2014-06-21 12:48:42 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-21 12:48:42 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:48:42 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:48:42 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:48:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:48:42 TRACE Expression:41 - Expression text: 0
2014-06-21 12:48:42 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:48:42 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:48:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:48:42 TRACE Expression:41 - Expression text: 0
2014-06-21 12:48:42 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:48:42 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:48:42 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:48:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:48:42 TRACE Expression:41 - Expression text: 0
2014-06-21 12:48:42 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:48:42 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:48:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-21 12:48:42 TRACE Expression:41 - Expression text: testInt[0,0][0]
2014-06-21 12:48:42 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:48:42 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:48:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:48:42 TRACE Expression:41 - Expression text: 781
2014-06-21 12:48:42 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:48:42 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:48:42 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:48:42 TRACE Expression:243 - int_visitLdcInsn: 781
2014-06-21 12:48:42 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:48:42 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:48:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:48:42 TRACE Expression:41 - Expression text: a
2014-06-21 12:48:42 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:48:42 TRACE Expression:39 - Token: '+'
2014-06-21 12:48:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:48:42 TRACE Expression:41 - Expression text: xxx+6
2014-06-21 12:48:42 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:48:42 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:48:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:48:42 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:48:42 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:48:42 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:48:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:48:42 TRACE Expression:41 - Expression text: 6
2014-06-21 12:48:42 TRACE Expression:243 - int_visitLdcInsn: 6
2014-06-21 12:48:42 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:48:42 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:48:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:48:42 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:48:42 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:48:42 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:48:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:48:42 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:48:42 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:48:42 TRACE Expression:38 - Expression added: MUL
2014-06-21 12:48:42 TRACE Expression:39 - Token: '*'
2014-06-21 12:48:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 12:48:42 TRACE Expression:41 - Expression text: ((a-7)*yyy)
2014-06-21 12:48:42 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:48:42 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:48:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:48:42 TRACE Expression:41 - Expression text: tst
2014-06-21 12:48:42 TRACE Expression:38 - Expression added: MINUS
2014-06-21 12:48:42 TRACE Expression:39 - Token: '-'
2014-06-21 12:48:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$22
2014-06-21 12:48:42 TRACE Expression:41 - Expression text: (a-7)
2014-06-21 12:48:42 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:48:42 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:48:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:48:42 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:48:42 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:48:42 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:48:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:48:42 TRACE Expression:41 - Expression text: a
2014-06-21 12:48:42 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:48:42 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:48:42 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:48:42 TRACE Expression:41 - Expression text: 7
2014-06-21 12:48:42 TRACE Expression:243 - int_visitLdcInsn: 7
2014-06-21 12:48:42 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:48:42 TRACE IDExpressionType:63 - tst Test I
2014-06-21 12:48:42 INFO  CsCompiler:92 - tst = 555
2014-06-21 12:48:42 INFO  CsCompiler:92 - xxx = 1
2014-06-21 12:48:42 INFO  CsCompiler:92 - yyy = 556
2014-06-21 12:48:42 INFO  CsCompiler:92 - zzz = 680
2014-06-21 12:49:40 TRACE CsCompiler:46 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-21 12:49:40 TRACE CsCompiler:47 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-21 12:49:40 DEBUG CsCompiler:49 - Printing parse tree:
2014-06-21 12:49:40 DEBUG CsCompiler:50 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier boolean)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator (assign_and_modify_operator +=)) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression xxx))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) - (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 7))))))))))))))))) )))) * (unary_expression (postfix_expression (primary_expression yyy))))))))))))))) ))))))) (comparsion_operator >) (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))))))))))))))) )))))))))))))))) ;)) })) })
2014-06-21 12:49:41 INFO  CsCompiler:60 - Parse of Test.cs completed successfully
2014-06-21 12:49:41 INFO  CsCompiler:75 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticbooleanMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[0,0][0]=781;a+=xxx+6;xxx=yyy;return(((a-7)*yyy)>tst);}}
2014-06-21 12:49:41 INFO  CsCompiler:76 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@107,490:490='}',<40>,22:0]}
2014-06-21 12:49:41 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-21 12:49:41 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-21 12:49:41 TRACE ClassDef:53 - Class name: Test
2014-06-21 12:49:41 TRACE Variable:30 - Field/variable added: tst
2014-06-21 12:49:41 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:49:41 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:49:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:49:41 TRACE Expression:41 - Expression text: 555
2014-06-21 12:49:41 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:49:41 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:49:41 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:49:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:49:41 TRACE Expression:41 - Expression text: 1
2014-06-21 12:49:41 TRACE Variable:30 - Field/variable added: yyy
2014-06-21 12:49:41 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:49:41 TRACE Expression:39 - Token: '+'
2014-06-21 12:49:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:49:41 TRACE Expression:41 - Expression text: tst+1
2014-06-21 12:49:41 TRACE Variable:30 - Field/variable added: zzz
2014-06-21 12:49:41 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:49:41 TRACE Expression:39 - Token: '+'
2014-06-21 12:49:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:49:41 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-21 12:49:41 TRACE ClassMethod:39 - Method added: Main
2014-06-21 12:49:41 TRACE Variable:30 - Field/variable added: s
2014-06-21 12:49:41 TRACE CompoundStatement:34 - Decl in da block: inta=5;
2014-06-21 12:49:41 TRACE Variable:30 - Field/variable added: a
2014-06-21 12:49:41 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:49:41 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:49:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:49:41 TRACE Expression:41 - Expression text: 5
2014-06-21 12:49:41 TRACE CompoundStatement:34 - Decl in da block: intxxx=2;
2014-06-21 12:49:41 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:49:41 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:49:41 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:49:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:49:41 TRACE Expression:41 - Expression text: 2
2014-06-21 12:49:41 TRACE CompoundStatement:34 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-21 12:49:41 TRACE Variable:30 - Field/variable added: testInt
2014-06-21 12:49:41 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-21 12:49:41 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-21 12:49:41 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:49:41 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:49:41 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:49:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:49:41 TRACE Expression:41 - Expression text: 1
2014-06-21 12:49:41 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:49:41 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:49:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:49:41 TRACE Expression:41 - Expression text: 2
2014-06-21 12:49:41 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:49:41 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:49:41 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:49:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:49:41 TRACE Expression:41 - Expression text: 3
2014-06-21 12:49:41 TRACE Expression:38 - Expression added: NEW
2014-06-21 12:49:41 TRACE Expression:39 - Token: 'new'
2014-06-21 12:49:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-21 12:49:41 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-21 12:49:41 TRACE CompoundStatement:50 - stmt in da block: testInt[0,0][0]=781;
2014-06-21 12:49:41 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:49:41 TRACE Expression:39 - Token: '='
2014-06-21 12:49:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:49:41 TRACE Expression:41 - Expression text: testInt[0,0][0]=781
2014-06-21 12:49:41 TRACE CompoundStatement:50 - stmt in da block: a+=xxx+6;
2014-06-21 12:49:41 TRACE Expression:38 - Expression added: ADD_ASS
2014-06-21 12:49:41 TRACE Expression:39 - Token: '+='
2014-06-21 12:49:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$10
2014-06-21 12:49:41 TRACE Expression:41 - Expression text: a+=xxx+6
2014-06-21 12:49:41 TRACE CompoundStatement:50 - stmt in da block: xxx=yyy;
2014-06-21 12:49:41 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:49:41 TRACE Expression:39 - Token: '='
2014-06-21 12:49:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:49:41 TRACE Expression:41 - Expression text: xxx=yyy
2014-06-21 12:49:41 TRACE CompoundStatement:50 - stmt in da block: return(((a-7)*yyy)>tst);
2014-06-21 12:49:41 TRACE Expression:38 - Expression added: GT
2014-06-21 12:49:41 TRACE Expression:39 - Token: '>'
2014-06-21 12:49:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$33
2014-06-21 12:49:41 TRACE Expression:41 - Expression text: (((a-7)*yyy)>tst)
2014-06-21 12:49:41 TRACE Expression:243 - int_visitLdcInsn: 555
2014-06-21 12:49:41 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:49:41 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:49:41 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:49:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:49:41 TRACE Expression:41 - Expression text: tst
2014-06-21 12:49:41 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:49:41 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:49:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:49:41 TRACE Expression:41 - Expression text: 1
2014-06-21 12:49:41 TRACE IDExpressionType:63 - tst Test I
2014-06-21 12:49:41 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:49:41 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:49:41 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:49:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:49:41 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:49:41 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:49:41 TRACE Expression:39 - Token: '+'
2014-06-21 12:49:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:49:41 TRACE Expression:41 - Expression text: xxx+123
2014-06-21 12:49:41 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:49:41 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:49:41 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:49:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:49:41 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:49:41 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:49:41 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:49:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:49:41 TRACE Expression:41 - Expression text: 123
2014-06-21 12:49:41 TRACE IDExpressionType:63 - xxx Test I
2014-06-21 12:49:41 TRACE Expression:243 - int_visitLdcInsn: 123
2014-06-21 12:49:41 TRACE ClassMethod:102 - Compiling method Main w. args Z. Is constructor: false
2014-06-21 12:49:41 TRACE Expression:243 - int_visitLdcInsn: 5
2014-06-21 12:49:41 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = a, index = 1
2014-06-21 12:49:41 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:49:41 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-21 12:49:41 TRACE ConstructorExpression:85 - t= I
2014-06-21 12:49:41 TRACE ConstructorExpression:86 - #args= 3
2014-06-21 12:49:41 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:49:41 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:49:41 TRACE Expression:243 - int_visitLdcInsn: 3
2014-06-21 12:49:41 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-21 12:49:41 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:49:41 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:49:41 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:49:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:49:41 TRACE Expression:41 - Expression text: 0
2014-06-21 12:49:41 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:49:41 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:49:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:49:41 TRACE Expression:41 - Expression text: 0
2014-06-21 12:49:41 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:49:41 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:49:41 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:49:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:49:41 TRACE Expression:41 - Expression text: 0
2014-06-21 12:49:41 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:49:41 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:49:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-21 12:49:41 TRACE Expression:41 - Expression text: testInt[0,0][0]
2014-06-21 12:49:41 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:49:41 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:49:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:49:41 TRACE Expression:41 - Expression text: 781
2014-06-21 12:49:41 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:49:41 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:49:41 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:49:41 TRACE Expression:243 - int_visitLdcInsn: 781
2014-06-21 12:49:41 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:49:41 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:49:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:49:41 TRACE Expression:41 - Expression text: a
2014-06-21 12:49:41 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:49:41 TRACE Expression:39 - Token: '+'
2014-06-21 12:49:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:49:41 TRACE Expression:41 - Expression text: xxx+6
2014-06-21 12:49:41 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:49:41 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:49:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:49:41 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:49:41 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:49:41 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:49:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:49:41 TRACE Expression:41 - Expression text: 6
2014-06-21 12:49:41 TRACE Expression:243 - int_visitLdcInsn: 6
2014-06-21 12:49:41 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:49:41 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:49:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:49:41 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:49:41 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:49:41 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:49:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:49:41 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:49:41 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:49:41 TRACE Expression:38 - Expression added: MUL
2014-06-21 12:49:41 TRACE Expression:39 - Token: '*'
2014-06-21 12:49:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 12:49:41 TRACE Expression:41 - Expression text: ((a-7)*yyy)
2014-06-21 12:49:41 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:49:41 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:49:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:49:41 TRACE Expression:41 - Expression text: tst
2014-06-21 12:49:41 TRACE Expression:38 - Expression added: MINUS
2014-06-21 12:49:41 TRACE Expression:39 - Token: '-'
2014-06-21 12:49:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$22
2014-06-21 12:49:41 TRACE Expression:41 - Expression text: (a-7)
2014-06-21 12:49:41 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:49:41 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:49:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:49:41 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:49:41 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:49:41 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:49:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:49:41 TRACE Expression:41 - Expression text: a
2014-06-21 12:49:41 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:49:41 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:49:41 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:49:41 TRACE Expression:41 - Expression text: 7
2014-06-21 12:49:41 TRACE Expression:243 - int_visitLdcInsn: 7
2014-06-21 12:49:41 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:49:41 TRACE IDExpressionType:63 - tst Test I
2014-06-21 12:49:41 INFO  CsCompiler:92 - tst = 555
2014-06-21 12:49:41 INFO  CsCompiler:92 - xxx = 1
2014-06-21 12:49:41 INFO  CsCompiler:92 - yyy = 556
2014-06-21 12:49:41 INFO  CsCompiler:92 - zzz = 680
2014-06-21 12:50:08 TRACE CsCompiler:46 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-21 12:50:08 TRACE CsCompiler:47 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-21 12:50:08 DEBUG CsCompiler:49 - Printing parse tree:
2014-06-21 12:50:08 DEBUG CsCompiler:50 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier boolean)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator (assign_and_modify_operator +=)) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression xxx))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) - (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 7))))))))))))))))) )))) * (unary_expression (postfix_expression (primary_expression yyy))))))))))))))) ))))))) (comparsion_operator >) (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))))))))))))))) )))))))))))))))) ;)) })) })
2014-06-21 12:50:09 INFO  CsCompiler:60 - Parse of Test.cs completed successfully
2014-06-21 12:50:09 INFO  CsCompiler:75 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticbooleanMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[0,0][0]=781;a+=xxx+6;xxx=yyy;return(((a-7)*yyy)>tst);}}
2014-06-21 12:50:09 INFO  CsCompiler:76 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@107,490:490='}',<40>,22:0]}
2014-06-21 12:50:09 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-21 12:50:09 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-21 12:50:09 TRACE ClassDef:53 - Class name: Test
2014-06-21 12:50:09 TRACE Variable:30 - Field/variable added: tst
2014-06-21 12:50:09 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:50:09 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:50:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:50:09 TRACE Expression:41 - Expression text: 555
2014-06-21 12:50:09 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:50:09 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:50:09 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:50:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:50:09 TRACE Expression:41 - Expression text: 1
2014-06-21 12:50:09 TRACE Variable:30 - Field/variable added: yyy
2014-06-21 12:50:09 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:50:09 TRACE Expression:39 - Token: '+'
2014-06-21 12:50:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:50:09 TRACE Expression:41 - Expression text: tst+1
2014-06-21 12:50:09 TRACE Variable:30 - Field/variable added: zzz
2014-06-21 12:50:09 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:50:09 TRACE Expression:39 - Token: '+'
2014-06-21 12:50:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:50:09 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-21 12:50:09 TRACE ClassMethod:39 - Method added: Main
2014-06-21 12:50:09 TRACE Variable:30 - Field/variable added: s
2014-06-21 12:50:09 TRACE CompoundStatement:34 - Decl in da block: inta=5;
2014-06-21 12:50:09 TRACE Variable:30 - Field/variable added: a
2014-06-21 12:50:09 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:50:09 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:50:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:50:09 TRACE Expression:41 - Expression text: 5
2014-06-21 12:50:09 TRACE CompoundStatement:34 - Decl in da block: intxxx=2;
2014-06-21 12:50:09 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:50:09 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:50:09 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:50:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:50:09 TRACE Expression:41 - Expression text: 2
2014-06-21 12:50:09 TRACE CompoundStatement:34 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-21 12:50:09 TRACE Variable:30 - Field/variable added: testInt
2014-06-21 12:50:09 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-21 12:50:09 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-21 12:50:09 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:50:09 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:50:09 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:50:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:50:09 TRACE Expression:41 - Expression text: 1
2014-06-21 12:50:09 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:50:09 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:50:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:50:09 TRACE Expression:41 - Expression text: 2
2014-06-21 12:50:09 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:50:09 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:50:09 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:50:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:50:09 TRACE Expression:41 - Expression text: 3
2014-06-21 12:50:09 TRACE Expression:38 - Expression added: NEW
2014-06-21 12:50:09 TRACE Expression:39 - Token: 'new'
2014-06-21 12:50:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-21 12:50:09 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-21 12:50:09 TRACE CompoundStatement:50 - stmt in da block: testInt[0,0][0]=781;
2014-06-21 12:50:09 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:50:09 TRACE Expression:39 - Token: '='
2014-06-21 12:50:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:50:09 TRACE Expression:41 - Expression text: testInt[0,0][0]=781
2014-06-21 12:50:09 TRACE CompoundStatement:50 - stmt in da block: a+=xxx+6;
2014-06-21 12:50:09 TRACE Expression:38 - Expression added: ADD_ASS
2014-06-21 12:50:09 TRACE Expression:39 - Token: '+='
2014-06-21 12:50:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$10
2014-06-21 12:50:09 TRACE Expression:41 - Expression text: a+=xxx+6
2014-06-21 12:50:09 TRACE CompoundStatement:50 - stmt in da block: xxx=yyy;
2014-06-21 12:50:09 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:50:09 TRACE Expression:39 - Token: '='
2014-06-21 12:50:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:50:09 TRACE Expression:41 - Expression text: xxx=yyy
2014-06-21 12:50:09 TRACE CompoundStatement:50 - stmt in da block: return(((a-7)*yyy)>tst);
2014-06-21 12:50:09 TRACE Expression:38 - Expression added: GT
2014-06-21 12:50:09 TRACE Expression:39 - Token: '>'
2014-06-21 12:50:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$33
2014-06-21 12:50:09 TRACE Expression:41 - Expression text: (((a-7)*yyy)>tst)
2014-06-21 12:50:09 TRACE Expression:243 - int_visitLdcInsn: 555
2014-06-21 12:50:09 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:50:09 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:50:09 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:50:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:50:09 TRACE Expression:41 - Expression text: tst
2014-06-21 12:50:09 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:50:09 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:50:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:50:09 TRACE Expression:41 - Expression text: 1
2014-06-21 12:50:09 TRACE IDExpressionType:63 - tst Test I
2014-06-21 12:50:09 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:50:09 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:50:09 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:50:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:50:09 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:50:09 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:50:09 TRACE Expression:39 - Token: '+'
2014-06-21 12:50:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:50:09 TRACE Expression:41 - Expression text: xxx+123
2014-06-21 12:50:09 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:50:09 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:50:09 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:50:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:50:09 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:50:09 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:50:09 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:50:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:50:09 TRACE Expression:41 - Expression text: 123
2014-06-21 12:50:09 TRACE IDExpressionType:63 - xxx Test I
2014-06-21 12:50:09 TRACE Expression:243 - int_visitLdcInsn: 123
2014-06-21 12:50:09 TRACE ClassMethod:102 - Compiling method Main w. args Z. Is constructor: false
2014-06-21 12:50:09 TRACE Expression:243 - int_visitLdcInsn: 5
2014-06-21 12:50:09 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = a, index = 1
2014-06-21 12:50:09 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:50:09 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-21 12:50:09 TRACE ConstructorExpression:85 - t= I
2014-06-21 12:50:09 TRACE ConstructorExpression:86 - #args= 3
2014-06-21 12:50:09 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:50:09 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:50:09 TRACE Expression:243 - int_visitLdcInsn: 3
2014-06-21 12:50:09 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-21 12:50:09 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:50:09 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:50:09 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:50:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:50:09 TRACE Expression:41 - Expression text: 0
2014-06-21 12:50:09 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:50:09 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:50:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:50:09 TRACE Expression:41 - Expression text: 0
2014-06-21 12:50:09 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:50:09 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:50:09 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:50:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:50:09 TRACE Expression:41 - Expression text: 0
2014-06-21 12:50:09 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:50:09 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:50:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-21 12:50:09 TRACE Expression:41 - Expression text: testInt[0,0][0]
2014-06-21 12:50:09 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:50:09 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:50:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:50:09 TRACE Expression:41 - Expression text: 781
2014-06-21 12:50:09 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:50:09 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:50:09 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:50:09 TRACE Expression:243 - int_visitLdcInsn: 781
2014-06-21 12:50:09 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:50:09 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:50:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:50:09 TRACE Expression:41 - Expression text: a
2014-06-21 12:50:09 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:50:09 TRACE Expression:39 - Token: '+'
2014-06-21 12:50:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:50:09 TRACE Expression:41 - Expression text: xxx+6
2014-06-21 12:50:09 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:50:09 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:50:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:50:09 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:50:09 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:50:09 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:50:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:50:09 TRACE Expression:41 - Expression text: 6
2014-06-21 12:50:09 TRACE Expression:243 - int_visitLdcInsn: 6
2014-06-21 12:50:09 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:50:09 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:50:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:50:09 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:50:09 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:50:09 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:50:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:50:09 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:50:09 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:50:09 TRACE Expression:38 - Expression added: MUL
2014-06-21 12:50:09 TRACE Expression:39 - Token: '*'
2014-06-21 12:50:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 12:50:09 TRACE Expression:41 - Expression text: ((a-7)*yyy)
2014-06-21 12:50:09 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:50:09 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:50:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:50:09 TRACE Expression:41 - Expression text: tst
2014-06-21 12:50:09 TRACE Expression:38 - Expression added: MINUS
2014-06-21 12:50:09 TRACE Expression:39 - Token: '-'
2014-06-21 12:50:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$22
2014-06-21 12:50:09 TRACE Expression:41 - Expression text: (a-7)
2014-06-21 12:50:09 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:50:09 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:50:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:50:09 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:50:09 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:50:09 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:50:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:50:09 TRACE Expression:41 - Expression text: a
2014-06-21 12:50:09 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:50:09 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:50:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:50:09 TRACE Expression:41 - Expression text: 7
2014-06-21 12:50:09 TRACE Expression:243 - int_visitLdcInsn: 7
2014-06-21 12:50:09 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:50:09 TRACE IDExpressionType:63 - tst Test I
2014-06-21 12:50:09 INFO  CsCompiler:92 - tst = 555
2014-06-21 12:50:09 INFO  CsCompiler:92 - xxx = 1
2014-06-21 12:50:09 INFO  CsCompiler:92 - yyy = 556
2014-06-21 12:50:09 INFO  CsCompiler:92 - zzz = 680
2014-06-21 12:50:09 INFO  CsCompiler:100 - Main: true
2014-06-21 12:50:28 TRACE CsCompiler:46 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-21 12:50:28 TRACE CsCompiler:47 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-21 12:50:28 DEBUG CsCompiler:49 - Printing parse tree:
2014-06-21 12:50:28 DEBUG CsCompiler:50 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier boolean)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator (assign_and_modify_operator +=)) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression xxx))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) - (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 7))))))))))))))))) )))) * (unary_expression (postfix_expression (primary_expression yyy))))))))))))))) ))))))) (comparsion_operator >) (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))))))))))))))) )))))))))))))))) ;)) })) })
2014-06-21 12:50:29 INFO  CsCompiler:60 - Parse of Test.cs completed successfully
2014-06-21 12:50:29 INFO  CsCompiler:75 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticbooleanMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[0,0][0]=781;a+=xxx+6;xxx=yyy;return(((a-7)*yyy)>tst);}}
2014-06-21 12:50:29 INFO  CsCompiler:76 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@107,490:490='}',<40>,22:0]}
2014-06-21 12:50:29 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-21 12:50:29 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-21 12:50:29 TRACE ClassDef:53 - Class name: Test
2014-06-21 12:50:29 TRACE Variable:30 - Field/variable added: tst
2014-06-21 12:50:29 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:50:29 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:50:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:50:29 TRACE Expression:41 - Expression text: 555
2014-06-21 12:50:29 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:50:29 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:50:29 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:50:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:50:29 TRACE Expression:41 - Expression text: 1
2014-06-21 12:50:29 TRACE Variable:30 - Field/variable added: yyy
2014-06-21 12:50:29 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:50:29 TRACE Expression:39 - Token: '+'
2014-06-21 12:50:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:50:29 TRACE Expression:41 - Expression text: tst+1
2014-06-21 12:50:29 TRACE Variable:30 - Field/variable added: zzz
2014-06-21 12:50:29 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:50:29 TRACE Expression:39 - Token: '+'
2014-06-21 12:50:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:50:29 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-21 12:50:29 TRACE ClassMethod:39 - Method added: Main
2014-06-21 12:50:29 TRACE Variable:30 - Field/variable added: s
2014-06-21 12:50:29 TRACE CompoundStatement:34 - Decl in da block: inta=5;
2014-06-21 12:50:29 TRACE Variable:30 - Field/variable added: a
2014-06-21 12:50:29 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:50:29 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:50:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:50:29 TRACE Expression:41 - Expression text: 5
2014-06-21 12:50:29 TRACE CompoundStatement:34 - Decl in da block: intxxx=2;
2014-06-21 12:50:29 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:50:29 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:50:29 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:50:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:50:29 TRACE Expression:41 - Expression text: 2
2014-06-21 12:50:29 TRACE CompoundStatement:34 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-21 12:50:29 TRACE Variable:30 - Field/variable added: testInt
2014-06-21 12:50:29 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-21 12:50:29 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-21 12:50:29 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:50:29 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:50:29 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:50:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:50:29 TRACE Expression:41 - Expression text: 1
2014-06-21 12:50:29 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:50:29 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:50:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:50:29 TRACE Expression:41 - Expression text: 2
2014-06-21 12:50:29 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:50:29 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:50:29 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:50:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:50:29 TRACE Expression:41 - Expression text: 3
2014-06-21 12:50:29 TRACE Expression:38 - Expression added: NEW
2014-06-21 12:50:29 TRACE Expression:39 - Token: 'new'
2014-06-21 12:50:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-21 12:50:29 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-21 12:50:29 TRACE CompoundStatement:50 - stmt in da block: testInt[0,0][0]=781;
2014-06-21 12:50:29 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:50:29 TRACE Expression:39 - Token: '='
2014-06-21 12:50:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:50:29 TRACE Expression:41 - Expression text: testInt[0,0][0]=781
2014-06-21 12:50:29 TRACE CompoundStatement:50 - stmt in da block: a+=xxx+6;
2014-06-21 12:50:29 TRACE Expression:38 - Expression added: ADD_ASS
2014-06-21 12:50:29 TRACE Expression:39 - Token: '+='
2014-06-21 12:50:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$10
2014-06-21 12:50:29 TRACE Expression:41 - Expression text: a+=xxx+6
2014-06-21 12:50:29 TRACE CompoundStatement:50 - stmt in da block: xxx=yyy;
2014-06-21 12:50:29 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:50:29 TRACE Expression:39 - Token: '='
2014-06-21 12:50:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:50:29 TRACE Expression:41 - Expression text: xxx=yyy
2014-06-21 12:50:29 TRACE CompoundStatement:50 - stmt in da block: return(((a-7)*yyy)>tst);
2014-06-21 12:50:29 TRACE Expression:38 - Expression added: GT
2014-06-21 12:50:29 TRACE Expression:39 - Token: '>'
2014-06-21 12:50:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$33
2014-06-21 12:50:29 TRACE Expression:41 - Expression text: (((a-7)*yyy)>tst)
2014-06-21 12:50:29 TRACE Expression:243 - int_visitLdcInsn: 555
2014-06-21 12:50:29 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:50:29 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:50:29 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:50:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:50:29 TRACE Expression:41 - Expression text: tst
2014-06-21 12:50:29 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:50:29 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:50:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:50:29 TRACE Expression:41 - Expression text: 1
2014-06-21 12:50:29 TRACE IDExpressionType:63 - tst Test I
2014-06-21 12:50:29 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:50:29 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:50:29 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:50:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:50:29 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:50:29 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:50:29 TRACE Expression:39 - Token: '+'
2014-06-21 12:50:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:50:29 TRACE Expression:41 - Expression text: xxx+123
2014-06-21 12:50:29 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:50:29 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:50:29 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:50:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:50:29 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:50:29 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:50:29 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:50:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:50:29 TRACE Expression:41 - Expression text: 123
2014-06-21 12:50:29 TRACE IDExpressionType:63 - xxx Test I
2014-06-21 12:50:29 TRACE Expression:243 - int_visitLdcInsn: 123
2014-06-21 12:50:29 TRACE ClassMethod:102 - Compiling method Main w. args Z. Is constructor: false
2014-06-21 12:50:29 TRACE Expression:243 - int_visitLdcInsn: 5
2014-06-21 12:50:29 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = a, index = 1
2014-06-21 12:50:29 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:50:29 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-21 12:50:29 TRACE ConstructorExpression:85 - t= I
2014-06-21 12:50:29 TRACE ConstructorExpression:86 - #args= 3
2014-06-21 12:50:29 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:50:29 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:50:29 TRACE Expression:243 - int_visitLdcInsn: 3
2014-06-21 12:50:29 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-21 12:50:29 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:50:29 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:50:29 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:50:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:50:29 TRACE Expression:41 - Expression text: 0
2014-06-21 12:50:29 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:50:29 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:50:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:50:29 TRACE Expression:41 - Expression text: 0
2014-06-21 12:50:29 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:50:29 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:50:29 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:50:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:50:29 TRACE Expression:41 - Expression text: 0
2014-06-21 12:50:29 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:50:29 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:50:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-21 12:50:29 TRACE Expression:41 - Expression text: testInt[0,0][0]
2014-06-21 12:50:29 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:50:29 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:50:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:50:29 TRACE Expression:41 - Expression text: 781
2014-06-21 12:50:29 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:50:29 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:50:29 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:50:29 TRACE Expression:243 - int_visitLdcInsn: 781
2014-06-21 12:50:29 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:50:29 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:50:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:50:29 TRACE Expression:41 - Expression text: a
2014-06-21 12:50:29 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:50:29 TRACE Expression:39 - Token: '+'
2014-06-21 12:50:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:50:29 TRACE Expression:41 - Expression text: xxx+6
2014-06-21 12:50:29 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:50:29 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:50:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:50:29 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:50:29 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:50:29 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:50:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:50:29 TRACE Expression:41 - Expression text: 6
2014-06-21 12:50:29 TRACE Expression:243 - int_visitLdcInsn: 6
2014-06-21 12:50:29 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:50:29 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:50:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:50:29 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:50:29 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:50:29 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:50:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:50:29 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:50:29 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:50:29 TRACE Expression:38 - Expression added: MUL
2014-06-21 12:50:29 TRACE Expression:39 - Token: '*'
2014-06-21 12:50:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 12:50:29 TRACE Expression:41 - Expression text: ((a-7)*yyy)
2014-06-21 12:50:29 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:50:29 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:50:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:50:29 TRACE Expression:41 - Expression text: tst
2014-06-21 12:50:29 TRACE Expression:38 - Expression added: MINUS
2014-06-21 12:50:29 TRACE Expression:39 - Token: '-'
2014-06-21 12:50:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$22
2014-06-21 12:50:29 TRACE Expression:41 - Expression text: (a-7)
2014-06-21 12:50:29 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:50:29 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:50:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:50:29 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:50:29 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:50:29 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:50:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:50:29 TRACE Expression:41 - Expression text: a
2014-06-21 12:50:29 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:50:29 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:50:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:50:29 TRACE Expression:41 - Expression text: 7
2014-06-21 12:50:29 TRACE Expression:243 - int_visitLdcInsn: 7
2014-06-21 12:50:29 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:50:29 TRACE IDExpressionType:63 - tst Test I
2014-06-21 12:50:29 INFO  CsCompiler:92 - tst = 555
2014-06-21 12:50:29 INFO  CsCompiler:92 - xxx = 1
2014-06-21 12:50:29 INFO  CsCompiler:92 - yyy = 556
2014-06-21 12:50:29 INFO  CsCompiler:92 - zzz = 680
2014-06-21 12:50:29 INFO  CsCompiler:100 - Main: true
2014-06-21 12:51:07 TRACE CsCompiler:46 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-21 12:51:07 TRACE CsCompiler:47 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-21 12:51:07 DEBUG CsCompiler:49 - Printing parse tree:
2014-06-21 12:51:07 DEBUG CsCompiler:50 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier boolean)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator (assign_and_modify_operator +=)) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression xxx))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))))))))))))))) ;)) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression a)))) - (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 7))))))))))))))))) )))) * (unary_expression (postfix_expression (primary_expression yyy))))))))))))))) ))))))) (comparsion_operator >) (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))))))))))))))) )))))))) (equality_operator ==) (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))))) (comparsion_operator <) (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))) ))))))))))))))))) ;)) })) })
2014-06-21 12:51:09 INFO  CsCompiler:60 - Parse of Test.cs completed successfully
2014-06-21 12:51:09 INFO  CsCompiler:75 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticbooleanMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[0,0][0]=781;a+=xxx+6;xxx=yyy;return(((a-7)*yyy)>tst)==(tst<1);}}
2014-06-21 12:51:09 INFO  CsCompiler:76 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@113,503:503='}',<40>,22:0]}
2014-06-21 12:51:09 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-21 12:51:09 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-21 12:51:09 TRACE ClassDef:53 - Class name: Test
2014-06-21 12:51:09 TRACE Variable:30 - Field/variable added: tst
2014-06-21 12:51:09 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:51:09 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:51:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:51:09 TRACE Expression:41 - Expression text: 555
2014-06-21 12:51:09 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:51:09 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:51:09 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:51:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:51:09 TRACE Expression:41 - Expression text: 1
2014-06-21 12:51:09 TRACE Variable:30 - Field/variable added: yyy
2014-06-21 12:51:09 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:51:09 TRACE Expression:39 - Token: '+'
2014-06-21 12:51:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:51:09 TRACE Expression:41 - Expression text: tst+1
2014-06-21 12:51:09 TRACE Variable:30 - Field/variable added: zzz
2014-06-21 12:51:09 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:51:09 TRACE Expression:39 - Token: '+'
2014-06-21 12:51:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:51:09 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-21 12:51:09 TRACE ClassMethod:39 - Method added: Main
2014-06-21 12:51:09 TRACE Variable:30 - Field/variable added: s
2014-06-21 12:51:09 TRACE CompoundStatement:34 - Decl in da block: inta=5;
2014-06-21 12:51:09 TRACE Variable:30 - Field/variable added: a
2014-06-21 12:51:09 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:51:09 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:51:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:51:09 TRACE Expression:41 - Expression text: 5
2014-06-21 12:51:09 TRACE CompoundStatement:34 - Decl in da block: intxxx=2;
2014-06-21 12:51:09 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:51:09 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:51:09 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:51:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:51:09 TRACE Expression:41 - Expression text: 2
2014-06-21 12:51:09 TRACE CompoundStatement:34 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-21 12:51:09 TRACE Variable:30 - Field/variable added: testInt
2014-06-21 12:51:09 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-21 12:51:09 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-21 12:51:09 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:51:09 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:51:09 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:51:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:51:09 TRACE Expression:41 - Expression text: 1
2014-06-21 12:51:09 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:51:09 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:51:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:51:09 TRACE Expression:41 - Expression text: 2
2014-06-21 12:51:09 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:51:09 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:51:09 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:51:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:51:09 TRACE Expression:41 - Expression text: 3
2014-06-21 12:51:09 TRACE Expression:38 - Expression added: NEW
2014-06-21 12:51:09 TRACE Expression:39 - Token: 'new'
2014-06-21 12:51:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-21 12:51:09 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-21 12:51:09 TRACE CompoundStatement:50 - stmt in da block: testInt[0,0][0]=781;
2014-06-21 12:51:09 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:51:09 TRACE Expression:39 - Token: '='
2014-06-21 12:51:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:51:09 TRACE Expression:41 - Expression text: testInt[0,0][0]=781
2014-06-21 12:51:09 TRACE CompoundStatement:50 - stmt in da block: a+=xxx+6;
2014-06-21 12:51:09 TRACE Expression:38 - Expression added: ADD_ASS
2014-06-21 12:51:09 TRACE Expression:39 - Token: '+='
2014-06-21 12:51:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$10
2014-06-21 12:51:09 TRACE Expression:41 - Expression text: a+=xxx+6
2014-06-21 12:51:09 TRACE CompoundStatement:50 - stmt in da block: xxx=yyy;
2014-06-21 12:51:09 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:51:09 TRACE Expression:39 - Token: '='
2014-06-21 12:51:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:51:09 TRACE Expression:41 - Expression text: xxx=yyy
2014-06-21 12:51:09 TRACE CompoundStatement:50 - stmt in da block: return(((a-7)*yyy)>tst)==(tst<1);
2014-06-21 12:51:09 TRACE Expression:38 - Expression added: EQ
2014-06-21 12:51:09 TRACE Expression:39 - Token: '=='
2014-06-21 12:51:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$29
2014-06-21 12:51:09 TRACE Expression:41 - Expression text: (((a-7)*yyy)>tst)==(tst<1)
2014-06-21 12:51:09 TRACE Expression:243 - int_visitLdcInsn: 555
2014-06-21 12:51:09 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:51:09 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:51:09 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:51:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:51:09 TRACE Expression:41 - Expression text: tst
2014-06-21 12:51:09 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:51:09 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:51:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:51:09 TRACE Expression:41 - Expression text: 1
2014-06-21 12:51:09 TRACE IDExpressionType:63 - tst Test I
2014-06-21 12:51:09 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:51:09 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:51:09 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:51:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:51:09 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:51:09 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:51:09 TRACE Expression:39 - Token: '+'
2014-06-21 12:51:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:51:09 TRACE Expression:41 - Expression text: xxx+123
2014-06-21 12:51:09 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:51:09 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:51:09 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:51:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:51:09 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:51:09 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:51:09 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:51:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:51:09 TRACE Expression:41 - Expression text: 123
2014-06-21 12:51:09 TRACE IDExpressionType:63 - xxx Test I
2014-06-21 12:51:09 TRACE Expression:243 - int_visitLdcInsn: 123
2014-06-21 12:51:09 TRACE ClassMethod:102 - Compiling method Main w. args Z. Is constructor: false
2014-06-21 12:51:09 TRACE Expression:243 - int_visitLdcInsn: 5
2014-06-21 12:51:09 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = a, index = 1
2014-06-21 12:51:09 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:51:09 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-21 12:51:09 TRACE ConstructorExpression:85 - t= I
2014-06-21 12:51:09 TRACE ConstructorExpression:86 - #args= 3
2014-06-21 12:51:09 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:51:09 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:51:09 TRACE Expression:243 - int_visitLdcInsn: 3
2014-06-21 12:51:09 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-21 12:51:09 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:51:09 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:51:09 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:51:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:51:09 TRACE Expression:41 - Expression text: 0
2014-06-21 12:51:09 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:51:09 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:51:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:51:09 TRACE Expression:41 - Expression text: 0
2014-06-21 12:51:09 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:51:09 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:51:09 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:51:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:51:09 TRACE Expression:41 - Expression text: 0
2014-06-21 12:51:09 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:51:09 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:51:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-21 12:51:09 TRACE Expression:41 - Expression text: testInt[0,0][0]
2014-06-21 12:51:09 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:51:09 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:51:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:51:09 TRACE Expression:41 - Expression text: 781
2014-06-21 12:51:09 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:51:09 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:51:09 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:51:09 TRACE Expression:243 - int_visitLdcInsn: 781
2014-06-21 12:51:09 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:51:09 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:51:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:51:09 TRACE Expression:41 - Expression text: a
2014-06-21 12:51:09 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:51:09 TRACE Expression:39 - Token: '+'
2014-06-21 12:51:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:51:09 TRACE Expression:41 - Expression text: xxx+6
2014-06-21 12:51:09 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:51:09 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:51:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:51:09 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:51:09 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:51:09 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:51:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:51:09 TRACE Expression:41 - Expression text: 6
2014-06-21 12:51:09 TRACE Expression:243 - int_visitLdcInsn: 6
2014-06-21 12:51:09 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:51:09 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:51:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:51:09 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:51:09 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:51:09 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:51:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:51:09 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:51:09 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:51:09 TRACE Expression:38 - Expression added: GT
2014-06-21 12:51:09 TRACE Expression:39 - Token: '>'
2014-06-21 12:51:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$33
2014-06-21 12:51:09 TRACE Expression:41 - Expression text: (((a-7)*yyy)>tst)
2014-06-21 12:51:09 TRACE Expression:38 - Expression added: LT
2014-06-21 12:51:09 TRACE Expression:39 - Token: '<'
2014-06-21 12:51:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$31
2014-06-21 12:51:09 TRACE Expression:41 - Expression text: (tst<1)
2014-06-21 12:51:09 TRACE Expression:38 - Expression added: MUL
2014-06-21 12:51:09 TRACE Expression:39 - Token: '*'
2014-06-21 12:51:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 12:51:09 TRACE Expression:41 - Expression text: ((a-7)*yyy)
2014-06-21 12:51:09 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:51:09 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:51:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:51:09 TRACE Expression:41 - Expression text: tst
2014-06-21 12:51:09 TRACE Expression:38 - Expression added: MINUS
2014-06-21 12:51:09 TRACE Expression:39 - Token: '-'
2014-06-21 12:51:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$22
2014-06-21 12:51:09 TRACE Expression:41 - Expression text: (a-7)
2014-06-21 12:51:09 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:51:09 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:51:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:51:09 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:51:09 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:51:09 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:51:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:51:09 TRACE Expression:41 - Expression text: a
2014-06-21 12:51:09 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:51:09 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:51:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:51:09 TRACE Expression:41 - Expression text: 7
2014-06-21 12:51:09 TRACE Expression:243 - int_visitLdcInsn: 7
2014-06-21 12:51:09 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:51:09 TRACE IDExpressionType:63 - tst Test I
2014-06-21 12:51:09 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:51:09 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:51:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:51:09 TRACE Expression:41 - Expression text: tst
2014-06-21 12:51:09 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:51:09 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:51:09 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:51:09 TRACE Expression:41 - Expression text: 1
2014-06-21 12:51:09 TRACE IDExpressionType:63 - tst Test I
2014-06-21 12:51:09 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:51:09 INFO  CsCompiler:92 - tst = 555
2014-06-21 12:51:09 INFO  CsCompiler:92 - xxx = 1
2014-06-21 12:51:09 INFO  CsCompiler:92 - yyy = 556
2014-06-21 12:51:09 INFO  CsCompiler:92 - zzz = 680
2014-06-21 12:51:09 INFO  CsCompiler:100 - Main: false
2014-06-21 12:52:15 TRACE CsCompiler:46 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-21 12:52:15 TRACE CsCompiler:47 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-21 12:52:15 DEBUG CsCompiler:49 - Printing parse tree:
2014-06-21 12:52:15 DEBUG CsCompiler:50 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier boolean)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator (assign_and_modify_operator +=)) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression xxx))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))))))))))))))) ;)) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator b (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator v (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression b)))))))))))))))) ])))))))))))))))))) ;) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression v))))))) (equality_operator ==) (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) })) })
2014-06-21 12:52:16 INFO  CsCompiler:60 - Parse of Test.cs completed successfully
2014-06-21 12:52:16 INFO  CsCompiler:75 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticbooleanMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[0,0][0]=781;a+=xxx+6;xxx=yyy;intb=0;intv=testInt[0][0][b];returnv==781;}}
2014-06-21 12:52:16 INFO  CsCompiler:76 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@116,580:580='}',<40>,25:0]}
2014-06-21 12:52:16 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-21 12:52:16 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-21 12:52:16 TRACE ClassDef:53 - Class name: Test
2014-06-21 12:52:16 TRACE Variable:30 - Field/variable added: tst
2014-06-21 12:52:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:52:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:52:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:52:16 TRACE Expression:41 - Expression text: 555
2014-06-21 12:52:16 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:52:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:52:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:52:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:52:16 TRACE Expression:41 - Expression text: 1
2014-06-21 12:52:16 TRACE Variable:30 - Field/variable added: yyy
2014-06-21 12:52:16 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:52:16 TRACE Expression:39 - Token: '+'
2014-06-21 12:52:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:52:16 TRACE Expression:41 - Expression text: tst+1
2014-06-21 12:52:16 TRACE Variable:30 - Field/variable added: zzz
2014-06-21 12:52:16 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:52:16 TRACE Expression:39 - Token: '+'
2014-06-21 12:52:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:52:16 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-21 12:52:16 TRACE ClassMethod:39 - Method added: Main
2014-06-21 12:52:16 TRACE Variable:30 - Field/variable added: s
2014-06-21 12:52:16 TRACE CompoundStatement:34 - Decl in da block: inta=5;
2014-06-21 12:52:16 TRACE Variable:30 - Field/variable added: a
2014-06-21 12:52:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:52:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:52:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:52:16 TRACE Expression:41 - Expression text: 5
2014-06-21 12:52:16 TRACE CompoundStatement:34 - Decl in da block: intxxx=2;
2014-06-21 12:52:16 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:52:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:52:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:52:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:52:16 TRACE Expression:41 - Expression text: 2
2014-06-21 12:52:16 TRACE CompoundStatement:34 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-21 12:52:16 TRACE Variable:30 - Field/variable added: testInt
2014-06-21 12:52:16 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-21 12:52:16 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-21 12:52:16 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:52:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:52:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:52:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:52:16 TRACE Expression:41 - Expression text: 1
2014-06-21 12:52:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:52:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:52:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:52:16 TRACE Expression:41 - Expression text: 2
2014-06-21 12:52:16 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:52:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:52:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:52:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:52:16 TRACE Expression:41 - Expression text: 3
2014-06-21 12:52:16 TRACE Expression:38 - Expression added: NEW
2014-06-21 12:52:16 TRACE Expression:39 - Token: 'new'
2014-06-21 12:52:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-21 12:52:16 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-21 12:52:16 TRACE CompoundStatement:50 - stmt in da block: testInt[0,0][0]=781;
2014-06-21 12:52:16 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:52:16 TRACE Expression:39 - Token: '='
2014-06-21 12:52:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:52:16 TRACE Expression:41 - Expression text: testInt[0,0][0]=781
2014-06-21 12:52:16 TRACE CompoundStatement:50 - stmt in da block: a+=xxx+6;
2014-06-21 12:52:16 TRACE Expression:38 - Expression added: ADD_ASS
2014-06-21 12:52:16 TRACE Expression:39 - Token: '+='
2014-06-21 12:52:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$10
2014-06-21 12:52:16 TRACE Expression:41 - Expression text: a+=xxx+6
2014-06-21 12:52:16 TRACE CompoundStatement:50 - stmt in da block: xxx=yyy;
2014-06-21 12:52:16 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:52:16 TRACE Expression:39 - Token: '='
2014-06-21 12:52:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:52:16 TRACE Expression:41 - Expression text: xxx=yyy
2014-06-21 12:52:16 TRACE CompoundStatement:34 - Decl in da block: intb=0;
2014-06-21 12:52:16 TRACE Variable:30 - Field/variable added: b
2014-06-21 12:52:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:52:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:52:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:52:16 TRACE Expression:41 - Expression text: 0
2014-06-21 12:52:16 TRACE CompoundStatement:34 - Decl in da block: intv=testInt[0][0][b];
2014-06-21 12:52:16 TRACE Variable:30 - Field/variable added: v
2014-06-21 12:52:16 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:52:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:52:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:52:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:52:16 TRACE Expression:41 - Expression text: 0
2014-06-21 12:52:16 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:52:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:52:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:52:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:52:16 TRACE Expression:41 - Expression text: 0
2014-06-21 12:52:16 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:52:16 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:52:16 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:52:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:52:16 TRACE Expression:41 - Expression text: b
2014-06-21 12:52:16 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:52:16 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:52:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-21 12:52:16 TRACE Expression:41 - Expression text: testInt[0][0][b]
2014-06-21 12:52:16 TRACE CompoundStatement:50 - stmt in da block: returnv==781;
2014-06-21 12:52:16 TRACE Expression:38 - Expression added: EQ
2014-06-21 12:52:16 TRACE Expression:39 - Token: '=='
2014-06-21 12:52:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$29
2014-06-21 12:52:16 TRACE Expression:41 - Expression text: v==781
2014-06-21 12:52:16 TRACE Expression:243 - int_visitLdcInsn: 555
2014-06-21 12:52:16 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:52:16 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:52:16 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:52:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:52:16 TRACE Expression:41 - Expression text: tst
2014-06-21 12:52:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:52:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:52:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:52:16 TRACE Expression:41 - Expression text: 1
2014-06-21 12:52:16 TRACE IDExpressionType:63 - tst Test I
2014-06-21 12:52:16 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:52:16 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:52:16 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:52:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:52:16 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:52:16 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:52:16 TRACE Expression:39 - Token: '+'
2014-06-21 12:52:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:52:16 TRACE Expression:41 - Expression text: xxx+123
2014-06-21 12:52:16 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:52:16 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:52:16 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:52:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:52:16 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:52:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:52:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:52:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:52:16 TRACE Expression:41 - Expression text: 123
2014-06-21 12:52:16 TRACE IDExpressionType:63 - xxx Test I
2014-06-21 12:52:16 TRACE Expression:243 - int_visitLdcInsn: 123
2014-06-21 12:52:16 TRACE ClassMethod:102 - Compiling method Main w. args Z. Is constructor: false
2014-06-21 12:52:16 TRACE Expression:243 - int_visitLdcInsn: 5
2014-06-21 12:52:16 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = a, index = 1
2014-06-21 12:52:16 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:52:16 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-21 12:52:16 TRACE ConstructorExpression:85 - t= I
2014-06-21 12:52:16 TRACE ConstructorExpression:86 - #args= 3
2014-06-21 12:52:16 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:52:16 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:52:16 TRACE Expression:243 - int_visitLdcInsn: 3
2014-06-21 12:52:16 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-21 12:52:16 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:52:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:52:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:52:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:52:16 TRACE Expression:41 - Expression text: 0
2014-06-21 12:52:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:52:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:52:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:52:16 TRACE Expression:41 - Expression text: 0
2014-06-21 12:52:16 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:52:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:52:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:52:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:52:16 TRACE Expression:41 - Expression text: 0
2014-06-21 12:52:16 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:52:16 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:52:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-21 12:52:16 TRACE Expression:41 - Expression text: testInt[0,0][0]
2014-06-21 12:52:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:52:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:52:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:52:16 TRACE Expression:41 - Expression text: 781
2014-06-21 12:52:16 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:52:16 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:52:16 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:52:16 TRACE Expression:243 - int_visitLdcInsn: 781
2014-06-21 12:52:16 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:52:16 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:52:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:52:16 TRACE Expression:41 - Expression text: a
2014-06-21 12:52:16 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:52:16 TRACE Expression:39 - Token: '+'
2014-06-21 12:52:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:52:16 TRACE Expression:41 - Expression text: xxx+6
2014-06-21 12:52:16 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:52:16 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:52:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:52:16 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:52:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:52:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:52:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:52:16 TRACE Expression:41 - Expression text: 6
2014-06-21 12:52:16 TRACE Expression:243 - int_visitLdcInsn: 6
2014-06-21 12:52:16 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:52:16 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:52:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:52:16 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:52:16 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:52:16 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:52:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:52:16 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:52:16 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:52:16 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:52:16 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = b, index = 4
2014-06-21 12:52:16 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:52:16 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:52:16 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = v, index = 5
2014-06-21 12:52:16 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:52:16 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:52:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:52:16 TRACE Expression:41 - Expression text: v
2014-06-21 12:52:16 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:52:16 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:52:16 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:52:16 TRACE Expression:41 - Expression text: 781
2014-06-21 12:52:16 TRACE Expression:243 - int_visitLdcInsn: 781
2014-06-21 12:52:16 INFO  CsCompiler:92 - tst = 555
2014-06-21 12:52:16 INFO  CsCompiler:92 - xxx = 1
2014-06-21 12:52:16 INFO  CsCompiler:92 - yyy = 556
2014-06-21 12:52:16 INFO  CsCompiler:92 - zzz = 680
2014-06-21 12:52:16 INFO  CsCompiler:100 - Main: true
2014-06-21 12:53:10 TRACE CsCompiler:46 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-21 12:53:10 TRACE CsCompiler:47 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-21 12:53:10 DEBUG CsCompiler:49 - Printing parse tree:
2014-06-21 12:53:10 DEBUG CsCompiler:50 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier boolean)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator (assign_and_modify_operator +=)) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression xxx))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))))))))))))))) ;)) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator b (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator v (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))) * (unary_expression (postfix_expression (primary_expression b)))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression b))) * (unary_expression (postfix_expression (primary_expression b)))) - (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression b))) / (unary_expression (postfix_expression (primary_expression b))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression b)))))))))))))))) ])))))))))))))))))) ;) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression v))))))) (equality_operator ==) (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) })) })
2014-06-21 12:53:12 INFO  CsCompiler:60 - Parse of Test.cs completed successfully
2014-06-21 12:53:12 INFO  CsCompiler:75 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticbooleanMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[0,0][0]=781;a+=xxx+6;xxx=yyy;intb=0;intv=testInt[2*b][b*b-b/b][b];returnv==781;}}
2014-06-21 12:53:12 INFO  CsCompiler:76 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@124,596:596='}',<40>,25:0]}
2014-06-21 12:53:12 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-21 12:53:12 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-21 12:53:12 TRACE ClassDef:53 - Class name: Test
2014-06-21 12:53:12 TRACE Variable:30 - Field/variable added: tst
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:12 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: 555
2014-06-21 12:53:12 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:12 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: 1
2014-06-21 12:53:12 TRACE Variable:30 - Field/variable added: yyy
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:53:12 TRACE Expression:39 - Token: '+'
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: tst+1
2014-06-21 12:53:12 TRACE Variable:30 - Field/variable added: zzz
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:53:12 TRACE Expression:39 - Token: '+'
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-21 12:53:12 TRACE ClassMethod:39 - Method added: Main
2014-06-21 12:53:12 TRACE Variable:30 - Field/variable added: s
2014-06-21 12:53:12 TRACE CompoundStatement:34 - Decl in da block: inta=5;
2014-06-21 12:53:12 TRACE Variable:30 - Field/variable added: a
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:12 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: 5
2014-06-21 12:53:12 TRACE CompoundStatement:34 - Decl in da block: intxxx=2;
2014-06-21 12:53:12 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:12 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: 2
2014-06-21 12:53:12 TRACE CompoundStatement:34 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-21 12:53:12 TRACE Variable:30 - Field/variable added: testInt
2014-06-21 12:53:12 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-21 12:53:12 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-21 12:53:12 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:12 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: 1
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:12 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: 2
2014-06-21 12:53:12 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:12 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: 3
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: NEW
2014-06-21 12:53:12 TRACE Expression:39 - Token: 'new'
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-21 12:53:12 TRACE CompoundStatement:50 - stmt in da block: testInt[0,0][0]=781;
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:53:12 TRACE Expression:39 - Token: '='
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: testInt[0,0][0]=781
2014-06-21 12:53:12 TRACE CompoundStatement:50 - stmt in da block: a+=xxx+6;
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: ADD_ASS
2014-06-21 12:53:12 TRACE Expression:39 - Token: '+='
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$10
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: a+=xxx+6
2014-06-21 12:53:12 TRACE CompoundStatement:50 - stmt in da block: xxx=yyy;
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:53:12 TRACE Expression:39 - Token: '='
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: xxx=yyy
2014-06-21 12:53:12 TRACE CompoundStatement:34 - Decl in da block: intb=0;
2014-06-21 12:53:12 TRACE Variable:30 - Field/variable added: b
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:12 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: 0
2014-06-21 12:53:12 TRACE CompoundStatement:34 - Decl in da block: intv=testInt[2*b][b*b-b/b][b];
2014-06-21 12:53:12 TRACE Variable:30 - Field/variable added: v
2014-06-21 12:53:12 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: MUL
2014-06-21 12:53:12 TRACE Expression:39 - Token: '*'
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: 2*b
2014-06-21 12:53:12 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: MINUS
2014-06-21 12:53:12 TRACE Expression:39 - Token: '-'
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$22
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: b*b-b/b
2014-06-21 12:53:12 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:12 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: b
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:12 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: testInt[2*b][b*b-b/b][b]
2014-06-21 12:53:12 TRACE CompoundStatement:50 - stmt in da block: returnv==781;
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: EQ
2014-06-21 12:53:12 TRACE Expression:39 - Token: '=='
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$29
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: v==781
2014-06-21 12:53:12 TRACE Expression:243 - int_visitLdcInsn: 555
2014-06-21 12:53:12 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:12 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: tst
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:12 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: 1
2014-06-21 12:53:12 TRACE IDExpressionType:63 - tst Test I
2014-06-21 12:53:12 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:12 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:53:12 TRACE Expression:39 - Token: '+'
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: xxx+123
2014-06-21 12:53:12 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:12 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:12 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: 123
2014-06-21 12:53:12 TRACE IDExpressionType:63 - xxx Test I
2014-06-21 12:53:12 TRACE Expression:243 - int_visitLdcInsn: 123
2014-06-21 12:53:12 TRACE ClassMethod:102 - Compiling method Main w. args Z. Is constructor: false
2014-06-21 12:53:12 TRACE Expression:243 - int_visitLdcInsn: 5
2014-06-21 12:53:12 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = a, index = 1
2014-06-21 12:53:12 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:53:12 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-21 12:53:12 TRACE ConstructorExpression:85 - t= I
2014-06-21 12:53:12 TRACE ConstructorExpression:86 - #args= 3
2014-06-21 12:53:12 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:53:12 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:53:12 TRACE Expression:243 - int_visitLdcInsn: 3
2014-06-21 12:53:12 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-21 12:53:12 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:12 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: 0
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:12 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: 0
2014-06-21 12:53:12 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:12 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: 0
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:12 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: testInt[0,0][0]
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:12 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: 781
2014-06-21 12:53:12 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:53:12 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:53:12 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:53:12 TRACE Expression:243 - int_visitLdcInsn: 781
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:12 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: a
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:53:12 TRACE Expression:39 - Token: '+'
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: xxx+6
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:12 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:12 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: 6
2014-06-21 12:53:12 TRACE Expression:243 - int_visitLdcInsn: 6
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:12 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:12 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:53:12 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:53:12 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:53:12 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = b, index = 4
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:12 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: 2
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:12 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: b
2014-06-21 12:53:12 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: MUL
2014-06-21 12:53:12 TRACE Expression:39 - Token: '*'
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: b*b
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: DIV
2014-06-21 12:53:12 TRACE Expression:39 - Token: '/'
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$24
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: b/b
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:12 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: b
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:12 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: b
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:12 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: b
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:12 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: b
2014-06-21 12:53:12 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = v, index = 5
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:12 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: v
2014-06-21 12:53:12 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:12 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:12 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:12 TRACE Expression:41 - Expression text: 781
2014-06-21 12:53:12 TRACE Expression:243 - int_visitLdcInsn: 781
2014-06-21 12:53:12 INFO  CsCompiler:92 - tst = 555
2014-06-21 12:53:12 INFO  CsCompiler:92 - xxx = 1
2014-06-21 12:53:12 INFO  CsCompiler:92 - yyy = 556
2014-06-21 12:53:12 INFO  CsCompiler:92 - zzz = 680
2014-06-21 12:53:27 TRACE CsCompiler:46 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-21 12:53:27 TRACE CsCompiler:47 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-21 12:53:27 DEBUG CsCompiler:49 - Printing parse tree:
2014-06-21 12:53:27 DEBUG CsCompiler:50 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier boolean)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator (assign_and_modify_operator +=)) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression xxx))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))))))))))))))) ;)) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator b (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator v (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))) * (unary_expression (postfix_expression (primary_expression b)))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression b))) * (unary_expression (postfix_expression (primary_expression b)))) - (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression b)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression b)))))))))))))))) )))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression b)))))))))))))))) ])))))))))))))))))) ;) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression v))))))) (equality_operator ==) (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) })) })
2014-06-21 12:53:29 INFO  CsCompiler:60 - Parse of Test.cs completed successfully
2014-06-21 12:53:29 INFO  CsCompiler:75 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticbooleanMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[0,0][0]=781;a+=xxx+6;xxx=yyy;intb=0;intv=testInt[2*b][b*b-(b+b)][b];returnv==781;}}
2014-06-21 12:53:29 INFO  CsCompiler:76 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@126,598:598='}',<40>,25:0]}
2014-06-21 12:53:29 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-21 12:53:29 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-21 12:53:29 TRACE ClassDef:53 - Class name: Test
2014-06-21 12:53:29 TRACE Variable:30 - Field/variable added: tst
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:29 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: 555
2014-06-21 12:53:29 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:29 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: 1
2014-06-21 12:53:29 TRACE Variable:30 - Field/variable added: yyy
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:53:29 TRACE Expression:39 - Token: '+'
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: tst+1
2014-06-21 12:53:29 TRACE Variable:30 - Field/variable added: zzz
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:53:29 TRACE Expression:39 - Token: '+'
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-21 12:53:29 TRACE ClassMethod:39 - Method added: Main
2014-06-21 12:53:29 TRACE Variable:30 - Field/variable added: s
2014-06-21 12:53:29 TRACE CompoundStatement:34 - Decl in da block: inta=5;
2014-06-21 12:53:29 TRACE Variable:30 - Field/variable added: a
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:29 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: 5
2014-06-21 12:53:29 TRACE CompoundStatement:34 - Decl in da block: intxxx=2;
2014-06-21 12:53:29 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:29 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: 2
2014-06-21 12:53:29 TRACE CompoundStatement:34 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-21 12:53:29 TRACE Variable:30 - Field/variable added: testInt
2014-06-21 12:53:29 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-21 12:53:29 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-21 12:53:29 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:29 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: 1
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:29 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: 2
2014-06-21 12:53:29 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:29 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: 3
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: NEW
2014-06-21 12:53:29 TRACE Expression:39 - Token: 'new'
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-21 12:53:29 TRACE CompoundStatement:50 - stmt in da block: testInt[0,0][0]=781;
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:53:29 TRACE Expression:39 - Token: '='
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: testInt[0,0][0]=781
2014-06-21 12:53:29 TRACE CompoundStatement:50 - stmt in da block: a+=xxx+6;
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: ADD_ASS
2014-06-21 12:53:29 TRACE Expression:39 - Token: '+='
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$10
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: a+=xxx+6
2014-06-21 12:53:29 TRACE CompoundStatement:50 - stmt in da block: xxx=yyy;
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:53:29 TRACE Expression:39 - Token: '='
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: xxx=yyy
2014-06-21 12:53:29 TRACE CompoundStatement:34 - Decl in da block: intb=0;
2014-06-21 12:53:29 TRACE Variable:30 - Field/variable added: b
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:29 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: 0
2014-06-21 12:53:29 TRACE CompoundStatement:34 - Decl in da block: intv=testInt[2*b][b*b-(b+b)][b];
2014-06-21 12:53:29 TRACE Variable:30 - Field/variable added: v
2014-06-21 12:53:29 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: MUL
2014-06-21 12:53:29 TRACE Expression:39 - Token: '*'
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: 2*b
2014-06-21 12:53:29 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: MINUS
2014-06-21 12:53:29 TRACE Expression:39 - Token: '-'
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$22
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: b*b-(b+b)
2014-06-21 12:53:29 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:29 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: b
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:29 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: testInt[2*b][b*b-(b+b)][b]
2014-06-21 12:53:29 TRACE CompoundStatement:50 - stmt in da block: returnv==781;
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: EQ
2014-06-21 12:53:29 TRACE Expression:39 - Token: '=='
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$29
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: v==781
2014-06-21 12:53:29 TRACE Expression:243 - int_visitLdcInsn: 555
2014-06-21 12:53:29 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:29 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: tst
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:29 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: 1
2014-06-21 12:53:29 TRACE IDExpressionType:63 - tst Test I
2014-06-21 12:53:29 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:29 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:53:29 TRACE Expression:39 - Token: '+'
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: xxx+123
2014-06-21 12:53:29 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:29 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:29 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: 123
2014-06-21 12:53:29 TRACE IDExpressionType:63 - xxx Test I
2014-06-21 12:53:29 TRACE Expression:243 - int_visitLdcInsn: 123
2014-06-21 12:53:29 TRACE ClassMethod:102 - Compiling method Main w. args Z. Is constructor: false
2014-06-21 12:53:29 TRACE Expression:243 - int_visitLdcInsn: 5
2014-06-21 12:53:29 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = a, index = 1
2014-06-21 12:53:29 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:53:29 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-21 12:53:29 TRACE ConstructorExpression:85 - t= I
2014-06-21 12:53:29 TRACE ConstructorExpression:86 - #args= 3
2014-06-21 12:53:29 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:53:29 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:53:29 TRACE Expression:243 - int_visitLdcInsn: 3
2014-06-21 12:53:29 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-21 12:53:29 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:29 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: 0
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:29 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: 0
2014-06-21 12:53:29 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:29 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: 0
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:29 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: testInt[0,0][0]
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:29 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: 781
2014-06-21 12:53:29 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:53:29 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:53:29 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:53:29 TRACE Expression:243 - int_visitLdcInsn: 781
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:29 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: a
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:53:29 TRACE Expression:39 - Token: '+'
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: xxx+6
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:29 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:29 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: 6
2014-06-21 12:53:29 TRACE Expression:243 - int_visitLdcInsn: 6
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:29 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:29 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:53:29 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:53:29 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:53:29 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = b, index = 4
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:29 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: 2
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:29 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: b
2014-06-21 12:53:29 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: MUL
2014-06-21 12:53:29 TRACE Expression:39 - Token: '*'
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: b*b
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:53:29 TRACE Expression:39 - Token: '+'
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: (b+b)
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:29 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: b
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:29 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: b
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:29 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: b
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:29 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: b
2014-06-21 12:53:29 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = v, index = 5
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:29 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: v
2014-06-21 12:53:29 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:29 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:29 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:29 TRACE Expression:41 - Expression text: 781
2014-06-21 12:53:29 TRACE Expression:243 - int_visitLdcInsn: 781
2014-06-21 12:53:29 INFO  CsCompiler:92 - tst = 555
2014-06-21 12:53:29 INFO  CsCompiler:92 - xxx = 1
2014-06-21 12:53:29 INFO  CsCompiler:92 - yyy = 556
2014-06-21 12:53:29 INFO  CsCompiler:92 - zzz = 680
2014-06-21 12:53:29 INFO  CsCompiler:100 - Main: true
2014-06-21 12:53:53 TRACE CsCompiler:46 - RuleIndexMap: {inclusive_or_expression=31, assign_and_modify_operator=43, assignment_expression=27, parameter_type_list=15, equality_operator=45, multiplicative_expression=21, jump_statement=42, compound_statement=38, relational_expression=35, enum_specifier=12, parameter_declaration=17, declaration_specifier=4, postfix_expression=24, equality_expression=34, assignment_operator=2, arg_suffix=9, enumerator=14, unary_expression=22, arr_suffix=7, arr_arg_suffix=8, cls_method=1, constant=26, declaration=3, init_declarator_list=5, selection_statement=40, expression_statement=39, init_declarator=6, cls_def=0, identifier_list=18, shift_operator=47, comparsion_operator=46, exclusive_or_expression=32, enumerator_list=13, statement=37, logical_and_expression=30, additive_expression=20, unary_operator=44, conditional_expression=28, and_expression=33, primary_expression=25, shift_expression=36, iteration_statement=41, logical_or_expression=29, type_specifier=11, declarator_suffix=10, parameter_list=16, argument_expression_list=19, constructor_call=23}
2014-06-21 12:53:53 TRACE CsCompiler:47 - TokenTypeMap: {'>='=33, '/'=53, '=='=29, '/='=20, '%='=21, '>'=31, '||'=58, '&&'=57, ';'=45, 'return'=13, PRIMITIVE_TYPE_MODIFIER=15, 'for'=8, EOF=-1, '+'=50, '.'=48, '^'=56, '>>'=36, '++'=37, STRING_LITERAL=64, 'else'=7, FLOATING_POINT_LITERAL=68, '^='=27, '+='=22, 'break'=12, IDENTIFIER=62, '...'=49, '{'=39, PRIMITIVE_TYPE=14, '>>='=25, '?'=59, HEX_LITERAL=65, 'if'=6, '&='=26, '('=41, ':'=46, COMMENT=70, '-'=51, 'while'=9, ','=47, 'default'=5, '-='=23, '<<='=24, ']'=44, 'enum'=3, '!'=61, '|'=55, 'class'=2, 'new'=1, '|='=28, LINE_COMMENT=71, OCTAL_LITERAL=67, CHARACTER_LITERAL=63, '='=18, ')'=42, '*='=19, '%'=60, 'do'=10, 'case'=4, '}'=40, WS=69, OTHER_MODIFIER=17, LINE_COMMAND=72, ACCESS_MODIFIER=16, '<<'=35, '<='=34, '!='=30, 'continue'=11, <INVALID>=0, '<'=32, '--'=38, '*'=52, '['=43, DECIMAL_LITERAL=66, '&'=54}
2014-06-21 12:53:53 DEBUG CsCompiler:49 - Printing parse tree:
2014-06-21 12:53:53 DEBUG CsCompiler:50 - (cls_def public class Test { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator tst (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 555)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator yyy (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression tst)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1))))))))))))))))))) ;) (declaration (declaration_specifier private (type_specifier int)) (init_declarator_list (init_declarator zzz (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 123)))))))))))))))))))) ;) (cls_method (declaration_specifier public static (type_specifier boolean)) Main (declarator_suffix ( (parameter_type_list (parameter_list (parameter_declaration (declaration_specifier (type_specifier String)) (init_declarator s)))) )) (compound_statement { (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator a (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 5)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator xxx (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int) (arr_suffix [ , ]) (arr_suffix [ ])) (init_declarator_list (init_declarator testInt (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (constructor_call new (type_specifier int) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 1)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 3))))))))))))))))) ]))))))))))))))))) ;) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))) , (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2))))))))))))))))) ])))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression a))) (assignment_operator (assign_and_modify_operator +=)) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression xxx)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 6)))))))))))))))))) ;)) (statement (expression_statement (assignment_expression (unary_expression (postfix_expression (primary_expression xxx))) (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression yyy)))))))))))))))) ;)) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator b (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 0)))))))))))))))))) ;) (declaration (declaration_specifier (type_specifier int)) (init_declarator_list (init_declarator v (assignment_operator =) (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression testInt (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))) * (unary_expression (postfix_expression (primary_expression b)))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression b))) * (unary_expression (postfix_expression (primary_expression b)))) - (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression ( (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression b)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression b)))))))))))))))) )))))))))))))))))) ]) (arr_arg_suffix [ (argument_expression_list (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression b)))) + (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 2)))))))))))))))))) ])))))))))))))))))) ;) (statement (jump_statement return (assignment_expression (conditional_expression (logical_or_expression (logical_and_expression (inclusive_or_expression (exclusive_or_expression (and_expression (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression v))))))) (equality_operator ==) (equality_expression (relational_expression (shift_expression (additive_expression (multiplicative_expression (unary_expression (postfix_expression (primary_expression (constant 781))))))))))))))))) ;)) })) })
2014-06-21 12:53:55 INFO  CsCompiler:60 - Parse of Test.cs completed successfully
2014-06-21 12:53:55 INFO  CsCompiler:75 - 0; cls_def; publicclassTest{inttst=555;intxxx=1;intyyy=tst+1;privateintzzz=yyy+xxx+123;publicstaticbooleanMain(Strings){inta=5;intxxx=2;int[,][]testInt=newint[1,2][3];testInt[0,0][2]=781;a+=xxx+6;xxx=yyy;intb=0;intv=testInt[2*b][b*b-(b+b)][b+2];returnv==781;}}
2014-06-21 12:53:55 INFO  CsCompiler:76 - 	 ParserRuleContext[cls_def]{start=[@0,0:5='public',<16>,1:0], stop=[@128,602:602='}',<40>,25:0]}
2014-06-21 12:53:55 TRACE ClassDef:44 - AccessModifiers#: 1
2014-06-21 12:53:55 TRACE ClassDef:46 - OtherModifiers#: 1
2014-06-21 12:53:55 TRACE ClassDef:53 - Class name: Test
2014-06-21 12:53:55 TRACE Variable:30 - Field/variable added: tst
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:55 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: 555
2014-06-21 12:53:55 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:55 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: 1
2014-06-21 12:53:55 TRACE Variable:30 - Field/variable added: yyy
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:53:55 TRACE Expression:39 - Token: '+'
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: tst+1
2014-06-21 12:53:55 TRACE Variable:30 - Field/variable added: zzz
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:53:55 TRACE Expression:39 - Token: '+'
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: yyy+xxx+123
2014-06-21 12:53:55 TRACE ClassMethod:39 - Method added: Main
2014-06-21 12:53:55 TRACE Variable:30 - Field/variable added: s
2014-06-21 12:53:55 TRACE CompoundStatement:34 - Decl in da block: inta=5;
2014-06-21 12:53:55 TRACE Variable:30 - Field/variable added: a
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:55 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: 5
2014-06-21 12:53:55 TRACE CompoundStatement:34 - Decl in da block: intxxx=2;
2014-06-21 12:53:55 TRACE Variable:30 - Field/variable added: xxx
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:55 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: 2
2014-06-21 12:53:55 TRACE CompoundStatement:34 - Decl in da block: int[,][]testInt=newint[1,2][3];
2014-06-21 12:53:55 TRACE Variable:30 - Field/variable added: testInt
2014-06-21 12:53:55 TRACE ConstructorExpression:31 - Constructor call added: newint[1,2][3]
2014-06-21 12:53:55 TRACE ConstructorExpression:38 - Constr rule: type_specifier
2014-06-21 12:53:55 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:55 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: 1
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:55 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: 2
2014-06-21 12:53:55 TRACE ConstructorExpression:38 - Constr rule: arr_arg_suffix
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:55 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: 3
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: NEW
2014-06-21 12:53:55 TRACE Expression:39 - Token: 'new'
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ConstructorExpression
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: newint[1,2][3]
2014-06-21 12:53:55 TRACE CompoundStatement:50 - stmt in da block: testInt[0,0][2]=781;
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:53:55 TRACE Expression:39 - Token: '='
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: testInt[0,0][2]=781
2014-06-21 12:53:55 TRACE CompoundStatement:50 - stmt in da block: a+=xxx+6;
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: ADD_ASS
2014-06-21 12:53:55 TRACE Expression:39 - Token: '+='
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$10
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: a+=xxx+6
2014-06-21 12:53:55 TRACE CompoundStatement:50 - stmt in da block: xxx=yyy;
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: ASSIGN
2014-06-21 12:53:55 TRACE Expression:39 - Token: '='
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$6
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: xxx=yyy
2014-06-21 12:53:55 TRACE CompoundStatement:34 - Decl in da block: intb=0;
2014-06-21 12:53:55 TRACE Variable:30 - Field/variable added: b
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:55 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: 0
2014-06-21 12:53:55 TRACE CompoundStatement:34 - Decl in da block: intv=testInt[2*b][b*b-(b+b)][b+2];
2014-06-21 12:53:55 TRACE Variable:30 - Field/variable added: v
2014-06-21 12:53:55 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: MUL
2014-06-21 12:53:55 TRACE Expression:39 - Token: '*'
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: 2*b
2014-06-21 12:53:55 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: MINUS
2014-06-21 12:53:55 TRACE Expression:39 - Token: '-'
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$22
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: b*b-(b+b)
2014-06-21 12:53:55 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:53:55 TRACE Expression:39 - Token: '+'
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: b+2
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:55 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: testInt[2*b][b*b-(b+b)][b+2]
2014-06-21 12:53:55 TRACE CompoundStatement:50 - stmt in da block: returnv==781;
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: EQ
2014-06-21 12:53:55 TRACE Expression:39 - Token: '=='
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$29
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: v==781
2014-06-21 12:53:55 TRACE Expression:243 - int_visitLdcInsn: 555
2014-06-21 12:53:55 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:55 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: tst
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:55 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: 1
2014-06-21 12:53:55 TRACE IDExpressionType:63 - tst Test I
2014-06-21 12:53:55 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:55 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:53:55 TRACE Expression:39 - Token: '+'
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: xxx+123
2014-06-21 12:53:55 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:55 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:55 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: 123
2014-06-21 12:53:55 TRACE IDExpressionType:63 - xxx Test I
2014-06-21 12:53:55 TRACE Expression:243 - int_visitLdcInsn: 123
2014-06-21 12:53:55 TRACE ClassMethod:102 - Compiling method Main w. args Z. Is constructor: false
2014-06-21 12:53:55 TRACE Expression:243 - int_visitLdcInsn: 5
2014-06-21 12:53:55 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = a, index = 1
2014-06-21 12:53:55 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:53:55 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = xxx, index = 2
2014-06-21 12:53:55 TRACE ConstructorExpression:85 - t= I
2014-06-21 12:53:55 TRACE ConstructorExpression:86 - #args= 3
2014-06-21 12:53:55 TRACE Expression:243 - int_visitLdcInsn: 1
2014-06-21 12:53:55 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:53:55 TRACE Expression:243 - int_visitLdcInsn: 3
2014-06-21 12:53:55 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = testInt, index = 3
2014-06-21 12:53:55 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:55 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: 0
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:55 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: 0
2014-06-21 12:53:55 TRACE ArrIDExpressionType:22 - Constr rule: arr_arg_suffix
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:55 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: 2
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:55 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.ArrIDExpressionType
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: testInt[0,0][2]
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:55 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: 781
2014-06-21 12:53:55 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:53:55 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:53:55 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:53:55 TRACE Expression:243 - int_visitLdcInsn: 781
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:55 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: a
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:53:55 TRACE Expression:39 - Token: '+'
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: xxx+6
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:55 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:55 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: 6
2014-06-21 12:53:55 TRACE Expression:243 - int_visitLdcInsn: 6
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:55 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: xxx
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:55 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: yyy
2014-06-21 12:53:55 TRACE IDExpressionType:63 - yyy Test I
2014-06-21 12:53:55 TRACE Expression:243 - int_visitLdcInsn: 0
2014-06-21 12:53:55 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = b, index = 4
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:55 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: 2
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:55 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: b
2014-06-21 12:53:55 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: MUL
2014-06-21 12:53:55 TRACE Expression:39 - Token: '*'
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$23
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: b*b
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: PLUS
2014-06-21 12:53:55 TRACE Expression:39 - Token: '+'
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$21
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: (b+b)
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:55 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: b
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:55 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: b
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:55 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: b
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:55 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: b
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:55 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: b
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:55 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: 2
2014-06-21 12:53:55 TRACE Expression:243 - int_visitLdcInsn: 2
2014-06-21 12:53:55 TRACE CompoundStatement:79 - Add LocalVar to scope. Name = v, index = 5
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: IDENTIFIER
2014-06-21 12:53:55 TRACE Expression:39 - Token: IDENTIFIER
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.IDExpressionType
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: v
2014-06-21 12:53:55 TRACE Expression:38 - Expression added: HEX_LITERAL
2014-06-21 12:53:55 TRACE Expression:39 - Token: DECIMAL_LITERAL
2014-06-21 12:53:55 TRACE Expression:40 - ExpressionType: org.itmo.iyakupov.components.expr.Expression$2
2014-06-21 12:53:55 TRACE Expression:41 - Expression text: 781
2014-06-21 12:53:55 TRACE Expression:243 - int_visitLdcInsn: 781
2014-06-21 12:53:55 INFO  CsCompiler:92 - tst = 555
2014-06-21 12:53:55 INFO  CsCompiler:92 - xxx = 1
2014-06-21 12:53:55 INFO  CsCompiler:92 - yyy = 556
2014-06-21 12:53:55 INFO  CsCompiler:92 - zzz = 680
2014-06-21 12:53:55 INFO  CsCompiler:100 - Main: true
