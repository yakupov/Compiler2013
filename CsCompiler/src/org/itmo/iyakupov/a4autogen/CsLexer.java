// Generated from C:\Users\Ilia\Desktop\Cs.g4 by ANTLR 4.1
package org.itmo.iyakupov.a4autogen;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class CsLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		IDENTIFIER=1, CHARACTER_LITERAL=2, STRING_LITERAL=3, HEX_LITERAL=4, DECIMAL_LITERAL=5, 
		OCTAL_LITERAL=6, FLOATING_POINT_LITERAL=7, WS=8, LINE_COMMENT=9, LINE_COMMAND=10, 
		CLASS=11, ENUM=12, CASE=13, DEFAULT=14, IF=15, ELSE=16, SWITCH=17, FOR=18, 
		WHILE=19, DO=20, CONTINUE=21, BREAK=22, RETURN=23, PRIMITIVE_TYPE=24, 
		PRIMITIVE_TYPE_MODIFIER=25, TYPE_QUALIFIER=26, ACCESS_MODIFIER=27, OTHER_MODIFIER=28, 
		ASSIGN=29, ASSIGN_AND_MODIFY_OPERATOR=30, UNARY_OPERATOR=31, EQUALITY_OPERATOR=32, 
		COMPARSION_OPERATOR=33, SHIFT_OPERATOR=34, INCREMENT=35, DECREMENT=36, 
		OPB_FIG=37, CLB_FIG=38, OPB_RND=39, CLB_RND=40, OPB_SQ=41, CLB_SQ=42, 
		SEMICOLON=43, DOUBLE_DOT=44, COMMA=45, DOT=46, ETC=47, PLUS=48, MINUS=49, 
		MUL=50, DIV=51, BIT_AND=52, BIT_OR=53, BIT_XOR=54, AND=55, OR=56, QUESTION=57, 
		PERCENT=58;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"IDENTIFIER", "CHARACTER_LITERAL", "STRING_LITERAL", "HEX_LITERAL", "DECIMAL_LITERAL", 
		"OCTAL_LITERAL", "FLOATING_POINT_LITERAL", "WS", "LINE_COMMENT", "LINE_COMMAND", 
		"'class'", "'enum'", "'case'", "'default'", "'if'", "'else'", "'switch'", 
		"'for'", "'while'", "'do'", "'continue'", "'break'", "'return'", "PRIMITIVE_TYPE", 
		"PRIMITIVE_TYPE_MODIFIER", "TYPE_QUALIFIER", "ACCESS_MODIFIER", "OTHER_MODIFIER", 
		"'='", "ASSIGN_AND_MODIFY_OPERATOR", "UNARY_OPERATOR", "EQUALITY_OPERATOR", 
		"COMPARSION_OPERATOR", "SHIFT_OPERATOR", "'++'", "'--'", "'{'", "'}'", 
		"'('", "')'", "'['", "']'", "';'", "':'", "','", "'.'", "'...'", "'+'", 
		"'-'", "'*'", "'/'", "'&'", "'|'", "'^'", "'&&'", "'||'", "'?'", "'%'"
	};
	public static final String[] ruleNames = {
		"IDENTIFIER", "LETTER", "CHARACTER_LITERAL", "STRING_LITERAL", "HEX_LITERAL", 
		"DECIMAL_LITERAL", "OCTAL_LITERAL", "HexDigit", "IntegerTypeSuffix", "FLOATING_POINT_LITERAL", 
		"Exponent", "FloatTypeSuffix", "EscapeSequence", "OctalEscape", "UnicodeEscape", 
		"WS", "LINE_COMMENT", "LINE_COMMAND", "CLASS", "ENUM", "CASE", "DEFAULT", 
		"IF", "ELSE", "SWITCH", "FOR", "WHILE", "DO", "CONTINUE", "BREAK", "RETURN", 
		"PRIMITIVE_TYPE", "PRIMITIVE_TYPE_MODIFIER", "TYPE_QUALIFIER", "ACCESS_MODIFIER", 
		"OTHER_MODIFIER", "ASSIGN", "ASSIGN_AND_MODIFY_OPERATOR", "UNARY_OPERATOR", 
		"EQUALITY_OPERATOR", "COMPARSION_OPERATOR", "SHIFT_OPERATOR", "INCREMENT", 
		"DECREMENT", "OPB_FIG", "CLB_FIG", "OPB_RND", "CLB_RND", "OPB_SQ", "CLB_SQ", 
		"SEMICOLON", "DOUBLE_DOT", "COMMA", "DOT", "ETC", "PLUS", "MINUS", "MUL", 
		"DIV", "BIT_AND", "BIT_OR", "BIT_XOR", "AND", "OR", "QUESTION", "PERCENT"
	};


	public CsLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Cs.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 15: WS_action((RuleContext)_localctx, actionIndex); break;

		case 16: LINE_COMMENT_action((RuleContext)_localctx, actionIndex); break;

		case 17: LINE_COMMAND_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void WS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: skip();  break;
		}
	}
	private void LINE_COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1: skip();  break;
		}
	}
	private void LINE_COMMAND_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 2: skip();  break;
		}
	}

	public static final String _serializedATN =
		"\3\uacf5\uee8c\u4f5d\u8b0d\u4a45\u78bd\u1b2f\u3378\2<\u026e\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\3\2\3\2\3\2\7\2\u008b\n\2\f\2\16"+
		"\2\u008e\13\2\3\3\3\3\3\4\3\4\3\4\5\4\u0095\n\4\3\4\3\4\3\5\3\5\3\5\7"+
		"\5\u009c\n\5\f\5\16\5\u009f\13\5\3\5\3\5\3\6\3\6\3\6\6\6\u00a6\n\6\r\6"+
		"\16\6\u00a7\3\6\5\6\u00ab\n\6\3\7\3\7\3\7\7\7\u00b0\n\7\f\7\16\7\u00b3"+
		"\13\7\5\7\u00b5\n\7\3\7\5\7\u00b8\n\7\3\b\3\b\6\b\u00bc\n\b\r\b\16\b\u00bd"+
		"\3\b\5\b\u00c1\n\b\3\t\3\t\3\n\5\n\u00c6\n\n\3\n\3\n\3\n\5\n\u00cb\n\n"+
		"\5\n\u00cd\n\n\3\13\6\13\u00d0\n\13\r\13\16\13\u00d1\3\13\3\13\7\13\u00d6"+
		"\n\13\f\13\16\13\u00d9\13\13\3\13\5\13\u00dc\n\13\3\13\5\13\u00df\n\13"+
		"\3\13\3\13\6\13\u00e3\n\13\r\13\16\13\u00e4\3\13\5\13\u00e8\n\13\3\13"+
		"\5\13\u00eb\n\13\3\13\6\13\u00ee\n\13\r\13\16\13\u00ef\3\13\3\13\5\13"+
		"\u00f4\n\13\3\13\6\13\u00f7\n\13\r\13\16\13\u00f8\3\13\5\13\u00fc\n\13"+
		"\3\13\5\13\u00ff\n\13\3\f\3\f\3\f\5\f\u0104\n\f\3\f\6\f\u0107\n\f\r\f"+
		"\16\f\u0108\3\r\3\r\3\16\3\16\3\16\5\16\u0110\n\16\3\17\3\17\3\17\3\17"+
		"\3\17\3\17\3\17\3\17\3\17\5\17\u011b\n\17\3\20\3\20\3\20\3\20\3\20\3\20"+
		"\3\20\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\7\22\u012c\n\22\f\22\16"+
		"\22\u012f\13\22\3\22\5\22\u0132\n\22\3\22\3\22\3\22\3\22\3\23\3\23\7\23"+
		"\u013a\n\23\f\23\16\23\u013d\13\23\3\23\5\23\u0140\n\23\3\23\3\23\3\23"+
		"\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\26\3\26"+
		"\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30"+
		"\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\33\3\33"+
		"\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\36\3\36\3\36"+
		"\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 \3 "+
		"\3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!"+
		"\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\5!\u01af\n!\3\"\3\"\3\"\3\"\3\"\3"+
		"\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\5\"\u01bf\n\"\3#\3#\3#\3#\3#\3#\3#"+
		"\3#\3#\3#\3#\3#\3#\5#\u01ce\n#\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$"+
		"\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\5$\u01ee\n$\3%\3%"+
		"\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\5%\u0203\n%\3&\3&"+
		"\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3"+
		"\'\3\'\3\'\3\'\3\'\5\'\u021d\n\'\3(\3(\3(\3(\3(\5(\u0224\n(\3)\3)\3)\3"+
		")\5)\u022a\n)\3*\3*\3*\3*\3*\5*\u0231\n*\3+\3+\3+\3+\5+\u0237\n+\3,\3"+
		",\3,\3-\3-\3-\3.\3.\3/\3/\3\60\3\60\3\61\3\61\3\62\3\62\3\63\3\63\3\64"+
		"\3\64\3\65\3\65\3\66\3\66\3\67\3\67\38\38\38\38\39\39\3:\3:\3;\3;\3<\3"+
		"<\3=\3=\3>\3>\3?\3?\3@\3@\3@\3A\3A\3A\3B\3B\3C\3C\2D\3\3\1\5\2\1\7\4\1"+
		"\t\5\1\13\6\1\r\7\1\17\b\1\21\2\1\23\2\1\25\t\1\27\2\1\31\2\1\33\2\1\35"+
		"\2\1\37\2\1!\n\2#\13\3%\f\4\'\r\1)\16\1+\17\1-\20\1/\21\1\61\22\1\63\23"+
		"\1\65\24\1\67\25\19\26\1;\27\1=\30\1?\31\1A\32\1C\33\1E\34\1G\35\1I\36"+
		"\1K\37\1M \1O!\1Q\"\1S#\1U$\1W%\1Y&\1[\'\1](\1_)\1a*\1c+\1e,\1g-\1i.\1"+
		"k/\1m\60\1o\61\1q\62\1s\63\1u\64\1w\65\1y\66\1{\67\1}8\1\1779\1\u0081"+
		":\1\u0083;\1\u0085<\1\3\2\20\6\2&&C\\aac|\4\2))^^\4\2$$^^\4\2ZZzz\5\2"+
		"\62;CHch\4\2WWww\4\2NNnn\4\2GGgg\6\2FFHHffhh\n\2$$))^^ddhhppttvv\5\2\13"+
		"\f\16\17\"\"\4\2\f\f\17\17\4\2##\u0080\u0080\4\2>>@@\u02aa\2\3\3\2\2\2"+
		"\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\25\3"+
		"\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2"+
		"\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67"+
		"\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2"+
		"\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2"+
		"\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]"+
		"\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2"+
		"\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2"+
		"\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2"+
		"\2\2\2\u0083\3\2\2\2\2\u0085\3\2\2\2\3\u0087\3\2\2\2\5\u008f\3\2\2\2\7"+
		"\u0091\3\2\2\2\t\u0098\3\2\2\2\13\u00a2\3\2\2\2\r\u00b4\3\2\2\2\17\u00b9"+
		"\3\2\2\2\21\u00c2\3\2\2\2\23\u00cc\3\2\2\2\25\u00fe\3\2\2\2\27\u0100\3"+
		"\2\2\2\31\u010a\3\2\2\2\33\u010f\3\2\2\2\35\u011a\3\2\2\2\37\u011c\3\2"+
		"\2\2!\u0123\3\2\2\2#\u0127\3\2\2\2%\u0137\3\2\2\2\'\u0145\3\2\2\2)\u014b"+
		"\3\2\2\2+\u0150\3\2\2\2-\u0155\3\2\2\2/\u015d\3\2\2\2\61\u0160\3\2\2\2"+
		"\63\u0165\3\2\2\2\65\u016c\3\2\2\2\67\u0170\3\2\2\29\u0176\3\2\2\2;\u0179"+
		"\3\2\2\2=\u0182\3\2\2\2?\u0188\3\2\2\2A\u01ae\3\2\2\2C\u01be\3\2\2\2E"+
		"\u01cd\3\2\2\2G\u01ed\3\2\2\2I\u0202\3\2\2\2K\u0204\3\2\2\2M\u021c\3\2"+
		"\2\2O\u0223\3\2\2\2Q\u0229\3\2\2\2S\u0230\3\2\2\2U\u0236\3\2\2\2W\u0238"+
		"\3\2\2\2Y\u023b\3\2\2\2[\u023e\3\2\2\2]\u0240\3\2\2\2_\u0242\3\2\2\2a"+
		"\u0244\3\2\2\2c\u0246\3\2\2\2e\u0248\3\2\2\2g\u024a\3\2\2\2i\u024c\3\2"+
		"\2\2k\u024e\3\2\2\2m\u0250\3\2\2\2o\u0252\3\2\2\2q\u0256\3\2\2\2s\u0258"+
		"\3\2\2\2u\u025a\3\2\2\2w\u025c\3\2\2\2y\u025e\3\2\2\2{\u0260\3\2\2\2}"+
		"\u0262\3\2\2\2\177\u0264\3\2\2\2\u0081\u0267\3\2\2\2\u0083\u026a\3\2\2"+
		"\2\u0085\u026c\3\2\2\2\u0087\u008c\5\5\3\2\u0088\u008b\5\5\3\2\u0089\u008b"+
		"\4\62;\2\u008a\u0088\3\2\2\2\u008a\u0089\3\2\2\2\u008b\u008e\3\2\2\2\u008c"+
		"\u008a\3\2\2\2\u008c\u008d\3\2\2\2\u008d\4\3\2\2\2\u008e\u008c\3\2\2\2"+
		"\u008f\u0090\t\2\2\2\u0090\6\3\2\2\2\u0091\u0094\7)\2\2\u0092\u0095\5"+
		"\33\16\2\u0093\u0095\n\3\2\2\u0094\u0092\3\2\2\2\u0094\u0093\3\2\2\2\u0095"+
		"\u0096\3\2\2\2\u0096\u0097\7)\2\2\u0097\b\3\2\2\2\u0098\u009d\7$\2\2\u0099"+
		"\u009c\5\33\16\2\u009a\u009c\n\4\2\2\u009b\u0099\3\2\2\2\u009b\u009a\3"+
		"\2\2\2\u009c\u009f\3\2\2\2\u009d\u009b\3\2\2\2\u009d\u009e\3\2\2\2\u009e"+
		"\u00a0\3\2\2\2\u009f\u009d\3\2\2\2\u00a0\u00a1\7$\2\2\u00a1\n\3\2\2\2"+
		"\u00a2\u00a3\7\62\2\2\u00a3\u00a5\t\5\2\2\u00a4\u00a6\5\21\t\2\u00a5\u00a4"+
		"\3\2\2\2\u00a6\u00a7\3\2\2\2\u00a7\u00a5\3\2\2\2\u00a7\u00a8\3\2\2\2\u00a8"+
		"\u00aa\3\2\2\2\u00a9\u00ab\5\23\n\2\u00aa\u00a9\3\2\2\2\u00aa\u00ab\3"+
		"\2\2\2\u00ab\f\3\2\2\2\u00ac\u00b5\7\62\2\2\u00ad\u00b1\4\63;\2\u00ae"+
		"\u00b0\4\62;\2\u00af\u00ae\3\2\2\2\u00b0\u00b3\3\2\2\2\u00b1\u00af\3\2"+
		"\2\2\u00b1\u00b2\3\2\2\2\u00b2\u00b5\3\2\2\2\u00b3\u00b1\3\2\2\2\u00b4"+
		"\u00ac\3\2\2\2\u00b4\u00ad\3\2\2\2\u00b5\u00b7\3\2\2\2\u00b6\u00b8\5\23"+
		"\n\2\u00b7\u00b6\3\2\2\2\u00b7\u00b8\3\2\2\2\u00b8\16\3\2\2\2\u00b9\u00bb"+
		"\7\62\2\2\u00ba\u00bc\4\629\2\u00bb\u00ba\3\2\2\2\u00bc\u00bd\3\2\2\2"+
		"\u00bd\u00bb\3\2\2\2\u00bd\u00be\3\2\2\2\u00be\u00c0\3\2\2\2\u00bf\u00c1"+
		"\5\23\n\2\u00c0\u00bf\3\2\2\2\u00c0\u00c1\3\2\2\2\u00c1\20\3\2\2\2\u00c2"+
		"\u00c3\t\6\2\2\u00c3\22\3\2\2\2\u00c4\u00c6\t\7\2\2\u00c5\u00c4\3\2\2"+
		"\2\u00c5\u00c6\3\2\2\2\u00c6\u00c7\3\2\2\2\u00c7\u00cd\t\b\2\2\u00c8\u00ca"+
		"\t\7\2\2\u00c9\u00cb\t\b\2\2\u00ca\u00c9\3\2\2\2\u00ca\u00cb\3\2\2\2\u00cb"+
		"\u00cd\3\2\2\2\u00cc\u00c5\3\2\2\2\u00cc\u00c8\3\2\2\2\u00cd\24\3\2\2"+
		"\2\u00ce\u00d0\4\62;\2\u00cf\u00ce\3\2\2\2\u00d0\u00d1\3\2\2\2\u00d1\u00cf"+
		"\3\2\2\2\u00d1\u00d2\3\2\2\2\u00d2\u00d3\3\2\2\2\u00d3\u00d7\5m\67\2\u00d4"+
		"\u00d6\4\62;\2\u00d5\u00d4\3\2\2\2\u00d6\u00d9\3\2\2\2\u00d7\u00d5\3\2"+
		"\2\2\u00d7\u00d8\3\2\2\2\u00d8\u00db\3\2\2\2\u00d9\u00d7\3\2\2\2\u00da"+
		"\u00dc\5\27\f\2\u00db\u00da\3\2\2\2\u00db\u00dc\3\2\2\2\u00dc\u00de\3"+
		"\2\2\2\u00dd\u00df\5\31\r\2\u00de\u00dd\3\2\2\2\u00de\u00df\3\2\2\2\u00df"+
		"\u00ff\3\2\2\2\u00e0\u00e2\5m\67\2\u00e1\u00e3\4\62;\2\u00e2\u00e1\3\2"+
		"\2\2\u00e3\u00e4\3\2\2\2\u00e4\u00e2\3\2\2\2\u00e4\u00e5\3\2\2\2\u00e5"+
		"\u00e7\3\2\2\2\u00e6\u00e8\5\27\f\2\u00e7\u00e6\3\2\2\2\u00e7\u00e8\3"+
		"\2\2\2\u00e8\u00ea\3\2\2\2\u00e9\u00eb\5\31\r\2\u00ea\u00e9\3\2\2\2\u00ea"+
		"\u00eb\3\2\2\2\u00eb\u00ff\3\2\2\2\u00ec\u00ee\4\62;\2\u00ed\u00ec\3\2"+
		"\2\2\u00ee\u00ef\3\2\2\2\u00ef\u00ed\3\2\2\2\u00ef\u00f0\3\2\2\2\u00f0"+
		"\u00f1\3\2\2\2\u00f1\u00f3\5\27\f\2\u00f2\u00f4\5\31\r\2\u00f3\u00f2\3"+
		"\2\2\2\u00f3\u00f4\3\2\2\2\u00f4\u00ff\3\2\2\2\u00f5\u00f7\4\62;\2\u00f6"+
		"\u00f5\3\2\2\2\u00f7\u00f8\3\2\2\2\u00f8\u00f6\3\2\2\2\u00f8\u00f9\3\2"+
		"\2\2\u00f9\u00fb\3\2\2\2\u00fa\u00fc\5\27\f\2\u00fb\u00fa\3\2\2\2\u00fb"+
		"\u00fc\3\2\2\2\u00fc\u00fd\3\2\2\2\u00fd\u00ff\5\31\r\2\u00fe\u00cf\3"+
		"\2\2\2\u00fe\u00e0\3\2\2\2\u00fe\u00ed\3\2\2\2\u00fe\u00f6\3\2\2\2\u00ff"+
		"\26\3\2\2\2\u0100\u0103\t\t\2\2\u0101\u0104\5q9\2\u0102\u0104\5s:\2\u0103"+
		"\u0101\3\2\2\2\u0103\u0102\3\2\2\2\u0103\u0104\3\2\2\2\u0104\u0106\3\2"+
		"\2\2\u0105\u0107\4\62;\2\u0106\u0105\3\2\2\2\u0107\u0108\3\2\2\2\u0108"+
		"\u0106\3\2\2\2\u0108\u0109\3\2\2\2\u0109\30\3\2\2\2\u010a\u010b\t\n\2"+
		"\2\u010b\32\3\2\2\2\u010c\u010d\7^\2\2\u010d\u0110\t\13\2\2\u010e\u0110"+
		"\5\35\17\2\u010f\u010c\3\2\2\2\u010f\u010e\3\2\2\2\u0110\34\3\2\2\2\u0111"+
		"\u0112\7^\2\2\u0112\u0113\4\62\65\2\u0113\u0114\4\629\2\u0114\u011b\4"+
		"\629\2\u0115\u0116\7^\2\2\u0116\u0117\4\629\2\u0117\u011b\4\629\2\u0118"+
		"\u0119\7^\2\2\u0119\u011b\4\629\2\u011a\u0111\3\2\2\2\u011a\u0115\3\2"+
		"\2\2\u011a\u0118\3\2\2\2\u011b\36\3\2\2\2\u011c\u011d\7^\2\2\u011d\u011e"+
		"\7w\2\2\u011e\u011f\5\21\t\2\u011f\u0120\5\21\t\2\u0120\u0121\5\21\t\2"+
		"\u0121\u0122\5\21\t\2\u0122 \3\2\2\2\u0123\u0124\t\f\2\2\u0124\u0125\3"+
		"\2\2\2\u0125\u0126\b\21\2\2\u0126\"\3\2\2\2\u0127\u0128\7\61\2\2\u0128"+
		"\u0129\7\61\2\2\u0129\u012d\3\2\2\2\u012a\u012c\n\r\2\2\u012b\u012a\3"+
		"\2\2\2\u012c\u012f\3\2\2\2\u012d\u012b\3\2\2\2\u012d\u012e\3\2\2\2\u012e"+
		"\u0131\3\2\2\2\u012f\u012d\3\2\2\2\u0130\u0132\7\17\2\2\u0131\u0130\3"+
		"\2\2\2\u0131\u0132\3\2\2\2\u0132\u0133\3\2\2\2\u0133\u0134\7\f\2\2\u0134"+
		"\u0135\3\2\2\2\u0135\u0136\b\22\3\2\u0136$\3\2\2\2\u0137\u013b\7%\2\2"+
		"\u0138\u013a\n\r\2\2\u0139\u0138\3\2\2\2\u013a\u013d\3\2\2\2\u013b\u0139"+
		"\3\2\2\2\u013b\u013c\3\2\2\2\u013c\u013f\3\2\2\2\u013d\u013b\3\2\2\2\u013e"+
		"\u0140\7\17\2\2\u013f\u013e\3\2\2\2\u013f\u0140\3\2\2\2\u0140\u0141\3"+
		"\2\2\2\u0141\u0142\7\f\2\2\u0142\u0143\3\2\2\2\u0143\u0144\b\23\4\2\u0144"+
		"&\3\2\2\2\u0145\u0146\7e\2\2\u0146\u0147\7n\2\2\u0147\u0148\7c\2\2\u0148"+
		"\u0149\7u\2\2\u0149\u014a\7u\2\2\u014a(\3\2\2\2\u014b\u014c\7g\2\2\u014c"+
		"\u014d\7p\2\2\u014d\u014e\7w\2\2\u014e\u014f\7o\2\2\u014f*\3\2\2\2\u0150"+
		"\u0151\7e\2\2\u0151\u0152\7c\2\2\u0152\u0153\7u\2\2\u0153\u0154\7g\2\2"+
		"\u0154,\3\2\2\2\u0155\u0156\7f\2\2\u0156\u0157\7g\2\2\u0157\u0158\7h\2"+
		"\2\u0158\u0159\7c\2\2\u0159\u015a\7w\2\2\u015a\u015b\7n\2\2\u015b\u015c"+
		"\7v\2\2\u015c.\3\2\2\2\u015d\u015e\7k\2\2\u015e\u015f\7h\2\2\u015f\60"+
		"\3\2\2\2\u0160\u0161\7g\2\2\u0161\u0162\7n\2\2\u0162\u0163\7u\2\2\u0163"+
		"\u0164\7g\2\2\u0164\62\3\2\2\2\u0165\u0166\7u\2\2\u0166\u0167\7y\2\2\u0167"+
		"\u0168\7k\2\2\u0168\u0169\7v\2\2\u0169\u016a\7e\2\2\u016a\u016b\7j\2\2"+
		"\u016b\64\3\2\2\2\u016c\u016d\7h\2\2\u016d\u016e\7q\2\2\u016e\u016f\7"+
		"t\2\2\u016f\66\3\2\2\2\u0170\u0171\7y\2\2\u0171\u0172\7j\2\2\u0172\u0173"+
		"\7k\2\2\u0173\u0174\7n\2\2\u0174\u0175\7g\2\2\u01758\3\2\2\2\u0176\u0177"+
		"\7f\2\2\u0177\u0178\7q\2\2\u0178:\3\2\2\2\u0179\u017a\7e\2\2\u017a\u017b"+
		"\7q\2\2\u017b\u017c\7p\2\2\u017c\u017d\7v\2\2\u017d\u017e\7k\2\2\u017e"+
		"\u017f\7p\2\2\u017f\u0180\7w\2\2\u0180\u0181\7g\2\2\u0181<\3\2\2\2\u0182"+
		"\u0183\7d\2\2\u0183\u0184\7t\2\2\u0184\u0185\7g\2\2\u0185\u0186\7c\2\2"+
		"\u0186\u0187\7m\2\2\u0187>\3\2\2\2\u0188\u0189\7t\2\2\u0189\u018a\7g\2"+
		"\2\u018a\u018b\7v\2\2\u018b\u018c\7w\2\2\u018c\u018d\7t\2\2\u018d\u018e"+
		"\7p\2\2\u018e@\3\2\2\2\u018f\u0190\7x\2\2\u0190\u0191\7q\2\2\u0191\u0192"+
		"\7k\2\2\u0192\u01af\7f\2\2\u0193\u0194\7e\2\2\u0194\u0195\7j\2\2\u0195"+
		"\u0196\7c\2\2\u0196\u01af\7t\2\2\u0197\u0198\7u\2\2\u0198\u0199\7j\2\2"+
		"\u0199\u019a\7q\2\2\u019a\u019b\7t\2\2\u019b\u01af\7v\2\2\u019c\u019d"+
		"\7k\2\2\u019d\u019e\7p\2\2\u019e\u01af\7v\2\2\u019f\u01a0\7n\2\2\u01a0"+
		"\u01a1\7q\2\2\u01a1\u01a2\7p\2\2\u01a2\u01af\7i\2\2\u01a3\u01a4\7h\2\2"+
		"\u01a4\u01a5\7n\2\2\u01a5\u01a6\7q\2\2\u01a6\u01a7\7c\2\2\u01a7\u01af"+
		"\7v\2\2\u01a8\u01a9\7f\2\2\u01a9\u01aa\7q\2\2\u01aa\u01ab\7w\2\2\u01ab"+
		"\u01ac\7d\2\2\u01ac\u01ad\7n\2\2\u01ad\u01af\7g\2\2\u01ae\u018f\3\2\2"+
		"\2\u01ae\u0193\3\2\2\2\u01ae\u0197\3\2\2\2\u01ae\u019c\3\2\2\2\u01ae\u019f"+
		"\3\2\2\2\u01ae\u01a3\3\2\2\2\u01ae\u01a8\3\2\2\2\u01afB\3\2\2\2\u01b0"+
		"\u01b1\7w\2\2\u01b1\u01b2\7p\2\2\u01b2\u01b3\7u\2\2\u01b3\u01b4\7k\2\2"+
		"\u01b4\u01b5\7i\2\2\u01b5\u01b6\7p\2\2\u01b6\u01b7\7g\2\2\u01b7\u01bf"+
		"\7f\2\2\u01b8\u01b9\7u\2\2\u01b9\u01ba\7k\2\2\u01ba\u01bb\7i\2\2\u01bb"+
		"\u01bc\7p\2\2\u01bc\u01bd\7g\2\2\u01bd\u01bf\7f\2\2\u01be\u01b0\3\2\2"+
		"\2\u01be\u01b8\3\2\2\2\u01bfD\3\2\2\2\u01c0\u01c1\7e\2\2\u01c1\u01c2\7"+
		"q\2\2\u01c2\u01c3\7p\2\2\u01c3\u01c4\7u\2\2\u01c4\u01ce\7v\2\2\u01c5\u01c6"+
		"\7x\2\2\u01c6\u01c7\7q\2\2\u01c7\u01c8\7n\2\2\u01c8\u01c9\7c\2\2\u01c9"+
		"\u01ca\7v\2\2\u01ca\u01cb\7k\2\2\u01cb\u01cc\7n\2\2\u01cc\u01ce\7g\2\2"+
		"\u01cd\u01c0\3\2\2\2\u01cd\u01c5\3\2\2\2\u01ceF\3\2\2\2\u01cf\u01d0\7"+
		"r\2\2\u01d0\u01d1\7t\2\2\u01d1\u01d2\7k\2\2\u01d2\u01d3\7x\2\2\u01d3\u01d4"+
		"\7c\2\2\u01d4\u01d5\7v\2\2\u01d5\u01ee\7g\2\2\u01d6\u01d7\7r\2\2\u01d7"+
		"\u01d8\7t\2\2\u01d8\u01d9\7q\2\2\u01d9\u01da\7v\2\2\u01da\u01db\7g\2\2"+
		"\u01db\u01dc\7e\2\2\u01dc\u01dd\7v\2\2\u01dd\u01de\7g\2\2\u01de\u01ee"+
		"\7f\2\2\u01df\u01e0\7r\2\2\u01e0\u01e1\7w\2\2\u01e1\u01e2\7d\2\2\u01e2"+
		"\u01e3\7n\2\2\u01e3\u01e4\7k\2\2\u01e4\u01ee\7e\2\2\u01e5\u01e6\7k\2\2"+
		"\u01e6\u01e7\7p\2\2\u01e7\u01e8\7v\2\2\u01e8\u01e9\7g\2\2\u01e9\u01ea"+
		"\7t\2\2\u01ea\u01eb\7p\2\2\u01eb\u01ec\7c\2\2\u01ec\u01ee\7n\2\2\u01ed"+
		"\u01cf\3\2\2\2\u01ed\u01d6\3\2\2\2\u01ed\u01df\3\2\2\2\u01ed\u01e5\3\2"+
		"\2\2\u01eeH\3\2\2\2\u01ef\u01f0\7u\2\2\u01f0\u01f1\7v\2\2\u01f1\u01f2"+
		"\7c\2\2\u01f2\u01f3\7v\2\2\u01f3\u01f4\7k\2\2\u01f4\u0203\7e\2\2\u01f5"+
		"\u01f6\7e\2\2\u01f6\u01f7\7q\2\2\u01f7\u01f8\7p\2\2\u01f8\u01f9\7u\2\2"+
		"\u01f9\u0203\7v\2\2\u01fa\u01fb\7c\2\2\u01fb\u01fc\7d\2\2\u01fc\u01fd"+
		"\7u\2\2\u01fd\u01fe\7v\2\2\u01fe\u01ff\7t\2\2\u01ff\u0200\7c\2\2\u0200"+
		"\u0201\7e\2\2\u0201\u0203\7v\2\2\u0202\u01ef\3\2\2\2\u0202\u01f5\3\2\2"+
		"\2\u0202\u01fa\3\2\2\2\u0203J\3\2\2\2\u0204\u0205\7?\2\2\u0205L\3\2\2"+
		"\2\u0206\u0207\7,\2\2\u0207\u021d\7?\2\2\u0208\u0209\7\61\2\2\u0209\u021d"+
		"\7?\2\2\u020a\u020b\7\'\2\2\u020b\u021d\7?\2\2\u020c\u020d\7-\2\2\u020d"+
		"\u021d\7?\2\2\u020e\u020f\7/\2\2\u020f\u021d\7?\2\2\u0210\u0211\7>\2\2"+
		"\u0211\u0212\7>\2\2\u0212\u021d\7?\2\2\u0213\u0214\7@\2\2\u0214\u0215"+
		"\7@\2\2\u0215\u021d\7?\2\2\u0216\u0217\7(\2\2\u0217\u021d\7?\2\2\u0218"+
		"\u0219\7`\2\2\u0219\u021d\7?\2\2\u021a\u021b\7~\2\2\u021b\u021d\7?\2\2"+
		"\u021c\u0206\3\2\2\2\u021c\u0208\3\2\2\2\u021c\u020a\3\2\2\2\u021c\u020c"+
		"\3\2\2\2\u021c\u020e\3\2\2\2\u021c\u0210\3\2\2\2\u021c\u0213\3\2\2\2\u021c"+
		"\u0216\3\2\2\2\u021c\u0218\3\2\2\2\u021c\u021a\3\2\2\2\u021dN\3\2\2\2"+
		"\u021e\u0224\7(\2\2\u021f\u0224\5u;\2\u0220\u0224\5q9\2\u0221\u0224\5"+
		"s:\2\u0222\u0224\t\16\2\2\u0223\u021e\3\2\2\2\u0223\u021f\3\2\2\2\u0223"+
		"\u0220\3\2\2\2\u0223\u0221\3\2\2\2\u0223\u0222\3\2\2\2\u0224P\3\2\2\2"+
		"\u0225\u0226\7?\2\2\u0226\u022a\7?\2\2\u0227\u0228\7#\2\2\u0228\u022a"+
		"\7?\2\2\u0229\u0225\3\2\2\2\u0229\u0227\3\2\2\2\u022aR\3\2\2\2\u022b\u0231"+
		"\t\17\2\2\u022c\u022d\7>\2\2\u022d\u0231\7?\2\2\u022e\u022f\7@\2\2\u022f"+
		"\u0231\7?\2\2\u0230\u022b\3\2\2\2\u0230\u022c\3\2\2\2\u0230\u022e\3\2"+
		"\2\2\u0231T\3\2\2\2\u0232\u0233\7>\2\2\u0233\u0237\7>\2\2\u0234\u0235"+
		"\7@\2\2\u0235\u0237\7@\2\2\u0236\u0232\3\2\2\2\u0236\u0234\3\2\2\2\u0237"+
		"V\3\2\2\2\u0238\u0239\7-\2\2\u0239\u023a\7-\2\2\u023aX\3\2\2\2\u023b\u023c"+
		"\7/\2\2\u023c\u023d\7/\2\2\u023dZ\3\2\2\2\u023e\u023f\7}\2\2\u023f\\\3"+
		"\2\2\2\u0240\u0241\7\177\2\2\u0241^\3\2\2\2\u0242\u0243\7*\2\2\u0243`"+
		"\3\2\2\2\u0244\u0245\7+\2\2\u0245b\3\2\2\2\u0246\u0247\7]\2\2\u0247d\3"+
		"\2\2\2\u0248\u0249\7_\2\2\u0249f\3\2\2\2\u024a\u024b\7=\2\2\u024bh\3\2"+
		"\2\2\u024c\u024d\7<\2\2\u024dj\3\2\2\2\u024e\u024f\7.\2\2\u024fl\3\2\2"+
		"\2\u0250\u0251\7\60\2\2\u0251n\3\2\2\2\u0252\u0253\7\60\2\2\u0253\u0254"+
		"\7\60\2\2\u0254\u0255\7\60\2\2\u0255p\3\2\2\2\u0256\u0257\7-\2\2\u0257"+
		"r\3\2\2\2\u0258\u0259\7/\2\2\u0259t\3\2\2\2\u025a\u025b\7,\2\2\u025bv"+
		"\3\2\2\2\u025c\u025d\7\61\2\2\u025dx\3\2\2\2\u025e\u025f\7(\2\2\u025f"+
		"z\3\2\2\2\u0260\u0261\7~\2\2\u0261|\3\2\2\2\u0262\u0263\7`\2\2\u0263~"+
		"\3\2\2\2\u0264\u0265\7(\2\2\u0265\u0266\7(\2\2\u0266\u0080\3\2\2\2\u0267"+
		"\u0268\7~\2\2\u0268\u0269\7~\2\2\u0269\u0082\3\2\2\2\u026a\u026b\7A\2"+
		"\2\u026b\u0084\3\2\2\2\u026c\u026d\7\'\2\2\u026d\u0086\3\2\2\2\60\2\u008a"+
		"\u008c\u0094\u009b\u009d\u00a7\u00aa\u00b1\u00b4\u00b7\u00bd\u00c0\u00c5"+
		"\u00ca\u00cc\u00d1\u00d7\u00db\u00de\u00e4\u00e7\u00ea\u00ef\u00f3\u00f8"+
		"\u00fb\u00fe\u0103\u0108\u010f\u011a\u012d\u0131\u013b\u013f\u01ae\u01be"+
		"\u01cd\u01ed\u0202\u021c\u0223\u0229\u0230\u0236";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}